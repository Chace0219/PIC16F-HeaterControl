

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 01 23:51:24 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	swtext1,local,class=CONST,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 1.42
    56                           ; Generated 13/04/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F1829 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  0118                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011D                     	;# 
   152  011E                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  018E                     	;# 
   156  0191                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0194                     	;# 
   163  0195                     	;# 
   164  0196                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  0219                     	;# 
   192  021A                     	;# 
   193  021B                     	;# 
   194  021C                     	;# 
   195  021D                     	;# 
   196  021E                     	;# 
   197  021F                     	;# 
   198  0291                     	;# 
   199  0291                     	;# 
   200  0292                     	;# 
   201  0293                     	;# 
   202  0294                     	;# 
   203  0295                     	;# 
   204  0295                     	;# 
   205  0296                     	;# 
   206  0298                     	;# 
   207  0298                     	;# 
   208  0299                     	;# 
   209  029A                     	;# 
   210  029B                     	;# 
   211  029C                     	;# 
   212  029D                     	;# 
   213  029E                     	;# 
   214  0311                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  0318                     	;# 
   219  0318                     	;# 
   220  0319                     	;# 
   221  031A                     	;# 
   222  038C                     	;# 
   223  038D                     	;# 
   224  038E                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  0394                     	;# 
   229  0395                     	;# 
   230  0396                     	;# 
   231  039A                     	;# 
   232  039C                     	;# 
   233  039D                     	;# 
   234  039E                     	;# 
   235  039F                     	;# 
   236  0415                     	;# 
   237  0416                     	;# 
   238  0417                     	;# 
   239  041C                     	;# 
   240  041D                     	;# 
   241  041E                     	;# 
   242  0FE4                     	;# 
   243  0FE5                     	;# 
   244  0FE6                     	;# 
   245  0FE7                     	;# 
   246  0FE8                     	;# 
   247  0FE9                     	;# 
   248  0FEA                     	;# 
   249  0FEB                     	;# 
   250  0FED                     	;# 
   251  0FEE                     	;# 
   252  0FEF                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  0111                     	;# 
   305  0112                     	;# 
   306  0113                     	;# 
   307  0114                     	;# 
   308  0115                     	;# 
   309  0116                     	;# 
   310  0117                     	;# 
   311  0118                     	;# 
   312  0119                     	;# 
   313  011A                     	;# 
   314  011B                     	;# 
   315  011D                     	;# 
   316  011E                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  018E                     	;# 
   320  0191                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0194                     	;# 
   327  0195                     	;# 
   328  0196                     	;# 
   329  0199                     	;# 
   330  019A                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019C                     	;# 
   334  019D                     	;# 
   335  019E                     	;# 
   336  019F                     	;# 
   337  020C                     	;# 
   338  020D                     	;# 
   339  020E                     	;# 
   340  0211                     	;# 
   341  0211                     	;# 
   342  0212                     	;# 
   343  0212                     	;# 
   344  0213                     	;# 
   345  0213                     	;# 
   346  0214                     	;# 
   347  0214                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0217                     	;# 
   355  0219                     	;# 
   356  021A                     	;# 
   357  021B                     	;# 
   358  021C                     	;# 
   359  021D                     	;# 
   360  021E                     	;# 
   361  021F                     	;# 
   362  0291                     	;# 
   363  0291                     	;# 
   364  0292                     	;# 
   365  0293                     	;# 
   366  0294                     	;# 
   367  0295                     	;# 
   368  0295                     	;# 
   369  0296                     	;# 
   370  0298                     	;# 
   371  0298                     	;# 
   372  0299                     	;# 
   373  029A                     	;# 
   374  029B                     	;# 
   375  029C                     	;# 
   376  029D                     	;# 
   377  029E                     	;# 
   378  0311                     	;# 
   379  0311                     	;# 
   380  0312                     	;# 
   381  0313                     	;# 
   382  0318                     	;# 
   383  0318                     	;# 
   384  0319                     	;# 
   385  031A                     	;# 
   386  038C                     	;# 
   387  038D                     	;# 
   388  038E                     	;# 
   389  0391                     	;# 
   390  0392                     	;# 
   391  0393                     	;# 
   392  0394                     	;# 
   393  0395                     	;# 
   394  0396                     	;# 
   395  039A                     	;# 
   396  039C                     	;# 
   397  039D                     	;# 
   398  039E                     	;# 
   399  039F                     	;# 
   400  0415                     	;# 
   401  0416                     	;# 
   402  0417                     	;# 
   403  041C                     	;# 
   404  041D                     	;# 
   405  041E                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001E                     	;# 
   446  001F                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  0111                     	;# 
   469  0112                     	;# 
   470  0113                     	;# 
   471  0114                     	;# 
   472  0115                     	;# 
   473  0116                     	;# 
   474  0117                     	;# 
   475  0118                     	;# 
   476  0119                     	;# 
   477  011A                     	;# 
   478  011B                     	;# 
   479  011D                     	;# 
   480  011E                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483  018E                     	;# 
   484  0191                     	;# 
   485  0191                     	;# 
   486  0192                     	;# 
   487  0193                     	;# 
   488  0193                     	;# 
   489  0193                     	;# 
   490  0194                     	;# 
   491  0195                     	;# 
   492  0196                     	;# 
   493  0199                     	;# 
   494  019A                     	;# 
   495  019B                     	;# 
   496  019B                     	;# 
   497  019C                     	;# 
   498  019D                     	;# 
   499  019E                     	;# 
   500  019F                     	;# 
   501  020C                     	;# 
   502  020D                     	;# 
   503  020E                     	;# 
   504  0211                     	;# 
   505  0211                     	;# 
   506  0212                     	;# 
   507  0212                     	;# 
   508  0213                     	;# 
   509  0213                     	;# 
   510  0214                     	;# 
   511  0214                     	;# 
   512  0215                     	;# 
   513  0215                     	;# 
   514  0215                     	;# 
   515  0216                     	;# 
   516  0216                     	;# 
   517  0217                     	;# 
   518  0217                     	;# 
   519  0219                     	;# 
   520  021A                     	;# 
   521  021B                     	;# 
   522  021C                     	;# 
   523  021D                     	;# 
   524  021E                     	;# 
   525  021F                     	;# 
   526  0291                     	;# 
   527  0291                     	;# 
   528  0292                     	;# 
   529  0293                     	;# 
   530  0294                     	;# 
   531  0295                     	;# 
   532  0295                     	;# 
   533  0296                     	;# 
   534  0298                     	;# 
   535  0298                     	;# 
   536  0299                     	;# 
   537  029A                     	;# 
   538  029B                     	;# 
   539  029C                     	;# 
   540  029D                     	;# 
   541  029E                     	;# 
   542  0311                     	;# 
   543  0311                     	;# 
   544  0312                     	;# 
   545  0313                     	;# 
   546  0318                     	;# 
   547  0318                     	;# 
   548  0319                     	;# 
   549  031A                     	;# 
   550  038C                     	;# 
   551  038D                     	;# 
   552  038E                     	;# 
   553  0391                     	;# 
   554  0392                     	;# 
   555  0393                     	;# 
   556  0394                     	;# 
   557  0395                     	;# 
   558  0396                     	;# 
   559  039A                     	;# 
   560  039C                     	;# 
   561  039D                     	;# 
   562  039E                     	;# 
   563  039F                     	;# 
   564  0415                     	;# 
   565  0416                     	;# 
   566  0417                     	;# 
   567  041C                     	;# 
   568  041D                     	;# 
   569  041E                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000D                     	;# 
   595  000E                     	;# 
   596  0011                     	;# 
   597  0012                     	;# 
   598  0013                     	;# 
   599  0014                     	;# 
   600  0015                     	;# 
   601  0016                     	;# 
   602  0016                     	;# 
   603  0017                     	;# 
   604  0018                     	;# 
   605  0019                     	;# 
   606  001A                     	;# 
   607  001B                     	;# 
   608  001C                     	;# 
   609  001E                     	;# 
   610  001F                     	;# 
   611  008C                     	;# 
   612  008D                     	;# 
   613  008E                     	;# 
   614  0091                     	;# 
   615  0092                     	;# 
   616  0093                     	;# 
   617  0094                     	;# 
   618  0095                     	;# 
   619  0096                     	;# 
   620  0097                     	;# 
   621  0098                     	;# 
   622  0099                     	;# 
   623  009A                     	;# 
   624  009B                     	;# 
   625  009B                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  010C                     	;# 
   630  010D                     	;# 
   631  010E                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0118                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011B                     	;# 
   643  011D                     	;# 
   644  011E                     	;# 
   645  018C                     	;# 
   646  018D                     	;# 
   647  018E                     	;# 
   648  0191                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0194                     	;# 
   655  0195                     	;# 
   656  0196                     	;# 
   657  0199                     	;# 
   658  019A                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019C                     	;# 
   662  019D                     	;# 
   663  019E                     	;# 
   664  019F                     	;# 
   665  020C                     	;# 
   666  020D                     	;# 
   667  020E                     	;# 
   668  0211                     	;# 
   669  0211                     	;# 
   670  0212                     	;# 
   671  0212                     	;# 
   672  0213                     	;# 
   673  0213                     	;# 
   674  0214                     	;# 
   675  0214                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0216                     	;# 
   680  0216                     	;# 
   681  0217                     	;# 
   682  0217                     	;# 
   683  0219                     	;# 
   684  021A                     	;# 
   685  021B                     	;# 
   686  021C                     	;# 
   687  021D                     	;# 
   688  021E                     	;# 
   689  021F                     	;# 
   690  0291                     	;# 
   691  0291                     	;# 
   692  0292                     	;# 
   693  0293                     	;# 
   694  0294                     	;# 
   695  0295                     	;# 
   696  0295                     	;# 
   697  0296                     	;# 
   698  0298                     	;# 
   699  0298                     	;# 
   700  0299                     	;# 
   701  029A                     	;# 
   702  029B                     	;# 
   703  029C                     	;# 
   704  029D                     	;# 
   705  029E                     	;# 
   706  0311                     	;# 
   707  0311                     	;# 
   708  0312                     	;# 
   709  0313                     	;# 
   710  0318                     	;# 
   711  0318                     	;# 
   712  0319                     	;# 
   713  031A                     	;# 
   714  038C                     	;# 
   715  038D                     	;# 
   716  038E                     	;# 
   717  0391                     	;# 
   718  0392                     	;# 
   719  0393                     	;# 
   720  0394                     	;# 
   721  0395                     	;# 
   722  0396                     	;# 
   723  039A                     	;# 
   724  039C                     	;# 
   725  039D                     	;# 
   726  039E                     	;# 
   727  039F                     	;# 
   728  0415                     	;# 
   729  0416                     	;# 
   730  0417                     	;# 
   731  041C                     	;# 
   732  041D                     	;# 
   733  041E                     	;# 
   734  0FE4                     	;# 
   735  0FE5                     	;# 
   736  0FE6                     	;# 
   737  0FE7                     	;# 
   738  0FE8                     	;# 
   739  0FE9                     	;# 
   740  0FEA                     	;# 
   741  0FEB                     	;# 
   742  0FED                     	;# 
   743  0FEE                     	;# 
   744  0FEF                     	;# 
   745  0000                     	;# 
   746  0001                     	;# 
   747  0002                     	;# 
   748  0003                     	;# 
   749  0004                     	;# 
   750  0005                     	;# 
   751  0006                     	;# 
   752  0007                     	;# 
   753  0008                     	;# 
   754  0009                     	;# 
   755  000A                     	;# 
   756  000B                     	;# 
   757  000C                     	;# 
   758  000D                     	;# 
   759  000E                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0014                     	;# 
   764  0015                     	;# 
   765  0016                     	;# 
   766  0016                     	;# 
   767  0017                     	;# 
   768  0018                     	;# 
   769  0019                     	;# 
   770  001A                     	;# 
   771  001B                     	;# 
   772  001C                     	;# 
   773  001E                     	;# 
   774  001F                     	;# 
   775  008C                     	;# 
   776  008D                     	;# 
   777  008E                     	;# 
   778  0091                     	;# 
   779  0092                     	;# 
   780  0093                     	;# 
   781  0094                     	;# 
   782  0095                     	;# 
   783  0096                     	;# 
   784  0097                     	;# 
   785  0098                     	;# 
   786  0099                     	;# 
   787  009A                     	;# 
   788  009B                     	;# 
   789  009B                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009E                     	;# 
   793  010C                     	;# 
   794  010D                     	;# 
   795  010E                     	;# 
   796  0111                     	;# 
   797  0112                     	;# 
   798  0113                     	;# 
   799  0114                     	;# 
   800  0115                     	;# 
   801  0116                     	;# 
   802  0117                     	;# 
   803  0118                     	;# 
   804  0119                     	;# 
   805  011A                     	;# 
   806  011B                     	;# 
   807  011D                     	;# 
   808  011E                     	;# 
   809  018C                     	;# 
   810  018D                     	;# 
   811  018E                     	;# 
   812  0191                     	;# 
   813  0191                     	;# 
   814  0192                     	;# 
   815  0193                     	;# 
   816  0193                     	;# 
   817  0193                     	;# 
   818  0194                     	;# 
   819  0195                     	;# 
   820  0196                     	;# 
   821  0199                     	;# 
   822  019A                     	;# 
   823  019B                     	;# 
   824  019B                     	;# 
   825  019C                     	;# 
   826  019D                     	;# 
   827  019E                     	;# 
   828  019F                     	;# 
   829  020C                     	;# 
   830  020D                     	;# 
   831  020E                     	;# 
   832  0211                     	;# 
   833  0211                     	;# 
   834  0212                     	;# 
   835  0212                     	;# 
   836  0213                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0216                     	;# 
   844  0216                     	;# 
   845  0217                     	;# 
   846  0217                     	;# 
   847  0219                     	;# 
   848  021A                     	;# 
   849  021B                     	;# 
   850  021C                     	;# 
   851  021D                     	;# 
   852  021E                     	;# 
   853  021F                     	;# 
   854  0291                     	;# 
   855  0291                     	;# 
   856  0292                     	;# 
   857  0293                     	;# 
   858  0294                     	;# 
   859  0295                     	;# 
   860  0295                     	;# 
   861  0296                     	;# 
   862  0298                     	;# 
   863  0298                     	;# 
   864  0299                     	;# 
   865  029A                     	;# 
   866  029B                     	;# 
   867  029C                     	;# 
   868  029D                     	;# 
   869  029E                     	;# 
   870  0311                     	;# 
   871  0311                     	;# 
   872  0312                     	;# 
   873  0313                     	;# 
   874  0318                     	;# 
   875  0318                     	;# 
   876  0319                     	;# 
   877  031A                     	;# 
   878  038C                     	;# 
   879  038D                     	;# 
   880  038E                     	;# 
   881  0391                     	;# 
   882  0392                     	;# 
   883  0393                     	;# 
   884  0394                     	;# 
   885  0395                     	;# 
   886  0396                     	;# 
   887  039A                     	;# 
   888  039C                     	;# 
   889  039D                     	;# 
   890  039E                     	;# 
   891  039F                     	;# 
   892  0415                     	;# 
   893  0416                     	;# 
   894  0417                     	;# 
   895  041C                     	;# 
   896  041D                     	;# 
   897  041E                     	;# 
   898  0FE4                     	;# 
   899  0FE5                     	;# 
   900  0FE6                     	;# 
   901  0FE7                     	;# 
   902  0FE8                     	;# 
   903  0FE9                     	;# 
   904  0FEA                     	;# 
   905  0FEB                     	;# 
   906  0FED                     	;# 
   907  0FEE                     	;# 
   908  0FEF                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0008                     	;# 
   918  0009                     	;# 
   919  000A                     	;# 
   920  000B                     	;# 
   921  000C                     	;# 
   922  000D                     	;# 
   923  000E                     	;# 
   924  0011                     	;# 
   925  0012                     	;# 
   926  0013                     	;# 
   927  0014                     	;# 
   928  0015                     	;# 
   929  0016                     	;# 
   930  0016                     	;# 
   931  0017                     	;# 
   932  0018                     	;# 
   933  0019                     	;# 
   934  001A                     	;# 
   935  001B                     	;# 
   936  001C                     	;# 
   937  001E                     	;# 
   938  001F                     	;# 
   939  008C                     	;# 
   940  008D                     	;# 
   941  008E                     	;# 
   942  0091                     	;# 
   943  0092                     	;# 
   944  0093                     	;# 
   945  0094                     	;# 
   946  0095                     	;# 
   947  0096                     	;# 
   948  0097                     	;# 
   949  0098                     	;# 
   950  0099                     	;# 
   951  009A                     	;# 
   952  009B                     	;# 
   953  009B                     	;# 
   954  009C                     	;# 
   955  009D                     	;# 
   956  009E                     	;# 
   957  010C                     	;# 
   958  010D                     	;# 
   959  010E                     	;# 
   960  0111                     	;# 
   961  0112                     	;# 
   962  0113                     	;# 
   963  0114                     	;# 
   964  0115                     	;# 
   965  0116                     	;# 
   966  0117                     	;# 
   967  0118                     	;# 
   968  0119                     	;# 
   969  011A                     	;# 
   970  011B                     	;# 
   971  011D                     	;# 
   972  011E                     	;# 
   973  018C                     	;# 
   974  018D                     	;# 
   975  018E                     	;# 
   976  0191                     	;# 
   977  0191                     	;# 
   978  0192                     	;# 
   979  0193                     	;# 
   980  0193                     	;# 
   981  0193                     	;# 
   982  0194                     	;# 
   983  0195                     	;# 
   984  0196                     	;# 
   985  0199                     	;# 
   986  019A                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019C                     	;# 
   990  019D                     	;# 
   991  019E                     	;# 
   992  019F                     	;# 
   993  020C                     	;# 
   994  020D                     	;# 
   995  020E                     	;# 
   996  0211                     	;# 
   997  0211                     	;# 
   998  0212                     	;# 
   999  0212                     	;# 
  1000  0213                     	;# 
  1001  0213                     	;# 
  1002  0214                     	;# 
  1003  0214                     	;# 
  1004  0215                     	;# 
  1005  0215                     	;# 
  1006  0215                     	;# 
  1007  0216                     	;# 
  1008  0216                     	;# 
  1009  0217                     	;# 
  1010  0217                     	;# 
  1011  0219                     	;# 
  1012  021A                     	;# 
  1013  021B                     	;# 
  1014  021C                     	;# 
  1015  021D                     	;# 
  1016  021E                     	;# 
  1017  021F                     	;# 
  1018  0291                     	;# 
  1019  0291                     	;# 
  1020  0292                     	;# 
  1021  0293                     	;# 
  1022  0294                     	;# 
  1023  0295                     	;# 
  1024  0295                     	;# 
  1025  0296                     	;# 
  1026  0298                     	;# 
  1027  0298                     	;# 
  1028  0299                     	;# 
  1029  029A                     	;# 
  1030  029B                     	;# 
  1031  029C                     	;# 
  1032  029D                     	;# 
  1033  029E                     	;# 
  1034  0311                     	;# 
  1035  0311                     	;# 
  1036  0312                     	;# 
  1037  0313                     	;# 
  1038  0318                     	;# 
  1039  0318                     	;# 
  1040  0319                     	;# 
  1041  031A                     	;# 
  1042  038C                     	;# 
  1043  038D                     	;# 
  1044  038E                     	;# 
  1045  0391                     	;# 
  1046  0392                     	;# 
  1047  0393                     	;# 
  1048  0394                     	;# 
  1049  0395                     	;# 
  1050  0396                     	;# 
  1051  039A                     	;# 
  1052  039C                     	;# 
  1053  039D                     	;# 
  1054  039E                     	;# 
  1055  039F                     	;# 
  1056  0415                     	;# 
  1057  0416                     	;# 
  1058  0417                     	;# 
  1059  041C                     	;# 
  1060  041D                     	;# 
  1061  041E                     	;# 
  1062  0FE4                     	;# 
  1063  0FE5                     	;# 
  1064  0FE6                     	;# 
  1065  0FE7                     	;# 
  1066  0FE8                     	;# 
  1067  0FE9                     	;# 
  1068  0FEA                     	;# 
  1069  0FEB                     	;# 
  1070  0FED                     	;# 
  1071  0FEE                     	;# 
  1072  0FEF                     	;# 
  1073  0000                     	;# 
  1074  0001                     	;# 
  1075  0002                     	;# 
  1076  0003                     	;# 
  1077  0004                     	;# 
  1078  0005                     	;# 
  1079  0006                     	;# 
  1080  0007                     	;# 
  1081  0008                     	;# 
  1082  0009                     	;# 
  1083  000A                     	;# 
  1084  000B                     	;# 
  1085  000C                     	;# 
  1086  000D                     	;# 
  1087  000E                     	;# 
  1088  0011                     	;# 
  1089  0012                     	;# 
  1090  0013                     	;# 
  1091  0014                     	;# 
  1092  0015                     	;# 
  1093  0016                     	;# 
  1094  0016                     	;# 
  1095  0017                     	;# 
  1096  0018                     	;# 
  1097  0019                     	;# 
  1098  001A                     	;# 
  1099  001B                     	;# 
  1100  001C                     	;# 
  1101  001E                     	;# 
  1102  001F                     	;# 
  1103  008C                     	;# 
  1104  008D                     	;# 
  1105  008E                     	;# 
  1106  0091                     	;# 
  1107  0092                     	;# 
  1108  0093                     	;# 
  1109  0094                     	;# 
  1110  0095                     	;# 
  1111  0096                     	;# 
  1112  0097                     	;# 
  1113  0098                     	;# 
  1114  0099                     	;# 
  1115  009A                     	;# 
  1116  009B                     	;# 
  1117  009B                     	;# 
  1118  009C                     	;# 
  1119  009D                     	;# 
  1120  009E                     	;# 
  1121  010C                     	;# 
  1122  010D                     	;# 
  1123  010E                     	;# 
  1124  0111                     	;# 
  1125  0112                     	;# 
  1126  0113                     	;# 
  1127  0114                     	;# 
  1128  0115                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  0118                     	;# 
  1132  0119                     	;# 
  1133  011A                     	;# 
  1134  011B                     	;# 
  1135  011D                     	;# 
  1136  011E                     	;# 
  1137  018C                     	;# 
  1138  018D                     	;# 
  1139  018E                     	;# 
  1140  0191                     	;# 
  1141  0191                     	;# 
  1142  0192                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0193                     	;# 
  1146  0194                     	;# 
  1147  0195                     	;# 
  1148  0196                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019C                     	;# 
  1154  019D                     	;# 
  1155  019E                     	;# 
  1156  019F                     	;# 
  1157  020C                     	;# 
  1158  020D                     	;# 
  1159  020E                     	;# 
  1160  0211                     	;# 
  1161  0211                     	;# 
  1162  0212                     	;# 
  1163  0212                     	;# 
  1164  0213                     	;# 
  1165  0213                     	;# 
  1166  0214                     	;# 
  1167  0214                     	;# 
  1168  0215                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0216                     	;# 
  1172  0216                     	;# 
  1173  0217                     	;# 
  1174  0217                     	;# 
  1175  0219                     	;# 
  1176  021A                     	;# 
  1177  021B                     	;# 
  1178  021C                     	;# 
  1179  021D                     	;# 
  1180  021E                     	;# 
  1181  021F                     	;# 
  1182  0291                     	;# 
  1183  0291                     	;# 
  1184  0292                     	;# 
  1185  0293                     	;# 
  1186  0294                     	;# 
  1187  0295                     	;# 
  1188  0295                     	;# 
  1189  0296                     	;# 
  1190  0298                     	;# 
  1191  0298                     	;# 
  1192  0299                     	;# 
  1193  029A                     	;# 
  1194  029B                     	;# 
  1195  029C                     	;# 
  1196  029D                     	;# 
  1197  029E                     	;# 
  1198  0311                     	;# 
  1199  0311                     	;# 
  1200  0312                     	;# 
  1201  0313                     	;# 
  1202  0318                     	;# 
  1203  0318                     	;# 
  1204  0319                     	;# 
  1205  031A                     	;# 
  1206  038C                     	;# 
  1207  038D                     	;# 
  1208  038E                     	;# 
  1209  0391                     	;# 
  1210  0392                     	;# 
  1211  0393                     	;# 
  1212  0394                     	;# 
  1213  0395                     	;# 
  1214  0396                     	;# 
  1215  039A                     	;# 
  1216  039C                     	;# 
  1217  039D                     	;# 
  1218  039E                     	;# 
  1219  039F                     	;# 
  1220  0415                     	;# 
  1221  0416                     	;# 
  1222  0417                     	;# 
  1223  041C                     	;# 
  1224  041D                     	;# 
  1225  041E                     	;# 
  1226  0FE4                     	;# 
  1227  0FE5                     	;# 
  1228  0FE6                     	;# 
  1229  0FE7                     	;# 
  1230  0FE8                     	;# 
  1231  0FE9                     	;# 
  1232  0FEA                     	;# 
  1233  0FEB                     	;# 
  1234  0FED                     	;# 
  1235  0FEE                     	;# 
  1236  0FEF                     	;# 
  1237  0000                     	;# 
  1238  0001                     	;# 
  1239  0002                     	;# 
  1240  0003                     	;# 
  1241  0004                     	;# 
  1242  0005                     	;# 
  1243  0006                     	;# 
  1244  0007                     	;# 
  1245  0008                     	;# 
  1246  0009                     	;# 
  1247  000A                     	;# 
  1248  000B                     	;# 
  1249  000C                     	;# 
  1250  000D                     	;# 
  1251  000E                     	;# 
  1252  0011                     	;# 
  1253  0012                     	;# 
  1254  0013                     	;# 
  1255  0014                     	;# 
  1256  0015                     	;# 
  1257  0016                     	;# 
  1258  0016                     	;# 
  1259  0017                     	;# 
  1260  0018                     	;# 
  1261  0019                     	;# 
  1262  001A                     	;# 
  1263  001B                     	;# 
  1264  001C                     	;# 
  1265  001E                     	;# 
  1266  001F                     	;# 
  1267  008C                     	;# 
  1268  008D                     	;# 
  1269  008E                     	;# 
  1270  0091                     	;# 
  1271  0092                     	;# 
  1272  0093                     	;# 
  1273  0094                     	;# 
  1274  0095                     	;# 
  1275  0096                     	;# 
  1276  0097                     	;# 
  1277  0098                     	;# 
  1278  0099                     	;# 
  1279  009A                     	;# 
  1280  009B                     	;# 
  1281  009B                     	;# 
  1282  009C                     	;# 
  1283  009D                     	;# 
  1284  009E                     	;# 
  1285  010C                     	;# 
  1286  010D                     	;# 
  1287  010E                     	;# 
  1288  0111                     	;# 
  1289  0112                     	;# 
  1290  0113                     	;# 
  1291  0114                     	;# 
  1292  0115                     	;# 
  1293  0116                     	;# 
  1294  0117                     	;# 
  1295  0118                     	;# 
  1296  0119                     	;# 
  1297  011A                     	;# 
  1298  011B                     	;# 
  1299  011D                     	;# 
  1300  011E                     	;# 
  1301  018C                     	;# 
  1302  018D                     	;# 
  1303  018E                     	;# 
  1304  0191                     	;# 
  1305  0191                     	;# 
  1306  0192                     	;# 
  1307  0193                     	;# 
  1308  0193                     	;# 
  1309  0193                     	;# 
  1310  0194                     	;# 
  1311  0195                     	;# 
  1312  0196                     	;# 
  1313  0199                     	;# 
  1314  019A                     	;# 
  1315  019B                     	;# 
  1316  019B                     	;# 
  1317  019C                     	;# 
  1318  019D                     	;# 
  1319  019E                     	;# 
  1320  019F                     	;# 
  1321  020C                     	;# 
  1322  020D                     	;# 
  1323  020E                     	;# 
  1324  0211                     	;# 
  1325  0211                     	;# 
  1326  0212                     	;# 
  1327  0212                     	;# 
  1328  0213                     	;# 
  1329  0213                     	;# 
  1330  0214                     	;# 
  1331  0214                     	;# 
  1332  0215                     	;# 
  1333  0215                     	;# 
  1334  0215                     	;# 
  1335  0216                     	;# 
  1336  0216                     	;# 
  1337  0217                     	;# 
  1338  0217                     	;# 
  1339  0219                     	;# 
  1340  021A                     	;# 
  1341  021B                     	;# 
  1342  021C                     	;# 
  1343  021D                     	;# 
  1344  021E                     	;# 
  1345  021F                     	;# 
  1346  0291                     	;# 
  1347  0291                     	;# 
  1348  0292                     	;# 
  1349  0293                     	;# 
  1350  0294                     	;# 
  1351  0295                     	;# 
  1352  0295                     	;# 
  1353  0296                     	;# 
  1354  0298                     	;# 
  1355  0298                     	;# 
  1356  0299                     	;# 
  1357  029A                     	;# 
  1358  029B                     	;# 
  1359  029C                     	;# 
  1360  029D                     	;# 
  1361  029E                     	;# 
  1362  0311                     	;# 
  1363  0311                     	;# 
  1364  0312                     	;# 
  1365  0313                     	;# 
  1366  0318                     	;# 
  1367  0318                     	;# 
  1368  0319                     	;# 
  1369  031A                     	;# 
  1370  038C                     	;# 
  1371  038D                     	;# 
  1372  038E                     	;# 
  1373  0391                     	;# 
  1374  0392                     	;# 
  1375  0393                     	;# 
  1376  0394                     	;# 
  1377  0395                     	;# 
  1378  0396                     	;# 
  1379  039A                     	;# 
  1380  039C                     	;# 
  1381  039D                     	;# 
  1382  039E                     	;# 
  1383  039F                     	;# 
  1384  0415                     	;# 
  1385  0416                     	;# 
  1386  0417                     	;# 
  1387  041C                     	;# 
  1388  041D                     	;# 
  1389  041E                     	;# 
  1390  0FE4                     	;# 
  1391  0FE5                     	;# 
  1392  0FE6                     	;# 
  1393  0FE7                     	;# 
  1394  0FE8                     	;# 
  1395  0FE9                     	;# 
  1396  0FEA                     	;# 
  1397  0FEB                     	;# 
  1398  0FED                     	;# 
  1399  0FEE                     	;# 
  1400  0FEF                     	;# 
  1401  0000                     	;# 
  1402  0001                     	;# 
  1403  0002                     	;# 
  1404  0003                     	;# 
  1405  0004                     	;# 
  1406  0005                     	;# 
  1407  0006                     	;# 
  1408  0007                     	;# 
  1409  0008                     	;# 
  1410  0009                     	;# 
  1411  000A                     	;# 
  1412  000B                     	;# 
  1413  000C                     	;# 
  1414  000D                     	;# 
  1415  000E                     	;# 
  1416  0011                     	;# 
  1417  0012                     	;# 
  1418  0013                     	;# 
  1419  0014                     	;# 
  1420  0015                     	;# 
  1421  0016                     	;# 
  1422  0016                     	;# 
  1423  0017                     	;# 
  1424  0018                     	;# 
  1425  0019                     	;# 
  1426  001A                     	;# 
  1427  001B                     	;# 
  1428  001C                     	;# 
  1429  001E                     	;# 
  1430  001F                     	;# 
  1431  008C                     	;# 
  1432  008D                     	;# 
  1433  008E                     	;# 
  1434  0091                     	;# 
  1435  0092                     	;# 
  1436  0093                     	;# 
  1437  0094                     	;# 
  1438  0095                     	;# 
  1439  0096                     	;# 
  1440  0097                     	;# 
  1441  0098                     	;# 
  1442  0099                     	;# 
  1443  009A                     	;# 
  1444  009B                     	;# 
  1445  009B                     	;# 
  1446  009C                     	;# 
  1447  009D                     	;# 
  1448  009E                     	;# 
  1449  010C                     	;# 
  1450  010D                     	;# 
  1451  010E                     	;# 
  1452  0111                     	;# 
  1453  0112                     	;# 
  1454  0113                     	;# 
  1455  0114                     	;# 
  1456  0115                     	;# 
  1457  0116                     	;# 
  1458  0117                     	;# 
  1459  0118                     	;# 
  1460  0119                     	;# 
  1461  011A                     	;# 
  1462  011B                     	;# 
  1463  011D                     	;# 
  1464  011E                     	;# 
  1465  018C                     	;# 
  1466  018D                     	;# 
  1467  018E                     	;# 
  1468  0191                     	;# 
  1469  0191                     	;# 
  1470  0192                     	;# 
  1471  0193                     	;# 
  1472  0193                     	;# 
  1473  0193                     	;# 
  1474  0194                     	;# 
  1475  0195                     	;# 
  1476  0196                     	;# 
  1477  0199                     	;# 
  1478  019A                     	;# 
  1479  019B                     	;# 
  1480  019B                     	;# 
  1481  019C                     	;# 
  1482  019D                     	;# 
  1483  019E                     	;# 
  1484  019F                     	;# 
  1485  020C                     	;# 
  1486  020D                     	;# 
  1487  020E                     	;# 
  1488  0211                     	;# 
  1489  0211                     	;# 
  1490  0212                     	;# 
  1491  0212                     	;# 
  1492  0213                     	;# 
  1493  0213                     	;# 
  1494  0214                     	;# 
  1495  0214                     	;# 
  1496  0215                     	;# 
  1497  0215                     	;# 
  1498  0215                     	;# 
  1499  0216                     	;# 
  1500  0216                     	;# 
  1501  0217                     	;# 
  1502  0217                     	;# 
  1503  0219                     	;# 
  1504  021A                     	;# 
  1505  021B                     	;# 
  1506  021C                     	;# 
  1507  021D                     	;# 
  1508  021E                     	;# 
  1509  021F                     	;# 
  1510  0291                     	;# 
  1511  0291                     	;# 
  1512  0292                     	;# 
  1513  0293                     	;# 
  1514  0294                     	;# 
  1515  0295                     	;# 
  1516  0295                     	;# 
  1517  0296                     	;# 
  1518  0298                     	;# 
  1519  0298                     	;# 
  1520  0299                     	;# 
  1521  029A                     	;# 
  1522  029B                     	;# 
  1523  029C                     	;# 
  1524  029D                     	;# 
  1525  029E                     	;# 
  1526  0311                     	;# 
  1527  0311                     	;# 
  1528  0312                     	;# 
  1529  0313                     	;# 
  1530  0318                     	;# 
  1531  0318                     	;# 
  1532  0319                     	;# 
  1533  031A                     	;# 
  1534  038C                     	;# 
  1535  038D                     	;# 
  1536  038E                     	;# 
  1537  0391                     	;# 
  1538  0392                     	;# 
  1539  0393                     	;# 
  1540  0394                     	;# 
  1541  0395                     	;# 
  1542  0396                     	;# 
  1543  039A                     	;# 
  1544  039C                     	;# 
  1545  039D                     	;# 
  1546  039E                     	;# 
  1547  039F                     	;# 
  1548  0415                     	;# 
  1549  0416                     	;# 
  1550  0417                     	;# 
  1551  041C                     	;# 
  1552  041D                     	;# 
  1553  041E                     	;# 
  1554  0FE4                     	;# 
  1555  0FE5                     	;# 
  1556  0FE6                     	;# 
  1557  0FE7                     	;# 
  1558  0FE8                     	;# 
  1559  0FE9                     	;# 
  1560  0FEA                     	;# 
  1561  0FEB                     	;# 
  1562  0FED                     	;# 
  1563  0FEE                     	;# 
  1564  0FEF                     	;# 
  1565  0000                     	;# 
  1566  0001                     	;# 
  1567  0002                     	;# 
  1568  0003                     	;# 
  1569  0004                     	;# 
  1570  0005                     	;# 
  1571  0006                     	;# 
  1572  0007                     	;# 
  1573  0008                     	;# 
  1574  0009                     	;# 
  1575  000A                     	;# 
  1576  000B                     	;# 
  1577  000C                     	;# 
  1578  000D                     	;# 
  1579  000E                     	;# 
  1580  0011                     	;# 
  1581  0012                     	;# 
  1582  0013                     	;# 
  1583  0014                     	;# 
  1584  0015                     	;# 
  1585  0016                     	;# 
  1586  0016                     	;# 
  1587  0017                     	;# 
  1588  0018                     	;# 
  1589  0019                     	;# 
  1590  001A                     	;# 
  1591  001B                     	;# 
  1592  001C                     	;# 
  1593  001E                     	;# 
  1594  001F                     	;# 
  1595  008C                     	;# 
  1596  008D                     	;# 
  1597  008E                     	;# 
  1598  0091                     	;# 
  1599  0092                     	;# 
  1600  0093                     	;# 
  1601  0094                     	;# 
  1602  0095                     	;# 
  1603  0096                     	;# 
  1604  0097                     	;# 
  1605  0098                     	;# 
  1606  0099                     	;# 
  1607  009A                     	;# 
  1608  009B                     	;# 
  1609  009B                     	;# 
  1610  009C                     	;# 
  1611  009D                     	;# 
  1612  009E                     	;# 
  1613  010C                     	;# 
  1614  010D                     	;# 
  1615  010E                     	;# 
  1616  0111                     	;# 
  1617  0112                     	;# 
  1618  0113                     	;# 
  1619  0114                     	;# 
  1620  0115                     	;# 
  1621  0116                     	;# 
  1622  0117                     	;# 
  1623  0118                     	;# 
  1624  0119                     	;# 
  1625  011A                     	;# 
  1626  011B                     	;# 
  1627  011D                     	;# 
  1628  011E                     	;# 
  1629  018C                     	;# 
  1630  018D                     	;# 
  1631  018E                     	;# 
  1632  0191                     	;# 
  1633  0191                     	;# 
  1634  0192                     	;# 
  1635  0193                     	;# 
  1636  0193                     	;# 
  1637  0193                     	;# 
  1638  0194                     	;# 
  1639  0195                     	;# 
  1640  0196                     	;# 
  1641  0199                     	;# 
  1642  019A                     	;# 
  1643  019B                     	;# 
  1644  019B                     	;# 
  1645  019C                     	;# 
  1646  019D                     	;# 
  1647  019E                     	;# 
  1648  019F                     	;# 
  1649  020C                     	;# 
  1650  020D                     	;# 
  1651  020E                     	;# 
  1652  0211                     	;# 
  1653  0211                     	;# 
  1654  0212                     	;# 
  1655  0212                     	;# 
  1656  0213                     	;# 
  1657  0213                     	;# 
  1658  0214                     	;# 
  1659  0214                     	;# 
  1660  0215                     	;# 
  1661  0215                     	;# 
  1662  0215                     	;# 
  1663  0216                     	;# 
  1664  0216                     	;# 
  1665  0217                     	;# 
  1666  0217                     	;# 
  1667  0219                     	;# 
  1668  021A                     	;# 
  1669  021B                     	;# 
  1670  021C                     	;# 
  1671  021D                     	;# 
  1672  021E                     	;# 
  1673  021F                     	;# 
  1674  0291                     	;# 
  1675  0291                     	;# 
  1676  0292                     	;# 
  1677  0293                     	;# 
  1678  0294                     	;# 
  1679  0295                     	;# 
  1680  0295                     	;# 
  1681  0296                     	;# 
  1682  0298                     	;# 
  1683  0298                     	;# 
  1684  0299                     	;# 
  1685  029A                     	;# 
  1686  029B                     	;# 
  1687  029C                     	;# 
  1688  029D                     	;# 
  1689  029E                     	;# 
  1690  0311                     	;# 
  1691  0311                     	;# 
  1692  0312                     	;# 
  1693  0313                     	;# 
  1694  0318                     	;# 
  1695  0318                     	;# 
  1696  0319                     	;# 
  1697  031A                     	;# 
  1698  038C                     	;# 
  1699  038D                     	;# 
  1700  038E                     	;# 
  1701  0391                     	;# 
  1702  0392                     	;# 
  1703  0393                     	;# 
  1704  0394                     	;# 
  1705  0395                     	;# 
  1706  0396                     	;# 
  1707  039A                     	;# 
  1708  039C                     	;# 
  1709  039D                     	;# 
  1710  039E                     	;# 
  1711  039F                     	;# 
  1712  0415                     	;# 
  1713  0416                     	;# 
  1714  0417                     	;# 
  1715  041C                     	;# 
  1716  041D                     	;# 
  1717  041E                     	;# 
  1718  0FE4                     	;# 
  1719  0FE5                     	;# 
  1720  0FE6                     	;# 
  1721  0FE7                     	;# 
  1722  0FE8                     	;# 
  1723  0FE9                     	;# 
  1724  0FEA                     	;# 
  1725  0FEB                     	;# 
  1726  0FED                     	;# 
  1727  0FEE                     	;# 
  1728  0FEF                     	;# 
  1729  0000                     	;# 
  1730  0001                     	;# 
  1731  0002                     	;# 
  1732  0003                     	;# 
  1733  0004                     	;# 
  1734  0005                     	;# 
  1735  0006                     	;# 
  1736  0007                     	;# 
  1737  0008                     	;# 
  1738  0009                     	;# 
  1739  000A                     	;# 
  1740  000B                     	;# 
  1741  000C                     	;# 
  1742  000D                     	;# 
  1743  000E                     	;# 
  1744  0011                     	;# 
  1745  0012                     	;# 
  1746  0013                     	;# 
  1747  0014                     	;# 
  1748  0015                     	;# 
  1749  0016                     	;# 
  1750  0016                     	;# 
  1751  0017                     	;# 
  1752  0018                     	;# 
  1753  0019                     	;# 
  1754  001A                     	;# 
  1755  001B                     	;# 
  1756  001C                     	;# 
  1757  001E                     	;# 
  1758  001F                     	;# 
  1759  008C                     	;# 
  1760  008D                     	;# 
  1761  008E                     	;# 
  1762  0091                     	;# 
  1763  0092                     	;# 
  1764  0093                     	;# 
  1765  0094                     	;# 
  1766  0095                     	;# 
  1767  0096                     	;# 
  1768  0097                     	;# 
  1769  0098                     	;# 
  1770  0099                     	;# 
  1771  009A                     	;# 
  1772  009B                     	;# 
  1773  009B                     	;# 
  1774  009C                     	;# 
  1775  009D                     	;# 
  1776  009E                     	;# 
  1777  010C                     	;# 
  1778  010D                     	;# 
  1779  010E                     	;# 
  1780  0111                     	;# 
  1781  0112                     	;# 
  1782  0113                     	;# 
  1783  0114                     	;# 
  1784  0115                     	;# 
  1785  0116                     	;# 
  1786  0117                     	;# 
  1787  0118                     	;# 
  1788  0119                     	;# 
  1789  011A                     	;# 
  1790  011B                     	;# 
  1791  011D                     	;# 
  1792  011E                     	;# 
  1793  018C                     	;# 
  1794  018D                     	;# 
  1795  018E                     	;# 
  1796  0191                     	;# 
  1797  0191                     	;# 
  1798  0192                     	;# 
  1799  0193                     	;# 
  1800  0193                     	;# 
  1801  0193                     	;# 
  1802  0194                     	;# 
  1803  0195                     	;# 
  1804  0196                     	;# 
  1805  0199                     	;# 
  1806  019A                     	;# 
  1807  019B                     	;# 
  1808  019B                     	;# 
  1809  019C                     	;# 
  1810  019D                     	;# 
  1811  019E                     	;# 
  1812  019F                     	;# 
  1813  020C                     	;# 
  1814  020D                     	;# 
  1815  020E                     	;# 
  1816  0211                     	;# 
  1817  0211                     	;# 
  1818  0212                     	;# 
  1819  0212                     	;# 
  1820  0213                     	;# 
  1821  0213                     	;# 
  1822  0214                     	;# 
  1823  0214                     	;# 
  1824  0215                     	;# 
  1825  0215                     	;# 
  1826  0215                     	;# 
  1827  0216                     	;# 
  1828  0216                     	;# 
  1829  0217                     	;# 
  1830  0217                     	;# 
  1831  0219                     	;# 
  1832  021A                     	;# 
  1833  021B                     	;# 
  1834  021C                     	;# 
  1835  021D                     	;# 
  1836  021E                     	;# 
  1837  021F                     	;# 
  1838  0291                     	;# 
  1839  0291                     	;# 
  1840  0292                     	;# 
  1841  0293                     	;# 
  1842  0294                     	;# 
  1843  0295                     	;# 
  1844  0295                     	;# 
  1845  0296                     	;# 
  1846  0298                     	;# 
  1847  0298                     	;# 
  1848  0299                     	;# 
  1849  029A                     	;# 
  1850  029B                     	;# 
  1851  029C                     	;# 
  1852  029D                     	;# 
  1853  029E                     	;# 
  1854  0311                     	;# 
  1855  0311                     	;# 
  1856  0312                     	;# 
  1857  0313                     	;# 
  1858  0318                     	;# 
  1859  0318                     	;# 
  1860  0319                     	;# 
  1861  031A                     	;# 
  1862  038C                     	;# 
  1863  038D                     	;# 
  1864  038E                     	;# 
  1865  0391                     	;# 
  1866  0392                     	;# 
  1867  0393                     	;# 
  1868  0394                     	;# 
  1869  0395                     	;# 
  1870  0396                     	;# 
  1871  039A                     	;# 
  1872  039C                     	;# 
  1873  039D                     	;# 
  1874  039E                     	;# 
  1875  039F                     	;# 
  1876  0415                     	;# 
  1877  0416                     	;# 
  1878  0417                     	;# 
  1879  041C                     	;# 
  1880  041D                     	;# 
  1881  041E                     	;# 
  1882  0FE4                     	;# 
  1883  0FE5                     	;# 
  1884  0FE6                     	;# 
  1885  0FE7                     	;# 
  1886  0FE8                     	;# 
  1887  0FE9                     	;# 
  1888  0FEA                     	;# 
  1889  0FEB                     	;# 
  1890  0FED                     	;# 
  1891  0FEE                     	;# 
  1892  0FEF                     	;# 
  1893  0000                     	;# 
  1894  0001                     	;# 
  1895  0002                     	;# 
  1896  0003                     	;# 
  1897  0004                     	;# 
  1898  0005                     	;# 
  1899  0006                     	;# 
  1900  0007                     	;# 
  1901  0008                     	;# 
  1902  0009                     	;# 
  1903  000A                     	;# 
  1904  000B                     	;# 
  1905  000C                     	;# 
  1906  000D                     	;# 
  1907  000E                     	;# 
  1908  0011                     	;# 
  1909  0012                     	;# 
  1910  0013                     	;# 
  1911  0014                     	;# 
  1912  0015                     	;# 
  1913  0016                     	;# 
  1914  0016                     	;# 
  1915  0017                     	;# 
  1916  0018                     	;# 
  1917  0019                     	;# 
  1918  001A                     	;# 
  1919  001B                     	;# 
  1920  001C                     	;# 
  1921  001E                     	;# 
  1922  001F                     	;# 
  1923  008C                     	;# 
  1924  008D                     	;# 
  1925  008E                     	;# 
  1926  0091                     	;# 
  1927  0092                     	;# 
  1928  0093                     	;# 
  1929  0094                     	;# 
  1930  0095                     	;# 
  1931  0096                     	;# 
  1932  0097                     	;# 
  1933  0098                     	;# 
  1934  0099                     	;# 
  1935  009A                     	;# 
  1936  009B                     	;# 
  1937  009B                     	;# 
  1938  009C                     	;# 
  1939  009D                     	;# 
  1940  009E                     	;# 
  1941  010C                     	;# 
  1942  010D                     	;# 
  1943  010E                     	;# 
  1944  0111                     	;# 
  1945  0112                     	;# 
  1946  0113                     	;# 
  1947  0114                     	;# 
  1948  0115                     	;# 
  1949  0116                     	;# 
  1950  0117                     	;# 
  1951  0118                     	;# 
  1952  0119                     	;# 
  1953  011A                     	;# 
  1954  011B                     	;# 
  1955  011D                     	;# 
  1956  011E                     	;# 
  1957  018C                     	;# 
  1958  018D                     	;# 
  1959  018E                     	;# 
  1960  0191                     	;# 
  1961  0191                     	;# 
  1962  0192                     	;# 
  1963  0193                     	;# 
  1964  0193                     	;# 
  1965  0193                     	;# 
  1966  0194                     	;# 
  1967  0195                     	;# 
  1968  0196                     	;# 
  1969  0199                     	;# 
  1970  019A                     	;# 
  1971  019B                     	;# 
  1972  019B                     	;# 
  1973  019C                     	;# 
  1974  019D                     	;# 
  1975  019E                     	;# 
  1976  019F                     	;# 
  1977  020C                     	;# 
  1978  020D                     	;# 
  1979  020E                     	;# 
  1980  0211                     	;# 
  1981  0211                     	;# 
  1982  0212                     	;# 
  1983  0212                     	;# 
  1984  0213                     	;# 
  1985  0213                     	;# 
  1986  0214                     	;# 
  1987  0214                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0215                     	;# 
  1991  0216                     	;# 
  1992  0216                     	;# 
  1993  0217                     	;# 
  1994  0217                     	;# 
  1995  0219                     	;# 
  1996  021A                     	;# 
  1997  021B                     	;# 
  1998  021C                     	;# 
  1999  021D                     	;# 
  2000  021E                     	;# 
  2001  021F                     	;# 
  2002  0291                     	;# 
  2003  0291                     	;# 
  2004  0292                     	;# 
  2005  0293                     	;# 
  2006  0294                     	;# 
  2007  0295                     	;# 
  2008  0295                     	;# 
  2009  0296                     	;# 
  2010  0298                     	;# 
  2011  0298                     	;# 
  2012  0299                     	;# 
  2013  029A                     	;# 
  2014  029B                     	;# 
  2015  029C                     	;# 
  2016  029D                     	;# 
  2017  029E                     	;# 
  2018  0311                     	;# 
  2019  0311                     	;# 
  2020  0312                     	;# 
  2021  0313                     	;# 
  2022  0318                     	;# 
  2023  0318                     	;# 
  2024  0319                     	;# 
  2025  031A                     	;# 
  2026  038C                     	;# 
  2027  038D                     	;# 
  2028  038E                     	;# 
  2029  0391                     	;# 
  2030  0392                     	;# 
  2031  0393                     	;# 
  2032  0394                     	;# 
  2033  0395                     	;# 
  2034  0396                     	;# 
  2035  039A                     	;# 
  2036  039C                     	;# 
  2037  039D                     	;# 
  2038  039E                     	;# 
  2039  039F                     	;# 
  2040  0415                     	;# 
  2041  0416                     	;# 
  2042  0417                     	;# 
  2043  041C                     	;# 
  2044  041D                     	;# 
  2045  041E                     	;# 
  2046  0FE4                     	;# 
  2047  0FE5                     	;# 
  2048  0FE6                     	;# 
  2049  0FE7                     	;# 
  2050  0FE8                     	;# 
  2051  0FE9                     	;# 
  2052  0FEA                     	;# 
  2053  0FEB                     	;# 
  2054  0FED                     	;# 
  2055  0FEE                     	;# 
  2056  0FEF                     	;# 
  2057  0000                     	;# 
  2058  0001                     	;# 
  2059  0002                     	;# 
  2060  0003                     	;# 
  2061  0004                     	;# 
  2062  0005                     	;# 
  2063  0006                     	;# 
  2064  0007                     	;# 
  2065  0008                     	;# 
  2066  0009                     	;# 
  2067  000A                     	;# 
  2068  000B                     	;# 
  2069  000C                     	;# 
  2070  000D                     	;# 
  2071  000E                     	;# 
  2072  0011                     	;# 
  2073  0012                     	;# 
  2074  0013                     	;# 
  2075  0014                     	;# 
  2076  0015                     	;# 
  2077  0016                     	;# 
  2078  0016                     	;# 
  2079  0017                     	;# 
  2080  0018                     	;# 
  2081  0019                     	;# 
  2082  001A                     	;# 
  2083  001B                     	;# 
  2084  001C                     	;# 
  2085  001E                     	;# 
  2086  001F                     	;# 
  2087  008C                     	;# 
  2088  008D                     	;# 
  2089  008E                     	;# 
  2090  0091                     	;# 
  2091  0092                     	;# 
  2092  0093                     	;# 
  2093  0094                     	;# 
  2094  0095                     	;# 
  2095  0096                     	;# 
  2096  0097                     	;# 
  2097  0098                     	;# 
  2098  0099                     	;# 
  2099  009A                     	;# 
  2100  009B                     	;# 
  2101  009B                     	;# 
  2102  009C                     	;# 
  2103  009D                     	;# 
  2104  009E                     	;# 
  2105  010C                     	;# 
  2106  010D                     	;# 
  2107  010E                     	;# 
  2108  0111                     	;# 
  2109  0112                     	;# 
  2110  0113                     	;# 
  2111  0114                     	;# 
  2112  0115                     	;# 
  2113  0116                     	;# 
  2114  0117                     	;# 
  2115  0118                     	;# 
  2116  0119                     	;# 
  2117  011A                     	;# 
  2118  011B                     	;# 
  2119  011D                     	;# 
  2120  011E                     	;# 
  2121  018C                     	;# 
  2122  018D                     	;# 
  2123  018E                     	;# 
  2124  0191                     	;# 
  2125  0191                     	;# 
  2126  0192                     	;# 
  2127  0193                     	;# 
  2128  0193                     	;# 
  2129  0193                     	;# 
  2130  0194                     	;# 
  2131  0195                     	;# 
  2132  0196                     	;# 
  2133  0199                     	;# 
  2134  019A                     	;# 
  2135  019B                     	;# 
  2136  019B                     	;# 
  2137  019C                     	;# 
  2138  019D                     	;# 
  2139  019E                     	;# 
  2140  019F                     	;# 
  2141  020C                     	;# 
  2142  020D                     	;# 
  2143  020E                     	;# 
  2144  0211                     	;# 
  2145  0211                     	;# 
  2146  0212                     	;# 
  2147  0212                     	;# 
  2148  0213                     	;# 
  2149  0213                     	;# 
  2150  0214                     	;# 
  2151  0214                     	;# 
  2152  0215                     	;# 
  2153  0215                     	;# 
  2154  0215                     	;# 
  2155  0216                     	;# 
  2156  0216                     	;# 
  2157  0217                     	;# 
  2158  0217                     	;# 
  2159  0219                     	;# 
  2160  021A                     	;# 
  2161  021B                     	;# 
  2162  021C                     	;# 
  2163  021D                     	;# 
  2164  021E                     	;# 
  2165  021F                     	;# 
  2166  0291                     	;# 
  2167  0291                     	;# 
  2168  0292                     	;# 
  2169  0293                     	;# 
  2170  0294                     	;# 
  2171  0295                     	;# 
  2172  0295                     	;# 
  2173  0296                     	;# 
  2174  0298                     	;# 
  2175  0298                     	;# 
  2176  0299                     	;# 
  2177  029A                     	;# 
  2178  029B                     	;# 
  2179  029C                     	;# 
  2180  029D                     	;# 
  2181  029E                     	;# 
  2182  0311                     	;# 
  2183  0311                     	;# 
  2184  0312                     	;# 
  2185  0313                     	;# 
  2186  0318                     	;# 
  2187  0318                     	;# 
  2188  0319                     	;# 
  2189  031A                     	;# 
  2190  038C                     	;# 
  2191  038D                     	;# 
  2192  038E                     	;# 
  2193  0391                     	;# 
  2194  0392                     	;# 
  2195  0393                     	;# 
  2196  0394                     	;# 
  2197  0395                     	;# 
  2198  0396                     	;# 
  2199  039A                     	;# 
  2200  039C                     	;# 
  2201  039D                     	;# 
  2202  039E                     	;# 
  2203  039F                     	;# 
  2204  0415                     	;# 
  2205  0416                     	;# 
  2206  0417                     	;# 
  2207  041C                     	;# 
  2208  041D                     	;# 
  2209  041E                     	;# 
  2210  0FE4                     	;# 
  2211  0FE5                     	;# 
  2212  0FE6                     	;# 
  2213  0FE7                     	;# 
  2214  0FE8                     	;# 
  2215  0FE9                     	;# 
  2216  0FEA                     	;# 
  2217  0FEB                     	;# 
  2218  0FED                     	;# 
  2219  0FEE                     	;# 
  2220  0FEF                     	;# 
  2221                           
  2222                           	psect	idataBANK1
  2223  0534                     __pidataBANK1:	
  2224                           
  2225                           ;initializer for LCDsetCursor@F3232
  2226  0534  3400               	retlw	0
  2227  0535  3400               	retlw	0
  2228  0536  3440               	retlw	64
  2229  0537  3400               	retlw	0
  2230  0538  3414               	retlw	20
  2231  0539  3400               	retlw	0
  2232  053A  3454               	retlw	84
  2233  053B  3400               	retlw	0
  2234                           
  2235                           	psect	nvBANK0
  2236  0069                     __pnvBANK0:	
  2237  0069                     _TMR4_InterruptHandler:	
  2238  0069                     	ds	2
  2239  006B                     _TMR2_InterruptHandler:	
  2240  006B                     	ds	2
  2241  006D                     _TMR0_InterruptHandler:	
  2242  006D                     	ds	2
  2243  006F                     _timer0ReloadVal:	
  2244  006F                     	ds	1
  2245  001C                     _T2CONbits	set	28
  2246  001A                     _TMR2	set	26
  2247  001B                     _PR2	set	27
  2248  001C                     _T2CON	set	28
  2249  0015                     _TMR0	set	21
  2250  0013                     _PIR3bits	set	19
  2251  0012                     _PIR2bits	set	18
  2252  000B                     _INTCONbits	set	11
  2253  0011                     _PIR1bits	set	17
  2254  0095                     _OPTION_REG	set	149
  2255  0093                     _PIE3bits	set	147
  2256  0092                     _PIE2bits	set	146
  2257  0091                     _PIE1bits	set	145
  2258  0097                     _WDTCON	set	151
  2259  0098                     _OSCTUNE	set	152
  2260  0099                     _OSCCON	set	153
  2261  0095                     _OPTION_REGbits	set	149
  2262  008E                     _TRISC	set	142
  2263  008D                     _TRISB	set	141
  2264  008C                     _TRISA	set	140
  2265  010E                     _LATCbits	set	270
  2266  011D                     _APFCON0	set	285
  2267  011E                     _APFCON1	set	286
  2268  010E                     _LATC	set	270
  2269  010D                     _LATB	set	269
  2270  010C                     _LATA	set	268
  2271  0196                     _EECON2	set	406
  2272  0193                     _EEDATL	set	403
  2273  0194                     _EEDATH	set	404
  2274  0195                     _EECON1bits	set	405
  2275  0192                     _EEADRH	set	402
  2276  0191                     _EEADRL	set	401
  2277  018C                     _ANSELA	set	396
  2278  018D                     _ANSELB	set	397
  2279  018E                     _ANSELC	set	398
  2280  021C                     _SSP2STATbits	set	540
  2281  0219                     _SSP2BUF	set	537
  2282  021D                     _SSP2CON1bits	set	541
  2283  021A                     _SSP2ADD	set	538
  2284  021D                     _SSP2CON1	set	541
  2285  021C                     _SSP2STAT	set	540
  2286  0211                     _SSP1BUF	set	529
  2287  0216                     _SSP1CON2bits	set	534
  2288  0215                     _SSP1CON1bits	set	533
  2289  0212                     _SSP1ADD	set	530
  2290  0217                     _SSP1CON3	set	535
  2291  0215                     _SSP1CON1	set	533
  2292  0214                     _SSP1STAT	set	532
  2293  020E                     _WPUC	set	526
  2294  020C                     _WPUA	set	524
  2295  020D                     _WPUB	set	525
  2296  029E                     _CCPTMRSbits	set	670
  2297  0299                     _CCPR2H	set	665
  2298  0298                     _CCPR2L	set	664
  2299  029D                     _PSTR2CON	set	669
  2300  029B                     _PWM2CON	set	667
  2301  029C                     _CCP2AS	set	668
  2302  029A                     _CCP2CON	set	666
  2303  0417                     _T4CONbits	set	1047
  2304  0415                     _TMR4	set	1045
  2305  0416                     _PR4	set	1046
  2306  0417                     _T4CON	set	1047
  2307                           
  2308                           ; #config settings
  2309  0000                     
  2310                           	psect	cinit
  2311  0045                     start_initialization:	
  2312  0045                     __initialization:	
  2313                           
  2314                           ; Initialize objects allocated to BANK1
  2315  0045  3034               	movlw	low __pidataBANK1
  2316  0046  0084               	movwf	4
  2317  0047  3085               	movlw	(high __pidataBANK1)| (0+128)
  2318  0048  0085               	movwf	5
  2319  0049  30A0               	movlw	low __pdataBANK1
  2320  004A  0086               	movwf	6
  2321  004B  3000               	movlw	high __pdataBANK1
  2322  004C  0087               	movwf	7
  2323  004D  3008               	movlw	8
  2324  004E  3185  2543  3180   	fcall	init_ram
  2325                           
  2326                           ; Clear objects allocated to COMMON
  2327  0051  01F0               	clrf	__pbssCOMMON& (0+127)
  2328  0052  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2329  0053  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2330  0054  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2331  0055  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2332  0056  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2333  0057  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2334                           
  2335                           ; Clear objects allocated to BANK0
  2336  0058  3051               	movlw	low __pbssBANK0
  2337  0059  0084               	movwf	4
  2338  005A  3000               	movlw	high __pbssBANK0
  2339  005B  0085               	movwf	5
  2340  005C  3018               	movlw	24
  2341  005D  3185  2549         	fcall	clear_ram0
  2342  005F                     end_of_initialization:	
  2343                           ;End of C runtime variable initialization code
  2344                           
  2345  005F                     __end_of__initialization:	
  2346  005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2347  0060  0020               	movlb	0
  2348  0061  3181  29A3         	ljmp	_main	;jump to C main() function
  2349                           
  2350                           	psect	bssCOMMON
  2351  0070                     __pbssCOMMON:	
  2352  0070                     __displaycontrol:	
  2353  0070                     	ds	1
  2354  0071                     __displayfunction:	
  2355  0071                     	ds	1
  2356  0072                     __entrymodeset:	
  2357  0072                     	ds	1
  2358  0073                     _p_i2c1_current:	
  2359  0073                     	ds	1
  2360  0074                     _p_i2c1_trb_current:	
  2361  0074                     	ds	1
  2362  0075                     I2C1_ISR@i2c_address:	
  2363  0075                     	ds	2
  2364                           
  2365                           	psect	bssBANK0
  2366  0051                     __pbssBANK0:	
  2367  0051                     _i2c1_object:	
  2368  0051                     	ds	5
  2369  0056                     __backlightval:	
  2370  0056                     	ds	1
  2371  0057                     __numlines:	
  2372  0057                     	ds	1
  2373  0058                     __functionset:	
  2374  0058                     	ds	1
  2375  0059                     I2C1_ISR@i2c_10bit_address_restart:	
  2376  0059                     	ds	1
  2377  005A                     I2C1_ISR@i2c_bytes_left:	
  2378  005A                     	ds	1
  2379  005B                     I2C1_ISR@pi2c_buf_ptr:	
  2380  005B                     	ds	1
  2381  005C                     _i2c1_trb_count:	
  2382  005C                     	ds	1
  2383  005D                     _i2c1_state:	
  2384  005D                     	ds	1
  2385  005E                     I2C1_MasterRead@trBlock:	
  2386  005E                     	ds	4
  2387  0062                     I2C1_MasterWrite@trBlock:	
  2388  0062                     	ds	4
  2389  0066                     _i2c1_tr_queue:	
  2390  0066                     	ds	3
  2391                           
  2392                           	psect	dataBANK1
  2393  00A0                     __pdataBANK1:	
  2394  00A0                     LCDsetCursor@F3232:	
  2395  00A0                     	ds	8
  2396                           
  2397                           	psect	inittext
  2398  0543                     init_ram:	
  2399  0543  00FE               	movwf	126
  2400  0544                     initloop:	
  2401  0544  0012               	moviw fsr0++
  2402  0545  001E               	movwi fsr1++
  2403  0546  0BFE               	decfsz	126,f
  2404  0547  2D44               	goto	initloop
  2405  0548  3400               	retlw	0
  2406                           
  2407                           	psect	clrtext
  2408  0549                     clear_ram0:	
  2409                           ;	Called with FSR0 containing the base address, and
  2410                           ;	WREG with the size to clear
  2411                           
  2412  0549  0064               	clrwdt	;clear the watchdog before getting into this loop
  2413  054A                     clrloop0:	
  2414  054A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2415  054B  3101               	addfsr 0,1
  2416  054C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2417  054D  2D4A               	goto	clrloop0	;have we reached the end yet?
  2418  054E  3400               	retlw	0	;all done for this memory range, return
  2419                           
  2420                           	psect	cstackCOMMON
  2421  0077                     __pcstackCOMMON:	
  2422  0077                     ?_OSCILLATOR_Initialize:	
  2423  0077                     ?_WDT_Initialize:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0077                     ?_I2C1_Initialize:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0077                     ?_SPI2_Initialize:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0077                     ?_EPWM2_Initialize:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0077                     ?_TMR4_Initialize:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0077                     ?_TMR2_Initialize:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0077                     ?_TMR0_Initialize:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0077                     ?_I2C1_Stop:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0077                     ??_I2C1_Stop:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0077                     ?_I2C1_FunctionComplete:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0077                     ??_I2C1_FunctionComplete:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0077                     ?_TMR0_ISR:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0077                     ??_TMR0_ISR:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0077                     ?_TMR4_ISR:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0077                     ??_TMR4_ISR:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0077                     ?_TMR2_ISR:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0077                     ??_TMR2_ISR:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0077                     ?_TMR0_DefaultInterruptHandler:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0077                     ??_TMR0_DefaultInterruptHandler:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0077                     ?_TMR2_DefaultInterruptHandler:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0077                     ??_TMR2_DefaultInterruptHandler:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0077                     ?_TMR2_StartTimer:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0077                     ?_TMR4_DefaultInterruptHandler:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0077                     ??_TMR4_DefaultInterruptHandler:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0077                     ?_TMR4_StartTimer:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0077                     ?_PIN_MANAGER_Initialize:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0077                     ?_SYSTEM_Initialize:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0077                     ?_I2C1_ISR:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0077                     ?_I2C1_BusCollisionISR:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510  0077                     ??_I2C1_BusCollisionISR:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0077                     ?_INTERRUPT_InterruptManager:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516  0077                     ?_SPI2_Exchange8bit:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519  0077                     ?_main:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522                           
  2523                           ; 1 bytes @ 0x0
  2524  0077                     	ds	1
  2525  0078                     I2C1_Stop@completion_code:	
  2526                           
  2527                           ; 1 bytes @ 0x1
  2528  0078                     	ds	1
  2529  0079                     ??_I2C1_ISR:	
  2530                           
  2531                           ; 1 bytes @ 0x2
  2532  0079                     	ds	4
  2533  007D                     ??_INTERRUPT_InterruptManager:	
  2534                           
  2535                           ; 1 bytes @ 0x6
  2536  007D                     	ds	1
  2537                           
  2538                           	psect	cstackBANK0
  2539  0020                     __pcstackBANK0:	
  2540  0020                     ??_OSCILLATOR_Initialize:	
  2541  0020                     ??_WDT_Initialize:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0020                     ??_I2C1_Initialize:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0020                     ??_SPI2_Initialize:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0020                     ??_EPWM2_Initialize:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0020                     ?_I2C1_MasterWriteTRBBuild:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0020                     ?_I2C1_MasterTRBInsert:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0020                     ?_TMR0_SetInterruptHandler:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0020                     ?_TMR2_SetInterruptHandler:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0020                     ??_TMR2_StartTimer:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568  0020                     ?_TMR4_SetInterruptHandler:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571  0020                     ??_TMR4_StartTimer:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0020                     ??_PIN_MANAGER_Initialize:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0020                     ??_SPI2_Exchange8bit:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0020                     ?_strlen:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0020                     ?___wmul:	
  2584                           ; 2 bytes @ 0x0
  2585                           
  2586  0020                     ?___lwdiv:	
  2587                           ; 2 bytes @ 0x0
  2588                           
  2589  0020                     ?___lwmod:	
  2590                           ; 2 bytes @ 0x0
  2591                           
  2592  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  2593                           ; 2 bytes @ 0x0
  2594                           
  2595  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0020                     SPI2_Exchange8bit@data:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  2605                           ; 2 bytes @ 0x0
  2606                           
  2607  0020                     TMR4_SetInterruptHandler@InterruptHandler:	
  2608                           ; 2 bytes @ 0x0
  2609                           
  2610  0020                     ___wmul@multiplier:	
  2611                           ; 2 bytes @ 0x0
  2612                           
  2613  0020                     ___lwdiv@divisor:	
  2614                           ; 2 bytes @ 0x0
  2615                           
  2616  0020                     ___lwmod@divisor:	
  2617                           ; 2 bytes @ 0x0
  2618                           
  2619                           
  2620                           ; 2 bytes @ 0x0
  2621  0020                     	ds	1
  2622  0021                     I2C1_MasterTRBInsert@pflag:	
  2623  0021                     I2C1_MasterWriteTRBBuild@length:	
  2624                           ; 1 bytes @ 0x1
  2625                           
  2626                           
  2627                           ; 1 bytes @ 0x1
  2628  0021                     	ds	1
  2629  0022                     ??_TMR4_Initialize:	
  2630  0022                     ??_TMR2_Initialize:	
  2631                           ; 1 bytes @ 0x2
  2632                           
  2633  0022                     ??_TMR0_Initialize:	
  2634                           ; 1 bytes @ 0x2
  2635                           
  2636  0022                     ??_I2C1_MasterTRBInsert:	
  2637                           ; 1 bytes @ 0x2
  2638                           
  2639  0022                     ??_TMR0_SetInterruptHandler:	
  2640                           ; 1 bytes @ 0x2
  2641                           
  2642  0022                     ??_TMR2_SetInterruptHandler:	
  2643                           ; 1 bytes @ 0x2
  2644                           
  2645  0022                     ??_TMR4_SetInterruptHandler:	
  2646                           ; 1 bytes @ 0x2
  2647                           
  2648  0022                     ??_strlen:	
  2649                           ; 1 bytes @ 0x2
  2650                           
  2651  0022                     I2C1_MasterWriteTRBBuild@address:	
  2652                           ; 1 bytes @ 0x2
  2653                           
  2654  0022                     ___wmul@multiplicand:	
  2655                           ; 2 bytes @ 0x2
  2656                           
  2657  0022                     ___lwdiv@dividend:	
  2658                           ; 2 bytes @ 0x2
  2659                           
  2660  0022                     ___lwmod@dividend:	
  2661                           ; 2 bytes @ 0x2
  2662                           
  2663                           
  2664                           ; 2 bytes @ 0x2
  2665  0022                     	ds	1
  2666  0023                     ??_SYSTEM_Initialize:	
  2667  0023                     I2C1_MasterTRBInsert@count:	
  2668                           ; 1 bytes @ 0x3
  2669                           
  2670                           
  2671                           ; 1 bytes @ 0x3
  2672  0023                     	ds	1
  2673  0024                     ??_I2C1_MasterWriteTRBBuild:	
  2674  0024                     ??___wmul:	
  2675                           ; 1 bytes @ 0x4
  2676                           
  2677  0024                     ??___lwdiv:	
  2678                           ; 1 bytes @ 0x4
  2679                           
  2680  0024                     ??___lwmod:	
  2681                           ; 1 bytes @ 0x4
  2682                           
  2683  0024                     ___wmul@product:	
  2684                           ; 1 bytes @ 0x4
  2685                           
  2686                           
  2687                           ; 2 bytes @ 0x4
  2688  0024                     	ds	1
  2689  0025                     ___lwmod@counter:	
  2690  0025                     ___lwdiv@quotient:	
  2691                           ; 1 bytes @ 0x5
  2692                           
  2693                           
  2694                           ; 2 bytes @ 0x5
  2695  0025                     	ds	1
  2696  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  2697  0026                     strlen@s:	
  2698                           ; 1 bytes @ 0x6
  2699                           
  2700                           
  2701                           ; 1 bytes @ 0x6
  2702  0026                     	ds	1
  2703  0027                     ?_I2C1_MasterWrite:	
  2704  0027                     I2C1_MasterWrite@length:	
  2705                           ; 1 bytes @ 0x7
  2706                           
  2707  0027                     ___lwdiv@counter:	
  2708                           ; 1 bytes @ 0x7
  2709                           
  2710  0027                     strlen@cp:	
  2711                           ; 1 bytes @ 0x7
  2712                           
  2713                           
  2714                           ; 1 bytes @ 0x7
  2715  0027                     	ds	1
  2716  0028                     ?_utoa:	
  2717  0028                     I2C1_MasterWrite@address:	
  2718                           ; 1 bytes @ 0x8
  2719                           
  2720  0028                     utoa@val:	
  2721                           ; 2 bytes @ 0x8
  2722                           
  2723                           
  2724                           ; 2 bytes @ 0x8
  2725  0028                     	ds	2
  2726  002A                     I2C1_MasterWrite@pflag:	
  2727  002A                     utoa@base:	
  2728                           ; 1 bytes @ 0xA
  2729                           
  2730                           
  2731                           ; 2 bytes @ 0xA
  2732  002A                     	ds	1
  2733  002B                     ??_I2C1_MasterWrite:	
  2734                           
  2735                           ; 1 bytes @ 0xB
  2736  002B                     	ds	1
  2737  002C                     ??_utoa:	
  2738                           
  2739                           ; 1 bytes @ 0xC
  2740  002C                     	ds	1
  2741  002D                     I2C1_MasterWrite@pdata:	
  2742  002D                     utoa@v:	
  2743                           ; 1 bytes @ 0xD
  2744                           
  2745                           
  2746                           ; 2 bytes @ 0xD
  2747  002D                     	ds	1
  2748  002E                     ?_I2C_Write_Byte_Single_Reg:	
  2749  002E                     I2C_Write_Byte_Single_Reg@info:	
  2750                           ; 1 bytes @ 0xE
  2751                           
  2752                           
  2753                           ; 1 bytes @ 0xE
  2754  002E                     	ds	1
  2755  002F                     ??_I2C_Write_Byte_Single_Reg:	
  2756  002F                     utoa@c:	
  2757                           ; 1 bytes @ 0xF
  2758                           
  2759                           
  2760                           ; 1 bytes @ 0xF
  2761  002F                     	ds	1
  2762  0030                     utoa@buf:	
  2763                           
  2764                           ; 1 bytes @ 0x10
  2765  0030                     	ds	1
  2766  0031                     ?_itoa:	
  2767  0031                     itoa@val:	
  2768                           ; 1 bytes @ 0x11
  2769                           
  2770                           
  2771                           ; 2 bytes @ 0x11
  2772  0031                     	ds	1
  2773  0032                     I2C_Write_Byte_Single_Reg@device:	
  2774                           
  2775                           ; 1 bytes @ 0x12
  2776  0032                     	ds	1
  2777  0033                     I2C_Write_Byte_Single_Reg@temp:	
  2778  0033                     itoa@base:	
  2779                           ; 2 bytes @ 0x13
  2780                           
  2781                           
  2782                           ; 2 bytes @ 0x13
  2783  0033                     	ds	2
  2784  0035                     ??_itoa:	
  2785  0035                     I2C_Write_Byte_Single_Reg@status:	
  2786                           ; 1 bytes @ 0x15
  2787                           
  2788                           
  2789                           ; 1 bytes @ 0x15
  2790  0035                     	ds	1
  2791  0036                     itoa@cp:	
  2792                           
  2793                           ; 1 bytes @ 0x16
  2794  0036                     	ds	1
  2795  0037                     itoa@buf:	
  2796                           
  2797                           ; 1 bytes @ 0x17
  2798  0037                     	ds	1
  2799  0038                     ??_main:	
  2800                           
  2801                           ; 1 bytes @ 0x18
  2802  0038                     	ds	2
  2803  003A                     main@txt:	
  2804                           
  2805                           ; 20 bytes @ 0x1A
  2806  003A                     	ds	20
  2807  004E                     main@idx:	
  2808                           
  2809                           ; 1 bytes @ 0x2E
  2810  004E                     	ds	1
  2811  004F                     main@nTemp:	
  2812                           
  2813                           ; 2 bytes @ 0x2F
  2814  004F                     	ds	2
  2815                           
  2816                           	psect	maintext
  2817  01A3                     __pmaintext:	
  2818 ;;
  2819 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2820 ;;
  2821 ;; *************** function _main *****************
  2822 ;; Defined at:
  2823 ;;		line 55 in file "main.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  idx             1   46[BANK0 ] unsigned char 
  2828 ;;  txt            20   26[BANK0 ] unsigned char [20]
  2829 ;;  nTemp           2   47[BANK0 ] unsigned int 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : B1F/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2841 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2842 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;Total ram usage:       25 bytes
  2844 ;; Hardware stack levels required when called:    6
  2845 ;; This function calls:
  2846 ;;		_I2C_Write_Byte_Single_Reg
  2847 ;;		_SPI2_Exchange8bit
  2848 ;;		_SYSTEM_Initialize
  2849 ;;		___wmul
  2850 ;;		_itoa
  2851 ;;		_strlen
  2852 ;; This function is called by:
  2853 ;;		Startup code after reset
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _main
  2859  01A3                     _main:	
  2860                           
  2861                           ;main.c: 58: SYSTEM_Initialize();
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2865  01A3  3184  2441  3181   	fcall	_SYSTEM_Initialize
  2866                           
  2867                           ;main.c: 60: do { LATCbits.LATC0 = 1; } while(0);
  2868  01A6  0022               	movlb	2	; select bank2
  2869  01A7  140E               	bsf	14,0	;volatile
  2870                           
  2871                           ;main.c: 66: (INTCONbits.GIE = 1);
  2872  01A8  178B               	bsf	11,7	;volatile
  2873                           
  2874                           ;main.c: 69: (INTCONbits.PEIE = 1);
  2875  01A9  170B               	bsf	11,6	;volatile
  2876  01AA                     l3216:	
  2877                           ;main.c: 98: while (1)
  2878                           
  2879                           
  2880                           ;main.c: 99: {
  2881                           ;main.c: 104: uint16_t nTemp = 0;
  2882  01AA  0020               	movlb	0	; select bank0
  2883  01AB  01CF               	clrf	main@nTemp
  2884  01AC  01D0               	clrf	main@nTemp+1
  2885                           
  2886                           ;main.c: 106: do { LATCbits.LATC0 = 0; } while(0);
  2887  01AD  0022               	movlb	2	; select bank2
  2888  01AE  100E               	bcf	14,0	;volatile
  2889                           
  2890                           ;main.c: 107: nTemp += SPI2_Exchange8bit(0x0);
  2891  01AF  3000               	movlw	0
  2892  01B0  3185  2510  3181   	fcall	_SPI2_Exchange8bit
  2893  01B3  0020               	movlb	0	; select bank0
  2894  01B4  00B8               	movwf	??_main
  2895  01B5  01B9               	clrf	??_main+1
  2896  01B6  0838               	movf	??_main,w
  2897  01B7  07CF               	addwf	main@nTemp,f
  2898  01B8  0839               	movf	??_main+1,w
  2899  01B9  3DD0               	addwfc	main@nTemp+1,f
  2900                           
  2901                           ;main.c: 108: nTemp <<= 8;
  2902  01BA  3008               	movlw	8
  2903  01BB                     u1925:	
  2904  01BB  35CF               	lslf	main@nTemp,f
  2905  01BC  0DD0               	rlf	main@nTemp+1,f
  2906  01BD  0B89               	decfsz	9,f
  2907  01BE  29BB               	goto	u1925
  2908                           
  2909                           ;main.c: 109: nTemp += SPI2_Exchange8bit(0x0);
  2910  01BF  3000               	movlw	0
  2911  01C0  3185  2510  3181   	fcall	_SPI2_Exchange8bit
  2912  01C3  0020               	movlb	0	; select bank0
  2913  01C4  00B8               	movwf	??_main
  2914  01C5  01B9               	clrf	??_main+1
  2915  01C6  0838               	movf	??_main,w
  2916  01C7  07CF               	addwf	main@nTemp,f
  2917  01C8  0839               	movf	??_main+1,w
  2918  01C9  3DD0               	addwfc	main@nTemp+1,f
  2919                           
  2920                           ;main.c: 110: do { LATCbits.LATC0 = 1; } while(0);
  2921  01CA  0022               	movlb	2	; select bank2
  2922  01CB  140E               	bsf	14,0	;volatile
  2923                           
  2924                           ;main.c: 111: if(((nTemp >> 2 ) & 0x01)==1)
  2925  01CC  0020               	movlb	0	; select bank0
  2926  01CD  0850               	movf	main@nTemp+1,w
  2927  01CE  00B9               	movwf	??_main+1
  2928  01CF  084F               	movf	main@nTemp,w
  2929  01D0  00B8               	movwf	??_main
  2930  01D1  36B9               	lsrf	??_main+1,f
  2931  01D2  0CB8               	rrf	??_main,f
  2932  01D3  36B9               	lsrf	??_main+1,f
  2933  01D4  0CB8               	rrf	??_main,f
  2934  01D5  1C38               	btfss	??_main,0
  2935  01D6  29DA               	goto	l3232
  2936                           
  2937                           ;main.c: 112: {
  2938                           ;main.c: 113: nTemp = 0;
  2939  01D7  01CF               	clrf	main@nTemp
  2940  01D8  01D0               	clrf	main@nTemp+1
  2941                           
  2942                           ;main.c: 114: }
  2943  01D9  29F8               	goto	l3236
  2944  01DA                     l3232:	
  2945                           
  2946                           ;main.c: 115: else
  2947                           ;main.c: 116: {
  2948                           ;main.c: 117: nTemp = nTemp >> 3;
  2949  01DA  0850               	movf	main@nTemp+1,w
  2950  01DB  00B9               	movwf	??_main+1
  2951  01DC  084F               	movf	main@nTemp,w
  2952  01DD  00B8               	movwf	??_main
  2953  01DE  36B9               	lsrf	??_main+1,f
  2954  01DF  0CB8               	rrf	??_main,f
  2955  01E0  36B9               	lsrf	??_main+1,f
  2956  01E1  0CB8               	rrf	??_main,f
  2957  01E2  36B9               	lsrf	??_main+1,f
  2958  01E3  0CB8               	rrf	??_main,f
  2959  01E4  0838               	movf	??_main,w
  2960  01E5  00CF               	movwf	main@nTemp
  2961  01E6  0839               	movf	??_main+1,w
  2962  01E7  00D0               	movwf	main@nTemp+1
  2963                           
  2964                           ;main.c: 118: nTemp = 25 * nTemp;
  2965  01E8  0850               	movf	main@nTemp+1,w
  2966  01E9  00A1               	movwf	___wmul@multiplier+1
  2967  01EA  084F               	movf	main@nTemp,w
  2968  01EB  00A0               	movwf	___wmul@multiplier
  2969  01EC  3019               	movlw	25
  2970  01ED  00A2               	movwf	___wmul@multiplicand
  2971  01EE  3000               	movlw	0
  2972  01EF  00A3               	movwf	___wmul@multiplicand+1
  2973  01F0  3184  2425  3181   	fcall	___wmul
  2974  01F3  0020               	movlb	0	; select bank0
  2975  01F4  0821               	movf	?___wmul+1,w
  2976  01F5  00D0               	movwf	main@nTemp+1
  2977  01F6  0820               	movf	?___wmul,w
  2978  01F7  00CF               	movwf	main@nTemp
  2979  01F8                     l3236:	
  2980                           
  2981                           ;main.c: 119: }
  2982                           ;main.c: 121: char txt[20];
  2983                           ;main.c: 122: itoa(txt, nTemp, 10);
  2984  01F8  0850               	movf	main@nTemp+1,w
  2985  01F9  00B2               	movwf	itoa@val+1
  2986  01FA  084F               	movf	main@nTemp,w
  2987  01FB  00B1               	movwf	itoa@val
  2988  01FC  300A               	movlw	10
  2989  01FD  00B3               	movwf	itoa@base
  2990  01FE  3000               	movlw	0
  2991  01FF  00B4               	movwf	itoa@base+1
  2992  0200  303A               	movlw	(low (main@txt| 0))& (0+255)
  2993  0201  3183  23A1  3181   	fcall	_itoa
  2994                           
  2995                           ;main.c: 124: for(uint8_t idx = 0; idx < strlen(txt); idx++)
  2996  0204  0020               	movlb	0	; select bank0
  2997  0205  01CE               	clrf	main@idx
  2998  0206                     l3246:	
  2999  0206  303A               	movlw	(low (main@txt| 0))& (0+255)
  3000  0207  3183  237C  3181   	fcall	_strlen
  3001  020A  0020               	movlb	0	; select bank0
  3002  020B  084E               	movf	main@idx,w
  3003  020C  00B8               	movwf	??_main
  3004  020D  01B9               	clrf	??_main+1
  3005  020E  0821               	movf	?_strlen+1,w
  3006  020F  0239               	subwf	??_main+1,w
  3007  0210  1D03               	skipz
  3008  0211  2A14               	goto	u1955
  3009  0212  0820               	movf	?_strlen,w
  3010  0213  0238               	subwf	??_main,w
  3011  0214                     u1955:	
  3012  0214  1803               	btfsc	3,0
  3013  0215  2A22               	goto	l3248
  3014                           
  3015                           ;main.c: 125: {
  3016                           ;main.c: 126: if(txt[idx] == '\0')
  3017  0216  084E               	movf	main@idx,w
  3018  0217  3E3A               	addlw	(low (main@txt| 0))& (0+255)
  3019  0218  0086               	movwf	6
  3020  0219  0187               	clrf	7
  3021  021A  0801               	movf	1,w
  3022  021B  1903               	btfsc	3,2
  3023  021C  2A22               	goto	l3248
  3024                           
  3025                           ;main.c: 127: break;
  3026  021D  3001               	movlw	1
  3027  021E  00B8               	movwf	??_main
  3028  021F  0838               	movf	??_main,w
  3029  0220  07CE               	addwf	main@idx,f
  3030  0221  2A06               	goto	l3246
  3031  0222                     l3248:	
  3032                           
  3033                           ;main.c: 128: }
  3034                           ;main.c: 130: I2C_Write_Byte_Single_Reg(0x20, 0xFF);
  3035  0222  30FF               	movlw	255
  3036  0223  00B8               	movwf	??_main
  3037  0224  0838               	movf	??_main,w
  3038  0225  00AE               	movwf	I2C_Write_Byte_Single_Reg@info
  3039  0226  3020               	movlw	32
  3040  0227  3183  23C5  3181   	fcall	_I2C_Write_Byte_Single_Reg
  3041                           
  3042                           ;main.c: 131: _delay((unsigned long)((1000)*(8000000/4000.0)));
  3043  022A  300B               	movlw	11
  3044  022B  0020               	movlb	0	; select bank0
  3045  022C  00B9               	movwf	??_main+1
  3046  022D  3026               	movlw	38
  3047  022E  00B8               	movwf	??_main
  3048  022F  305D               	movlw	93
  3049  0230                     u1967:	
  3050  0230  0B89               	decfsz	9,f
  3051  0231  2A30               	goto	u1967
  3052  0232  0BB8               	decfsz	??_main,f
  3053  0233  2A30               	goto	u1967
  3054  0234  0BB9               	decfsz	??_main+1,f
  3055  0235  2A30               	goto	u1967
  3056  0236  3200               	nop2
  3057                           
  3058                           ;main.c: 132: I2C_Write_Byte_Single_Reg(0x20, 0x00);
  3059  0237  0020               	movlb	0	; select bank0
  3060  0238  01AE               	clrf	I2C_Write_Byte_Single_Reg@info
  3061  0239  3020               	movlw	32
  3062  023A  3183  23C5  3181   	fcall	_I2C_Write_Byte_Single_Reg
  3063                           
  3064                           ;main.c: 133: _delay((unsigned long)((1000)*(8000000/4000.0)));
  3065  023D  300B               	movlw	11
  3066  023E  0020               	movlb	0	; select bank0
  3067  023F  00B9               	movwf	??_main+1
  3068  0240  3026               	movlw	38
  3069  0241  00B8               	movwf	??_main
  3070  0242  305D               	movlw	93
  3071  0243                     u1977:	
  3072  0243  0B89               	decfsz	9,f
  3073  0244  2A43               	goto	u1977
  3074  0245  0BB8               	decfsz	??_main,f
  3075  0246  2A43               	goto	u1977
  3076  0247  0BB9               	decfsz	??_main+1,f
  3077  0248  2A43               	goto	u1977
  3078  0249  3200               	nop2
  3079  024A  29AA               	goto	l3216
  3080  024B                     __end_of_main:	
  3081                           
  3082                           	psect	text1
  3083  037C                     __ptext1:	
  3084 ;; *************** function _strlen *****************
  3085 ;; Defined at:
  3086 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  s               1    wreg     PTR const unsigned char 
  3089 ;;		 -> main@txt(20), 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  3092 ;;		 -> main@txt(20), 
  3093 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  3094 ;;		 -> main@txt(20), 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  2    0[BANK0 ] unsigned int 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;Total ram usage:        8 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    3
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           
  3119                           ;psect for function _strlen
  3120  037C                     _strlen:	
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3124                           ;strlen@s stored from wreg
  3125  037C  0020               	movlb	0	; select bank0
  3126  037D  00A6               	movwf	strlen@s
  3127  037E  0826               	movf	strlen@s,w
  3128  037F  00A2               	movwf	??_strlen
  3129  0380  0822               	movf	??_strlen,w
  3130  0381  00A7               	movwf	strlen@cp
  3131  0382                     l2666:	
  3132  0382  0827               	movf	strlen@cp,w
  3133  0383  0086               	movwf	6
  3134  0384  0187               	clrf	7
  3135  0385  0801               	movf	1,w
  3136  0386  1903               	btfsc	3,2
  3137  0387  2B8D               	goto	l2668
  3138  0388  3001               	movlw	1
  3139  0389  00A2               	movwf	??_strlen
  3140  038A  0822               	movf	??_strlen,w
  3141  038B  07A7               	addwf	strlen@cp,f
  3142  038C  2B82               	goto	l2666
  3143  038D                     l2668:	
  3144  038D  0826               	movf	strlen@s,w
  3145  038E  00A2               	movwf	??_strlen
  3146  038F  3000               	movlw	0
  3147  0390  00A3               	movwf	??_strlen+1
  3148  0391  09A2               	comf	??_strlen,f
  3149  0392  09A3               	comf	??_strlen+1,f
  3150  0393  0AA2               	incf	??_strlen,f
  3151  0394  1903               	skipnz
  3152  0395  0AA3               	incf	??_strlen+1,f
  3153  0396  0827               	movf	strlen@cp,w
  3154  0397  00A4               	movwf	??_strlen+2
  3155  0398  3000               	movlw	0
  3156  0399  00A5               	movwf	??_strlen+3
  3157  039A  0822               	movf	??_strlen,w
  3158  039B  0724               	addwf	??_strlen+2,w
  3159  039C  00A0               	movwf	?_strlen
  3160  039D  0823               	movf	??_strlen+1,w
  3161  039E  3D25               	addwfc	??_strlen+3,w
  3162  039F  00A1               	movwf	?_strlen+1
  3163  03A0  0008               	return
  3164  03A1                     __end_of_strlen:	
  3165                           
  3166                           	psect	text2
  3167  03A1                     __ptext2:	
  3168 ;; *************** function _itoa *****************
  3169 ;; Defined at:
  3170 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  buf             1    wreg     PTR unsigned char 
  3173 ;;		 -> main@txt(20), 
  3174 ;;  val             2   17[BANK0 ] int 
  3175 ;;  base            2   19[BANK0 ] int 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  3178 ;;		 -> main@txt(20), 
  3179 ;;  cp              1   22[BANK0 ] PTR unsigned char 
  3180 ;;		 -> main@txt(20), 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      PTR unsigned char 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3190 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3191 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;Total ram usage:        7 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    5
  3197 ;; This function calls:
  3198 ;;		_utoa
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           
  3205                           ;psect for function _itoa
  3206  03A1                     _itoa:	
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3210                           ;itoa@buf stored from wreg
  3211  03A1  0020               	movlb	0	; select bank0
  3212  03A2  00B7               	movwf	itoa@buf
  3213  03A3  0837               	movf	itoa@buf,w
  3214  03A4  00B5               	movwf	??_itoa
  3215  03A5  0835               	movf	??_itoa,w
  3216  03A6  00B6               	movwf	itoa@cp
  3217  03A7  1FB2               	btfss	itoa@val+1,7
  3218  03A8  2BB9               	goto	l2658
  3219  03A9  302D               	movlw	45
  3220  03AA  00B5               	movwf	??_itoa
  3221  03AB  0837               	movf	itoa@buf,w
  3222  03AC  0086               	movwf	6
  3223  03AD  0187               	clrf	7
  3224  03AE  0835               	movf	??_itoa,w
  3225  03AF  0081               	movwf	1
  3226  03B0  3001               	movlw	1
  3227  03B1  00B5               	movwf	??_itoa
  3228  03B2  0835               	movf	??_itoa,w
  3229  03B3  07B7               	addwf	itoa@buf,f
  3230  03B4  09B1               	comf	itoa@val,f
  3231  03B5  09B2               	comf	itoa@val+1,f
  3232  03B6  0AB1               	incf	itoa@val,f
  3233  03B7  1903               	skipnz
  3234  03B8  0AB2               	incf	itoa@val+1,f
  3235  03B9                     l2658:	
  3236  03B9  0832               	movf	itoa@val+1,w
  3237  03BA  00A9               	movwf	utoa@val+1
  3238  03BB  0831               	movf	itoa@val,w
  3239  03BC  00A8               	movwf	utoa@val
  3240  03BD  0834               	movf	itoa@base+1,w
  3241  03BE  00AB               	movwf	utoa@base+1
  3242  03BF  0833               	movf	itoa@base,w
  3243  03C0  00AA               	movwf	utoa@base
  3244  03C1  0837               	movf	itoa@buf,w
  3245  03C2  3182  224B         	fcall	_utoa
  3246  03C4  0008               	return
  3247  03C5                     __end_of_itoa:	
  3248                           ;	Return value of _itoa is never used
  3249                           
  3250                           
  3251                           	psect	text3
  3252  024B                     __ptext3:	
  3253 ;; *************** function _utoa *****************
  3254 ;; Defined at:
  3255 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  buf             1    wreg     PTR unsigned char 
  3258 ;;		 -> main@txt(20), 
  3259 ;;  val             2    8[BANK0 ] unsigned int 
  3260 ;;  base            2   10[BANK0 ] int 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  3263 ;;		 -> main@txt(20), 
  3264 ;;  v               2   13[BANK0 ] unsigned int 
  3265 ;;  c               1   15[BANK0 ] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      PTR unsigned char 
  3268 ;; Registers used:
  3269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3275 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;Total ram usage:        9 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    4
  3282 ;; This function calls:
  3283 ;;		___lwdiv
  3284 ;;		___lwmod
  3285 ;; This function is called by:
  3286 ;;		_itoa
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _utoa
  3292  024B                     _utoa:	
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3296                           ;utoa@buf stored from wreg
  3297  024B  0020               	movlb	0	; select bank0
  3298  024C  00B0               	movwf	utoa@buf
  3299  024D  0829               	movf	utoa@val+1,w
  3300  024E  00AE               	movwf	utoa@v+1
  3301  024F  0828               	movf	utoa@val,w
  3302  0250  00AD               	movwf	utoa@v
  3303  0251                     l2442:	
  3304  0251  082B               	movf	utoa@base+1,w
  3305  0252  00A1               	movwf	___lwdiv@divisor+1
  3306  0253  082A               	movf	utoa@base,w
  3307  0254  00A0               	movwf	___lwdiv@divisor
  3308  0255  082E               	movf	utoa@v+1,w
  3309  0256  00A3               	movwf	___lwdiv@dividend+1
  3310  0257  082D               	movf	utoa@v,w
  3311  0258  00A2               	movwf	___lwdiv@dividend
  3312  0259  3182  22F2  3182   	fcall	___lwdiv
  3313  025C  0020               	movlb	0	; select bank0
  3314  025D  0821               	movf	?___lwdiv+1,w
  3315  025E  00AE               	movwf	utoa@v+1
  3316  025F  0820               	movf	?___lwdiv,w
  3317  0260  00AD               	movwf	utoa@v
  3318  0261  3001               	movlw	1
  3319  0262  00AC               	movwf	??_utoa
  3320  0263  082C               	movf	??_utoa,w
  3321  0264  07B0               	addwf	utoa@buf,f
  3322  0265  082D               	movf	utoa@v,w
  3323  0266  042E               	iorwf	utoa@v+1,w
  3324  0267  1D03               	btfss	3,2
  3325  0268  2A51               	goto	l2442
  3326  0269  0830               	movf	utoa@buf,w
  3327  026A  0086               	movwf	6
  3328  026B  0187               	clrf	7
  3329  026C  0181               	clrf	1
  3330  026D  3001               	movlw	1
  3331  026E  02B0               	subwf	utoa@buf,f
  3332  026F                     l2452:	
  3333  026F  082B               	movf	utoa@base+1,w
  3334  0270  00A1               	movwf	___lwmod@divisor+1
  3335  0271  082A               	movf	utoa@base,w
  3336  0272  00A0               	movwf	___lwmod@divisor
  3337  0273  0829               	movf	utoa@val+1,w
  3338  0274  00A3               	movwf	___lwmod@dividend+1
  3339  0275  0828               	movf	utoa@val,w
  3340  0276  00A2               	movwf	___lwmod@dividend
  3341  0277  3183  2327  3182   	fcall	___lwmod
  3342  027A  0020               	movlb	0	; select bank0
  3343  027B  0820               	movf	?___lwmod,w
  3344  027C  00AC               	movwf	??_utoa
  3345  027D  082C               	movf	??_utoa,w
  3346  027E  00AF               	movwf	utoa@c
  3347  027F  082B               	movf	utoa@base+1,w
  3348  0280  00A1               	movwf	___lwdiv@divisor+1
  3349  0281  082A               	movf	utoa@base,w
  3350  0282  00A0               	movwf	___lwdiv@divisor
  3351  0283  0829               	movf	utoa@val+1,w
  3352  0284  00A3               	movwf	___lwdiv@dividend+1
  3353  0285  0828               	movf	utoa@val,w
  3354  0286  00A2               	movwf	___lwdiv@dividend
  3355  0287  3182  22F2  3182   	fcall	___lwdiv
  3356  028A  0020               	movlb	0	; select bank0
  3357  028B  0821               	movf	?___lwdiv+1,w
  3358  028C  00A9               	movwf	utoa@val+1
  3359  028D  0820               	movf	?___lwdiv,w
  3360  028E  00A8               	movwf	utoa@val
  3361  028F  300A               	movlw	10
  3362  0290  022F               	subwf	utoa@c,w
  3363  0291  1C03               	skipc
  3364  0292  2A97               	goto	l1067
  3365  0293  3007               	movlw	7
  3366  0294  00AC               	movwf	??_utoa
  3367  0295  082C               	movf	??_utoa,w
  3368  0296  07AF               	addwf	utoa@c,f
  3369  0297                     l1067:	
  3370  0297  3030               	movlw	48
  3371  0298  00AC               	movwf	??_utoa
  3372  0299  082C               	movf	??_utoa,w
  3373  029A  07AF               	addwf	utoa@c,f
  3374  029B  082F               	movf	utoa@c,w
  3375  029C  00AC               	movwf	??_utoa
  3376  029D  0830               	movf	utoa@buf,w
  3377  029E  0086               	movwf	6
  3378  029F  0187               	clrf	7
  3379  02A0  082C               	movf	??_utoa,w
  3380  02A1  0081               	movwf	1
  3381  02A2  3001               	movlw	1
  3382  02A3  02B0               	subwf	utoa@buf,f
  3383  02A4  0828               	movf	utoa@val,w
  3384  02A5  0429               	iorwf	utoa@val+1,w
  3385  02A6  1D03               	btfss	3,2
  3386  02A7  2A6F               	goto	l2452
  3387                           
  3388                           ;	Return value of _utoa is never used
  3389  02A8  3001               	movlw	1
  3390  02A9  00AC               	movwf	??_utoa
  3391  02AA  082C               	movf	??_utoa,w
  3392  02AB  07B0               	addwf	utoa@buf,f
  3393  02AC  0008               	return
  3394  02AD                     __end_of_utoa:	
  3395                           
  3396                           	psect	text4
  3397  0327                     __ptext4:	
  3398 ;; *************** function ___lwmod *****************
  3399 ;; Defined at:
  3400 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  divisor         2    0[BANK0 ] unsigned int 
  3403 ;;  dividend        2    2[BANK0 ] unsigned int 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  counter         1    5[BANK0 ] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  2    0[BANK0 ] unsigned int 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;Total ram usage:        6 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    3
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_utoa
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function ___lwmod
  3431  0327                     ___lwmod:	
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3435  0327  0020               	movlb	0	; select bank0
  3436  0328  0820               	movf	___lwmod@divisor,w
  3437  0329  0421               	iorwf	___lwmod@divisor+1,w
  3438  032A  1903               	btfsc	3,2
  3439  032B  2B4F               	goto	l2312
  3440  032C  01A5               	clrf	___lwmod@counter
  3441  032D  0AA5               	incf	___lwmod@counter,f
  3442  032E                     l2302:	
  3443  032E  1BA1               	btfsc	___lwmod@divisor+1,7
  3444  032F  2B3A               	goto	l2304
  3445  0330  3001               	movlw	1
  3446  0331                     u1085:	
  3447  0331  35A0               	lslf	___lwmod@divisor,f
  3448  0332  0DA1               	rlf	___lwmod@divisor+1,f
  3449  0333  0B89               	decfsz	9,f
  3450  0334  2B31               	goto	u1085
  3451  0335  3001               	movlw	1
  3452  0336  00A4               	movwf	??___lwmod
  3453  0337  0824               	movf	??___lwmod,w
  3454  0338  07A5               	addwf	___lwmod@counter,f
  3455  0339  2B2E               	goto	l2302
  3456  033A                     l2304:	
  3457  033A  0821               	movf	___lwmod@divisor+1,w
  3458  033B  0223               	subwf	___lwmod@dividend+1,w
  3459  033C  1D03               	skipz
  3460  033D  2B40               	goto	u1105
  3461  033E  0820               	movf	___lwmod@divisor,w
  3462  033F  0222               	subwf	___lwmod@dividend,w
  3463  0340                     u1105:	
  3464  0340  1C03               	skipc
  3465  0341  2B46               	goto	l2308
  3466  0342  0820               	movf	___lwmod@divisor,w
  3467  0343  02A2               	subwf	___lwmod@dividend,f
  3468  0344  0821               	movf	___lwmod@divisor+1,w
  3469  0345  3BA3               	subwfb	___lwmod@dividend+1,f
  3470  0346                     l2308:	
  3471  0346  3001               	movlw	1
  3472  0347                     u1115:	
  3473  0347  36A1               	lsrf	___lwmod@divisor+1,f
  3474  0348  0CA0               	rrf	___lwmod@divisor,f
  3475  0349  0B89               	decfsz	9,f
  3476  034A  2B47               	goto	u1115
  3477  034B  3001               	movlw	1
  3478  034C  02A5               	subwf	___lwmod@counter,f
  3479  034D  1D03               	btfss	3,2
  3480  034E  2B3A               	goto	l2304
  3481  034F                     l2312:	
  3482  034F  0823               	movf	___lwmod@dividend+1,w
  3483  0350  00A1               	movwf	?___lwmod+1
  3484  0351  0822               	movf	___lwmod@dividend,w
  3485  0352  00A0               	movwf	?___lwmod
  3486  0353  0008               	return
  3487  0354                     __end_of___lwmod:	
  3488                           
  3489                           	psect	text5
  3490  02F2                     __ptext5:	
  3491 ;; *************** function ___lwdiv *****************
  3492 ;; Defined at:
  3493 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  divisor         2    0[BANK0 ] unsigned int 
  3496 ;;  dividend        2    2[BANK0 ] unsigned int 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  quotient        2    5[BANK0 ] unsigned int 
  3499 ;;  counter         1    7[BANK0 ] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  2    0[BANK0 ] unsigned int 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3509 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;Total ram usage:        8 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    3
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_utoa
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function ___lwdiv
  3525  02F2                     ___lwdiv:	
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3529  02F2  0020               	movlb	0	; select bank0
  3530  02F3  01A5               	clrf	___lwdiv@quotient
  3531  02F4  01A6               	clrf	___lwdiv@quotient+1
  3532  02F5  0820               	movf	___lwdiv@divisor,w
  3533  02F6  0421               	iorwf	___lwdiv@divisor+1,w
  3534  02F7  1903               	btfsc	3,2
  3535  02F8  2B22               	goto	l2290
  3536  02F9  01A7               	clrf	___lwdiv@counter
  3537  02FA  0AA7               	incf	___lwdiv@counter,f
  3538  02FB                     l2278:	
  3539  02FB  1BA1               	btfsc	___lwdiv@divisor+1,7
  3540  02FC  2B07               	goto	l2280
  3541  02FD  3001               	movlw	1
  3542  02FE                     u1015:	
  3543  02FE  35A0               	lslf	___lwdiv@divisor,f
  3544  02FF  0DA1               	rlf	___lwdiv@divisor+1,f
  3545  0300  0B89               	decfsz	9,f
  3546  0301  2AFE               	goto	u1015
  3547  0302  3001               	movlw	1
  3548  0303  00A4               	movwf	??___lwdiv
  3549  0304  0824               	movf	??___lwdiv,w
  3550  0305  07A7               	addwf	___lwdiv@counter,f
  3551  0306  2AFB               	goto	l2278
  3552  0307                     l2280:	
  3553  0307  3001               	movlw	1
  3554  0308                     u1035:	
  3555  0308  35A5               	lslf	___lwdiv@quotient,f
  3556  0309  0DA6               	rlf	___lwdiv@quotient+1,f
  3557  030A  0B89               	decfsz	9,f
  3558  030B  2B08               	goto	u1035
  3559  030C  0821               	movf	___lwdiv@divisor+1,w
  3560  030D  0223               	subwf	___lwdiv@dividend+1,w
  3561  030E  1D03               	skipz
  3562  030F  2B12               	goto	u1045
  3563  0310  0820               	movf	___lwdiv@divisor,w
  3564  0311  0222               	subwf	___lwdiv@dividend,w
  3565  0312                     u1045:	
  3566  0312  1C03               	skipc
  3567  0313  2B19               	goto	l2286
  3568  0314  0820               	movf	___lwdiv@divisor,w
  3569  0315  02A2               	subwf	___lwdiv@dividend,f
  3570  0316  0821               	movf	___lwdiv@divisor+1,w
  3571  0317  3BA3               	subwfb	___lwdiv@dividend+1,f
  3572  0318  1425               	bsf	___lwdiv@quotient,0
  3573  0319                     l2286:	
  3574  0319  3001               	movlw	1
  3575  031A                     u1055:	
  3576  031A  36A1               	lsrf	___lwdiv@divisor+1,f
  3577  031B  0CA0               	rrf	___lwdiv@divisor,f
  3578  031C  0B89               	decfsz	9,f
  3579  031D  2B1A               	goto	u1055
  3580  031E  3001               	movlw	1
  3581  031F  02A7               	subwf	___lwdiv@counter,f
  3582  0320  1D03               	btfss	3,2
  3583  0321  2B07               	goto	l2280
  3584  0322                     l2290:	
  3585  0322  0826               	movf	___lwdiv@quotient+1,w
  3586  0323  00A1               	movwf	?___lwdiv+1
  3587  0324  0825               	movf	___lwdiv@quotient,w
  3588  0325  00A0               	movwf	?___lwdiv
  3589  0326  0008               	return
  3590  0327                     __end_of___lwdiv:	
  3591                           
  3592                           	psect	text6
  3593  0425                     __ptext6:	
  3594 ;; *************** function ___wmul *****************
  3595 ;; Defined at:
  3596 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3599 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  product         2    4[BANK0 ] unsigned int 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2    0[BANK0 ] unsigned int 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;Total ram usage:        6 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    3
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function ___wmul
  3627  0425                     ___wmul:	
  3628                           
  3629                           ;incstack = 0
  3630                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3631  0425  0020               	movlb	0	; select bank0
  3632  0426  01A4               	clrf	___wmul@product
  3633  0427  01A5               	clrf	___wmul@product+1
  3634  0428                     l3168:	
  3635  0428  1C20               	btfss	___wmul@multiplier,0
  3636  0429  2C2E               	goto	l800
  3637  042A  0822               	movf	___wmul@multiplicand,w
  3638  042B  07A4               	addwf	___wmul@product,f
  3639  042C  0823               	movf	___wmul@multiplicand+1,w
  3640  042D  3DA5               	addwfc	___wmul@product+1,f
  3641  042E                     l800:	
  3642  042E  3001               	movlw	1
  3643  042F                     u1835:	
  3644  042F  35A2               	lslf	___wmul@multiplicand,f
  3645  0430  0DA3               	rlf	___wmul@multiplicand+1,f
  3646  0431  0B89               	decfsz	9,f
  3647  0432  2C2F               	goto	u1835
  3648  0433  3001               	movlw	1
  3649  0434                     u1845:	
  3650  0434  36A1               	lsrf	___wmul@multiplier+1,f
  3651  0435  0CA0               	rrf	___wmul@multiplier,f
  3652  0436  0B89               	decfsz	9,f
  3653  0437  2C34               	goto	u1845
  3654  0438  0820               	movf	___wmul@multiplier,w
  3655  0439  0421               	iorwf	___wmul@multiplier+1,w
  3656  043A  1D03               	btfss	3,2
  3657  043B  2C28               	goto	l3168
  3658  043C  0825               	movf	___wmul@product+1,w
  3659  043D  00A1               	movwf	?___wmul+1
  3660  043E  0824               	movf	___wmul@product,w
  3661  043F  00A0               	movwf	?___wmul
  3662  0440  0008               	return
  3663  0441                     __end_of___wmul:	
  3664                           
  3665                           	psect	text7
  3666  0441                     __ptext7:	
  3667 ;; *************** function _SYSTEM_Initialize *****************
  3668 ;; Defined at:
  3669 ;;		line 69 in file "mcc_generated_files/mcc.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    5
  3690 ;; This function calls:
  3691 ;;		_EPWM2_Initialize
  3692 ;;		_I2C1_Initialize
  3693 ;;		_OSCILLATOR_Initialize
  3694 ;;		_PIN_MANAGER_Initialize
  3695 ;;		_SPI2_Initialize
  3696 ;;		_TMR0_Initialize
  3697 ;;		_TMR2_Initialize
  3698 ;;		_TMR4_Initialize
  3699 ;;		_WDT_Initialize
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _SYSTEM_Initialize
  3707  0441                     _SYSTEM_Initialize:	
  3708                           
  3709                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3713  0441  3184  2406  3184   	fcall	_PIN_MANAGER_Initialize
  3714                           
  3715                           ;mcc.c: 73: OSCILLATOR_Initialize();
  3716  0444  3185  2561  3184   	fcall	_OSCILLATOR_Initialize
  3717                           
  3718                           ;mcc.c: 74: WDT_Initialize();
  3719  0447  3185  2566  3184   	fcall	_WDT_Initialize
  3720                           
  3721                           ;mcc.c: 75: I2C1_Initialize();
  3722  044A  3184  245C  3184   	fcall	_I2C1_Initialize
  3723                           
  3724                           ;mcc.c: 76: SPI2_Initialize();
  3725  044D  3185  253C  3184   	fcall	_SPI2_Initialize
  3726                           
  3727                           ;mcc.c: 77: EPWM2_Initialize();
  3728  0450  3185  2503  3184   	fcall	_EPWM2_Initialize
  3729                           
  3730                           ;mcc.c: 78: TMR4_Initialize();
  3731  0453  3184  24A6  3184   	fcall	_TMR4_Initialize
  3732                           
  3733                           ;mcc.c: 79: TMR2_Initialize();
  3734  0456  3184  24D0  3184   	fcall	_TMR2_Initialize
  3735                           
  3736                           ;mcc.c: 80: TMR0_Initialize();
  3737  0459  3184  24BB         	fcall	_TMR0_Initialize
  3738  045B  0008               	return
  3739  045C                     __end_of_SYSTEM_Initialize:	
  3740                           
  3741                           	psect	text8
  3742  0566                     __ptext8:	
  3743 ;; *************** function _WDT_Initialize *****************
  3744 ;; Defined at:
  3745 ;;		line 91 in file "mcc_generated_files/mcc.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;Total ram usage:        0 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    3
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_SYSTEM_Initialize
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _WDT_Initialize
  3775  0566                     _WDT_Initialize:	
  3776                           
  3777                           ;mcc.c: 94: WDTCON = 0x16;
  3778                           
  3779                           ;incstack = 0
  3780                           ; Regs used in _WDT_Initialize: [wreg]
  3781  0566  3016               	movlw	22
  3782  0567  0021               	movlb	1	; select bank1
  3783  0568  0097               	movwf	23	;volatile
  3784  0569  0008               	return
  3785  056A                     __end_of_WDT_Initialize:	
  3786                           
  3787                           	psect	text9
  3788  04A6                     __ptext9:	
  3789 ;; *************** function _TMR4_Initialize *****************
  3790 ;; Defined at:
  3791 ;;		line 63 in file "mcc_generated_files/tmr4.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, pclath, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;Total ram usage:        0 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    4
  3812 ;; This function calls:
  3813 ;;		_TMR4_SetInterruptHandler
  3814 ;;		_TMR4_StartTimer
  3815 ;; This function is called by:
  3816 ;;		_SYSTEM_Initialize
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _TMR4_Initialize
  3822  04A6                     _TMR4_Initialize:	
  3823                           
  3824                           ;tmr4.c: 68: T4CON = 0x03;
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3828  04A6  3003               	movlw	3
  3829  04A7  0028               	movlb	8	; select bank8
  3830  04A8  0097               	movwf	23	;volatile
  3831                           
  3832                           ;tmr4.c: 71: PR4 = 0x1E;
  3833  04A9  301E               	movlw	30
  3834  04AA  0096               	movwf	22	;volatile
  3835                           
  3836                           ;tmr4.c: 74: TMR4 = 0x00;
  3837  04AB  0195               	clrf	21	;volatile
  3838                           
  3839                           ;tmr4.c: 77: PIR3bits.TMR4IF = 0;
  3840  04AC  0020               	movlb	0	; select bank0
  3841  04AD  1093               	bcf	19,1	;volatile
  3842                           
  3843                           ;tmr4.c: 80: PIE3bits.TMR4IE = 1;
  3844  04AE  0021               	movlb	1	; select bank1
  3845  04AF  1493               	bsf	19,1	;volatile
  3846                           
  3847                           ;tmr4.c: 83: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
  3848  04B0  3070               	movlw	low _TMR4_DefaultInterruptHandler
  3849  04B1  0020               	movlb	0	; select bank0
  3850  04B2  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  3851  04B3  3005               	movlw	high _TMR4_DefaultInterruptHandler
  3852  04B4  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  3853  04B5  3185  254F  3184   	fcall	_TMR4_SetInterruptHandler
  3854                           
  3855                           ;tmr4.c: 86: TMR4_StartTimer();
  3856  04B8  3185  256A         	fcall	_TMR4_StartTimer
  3857  04BA  0008               	return
  3858  04BB                     __end_of_TMR4_Initialize:	
  3859                           
  3860                           	psect	text10
  3861  056A                     __ptext10:	
  3862 ;; *************** function _TMR4_StartTimer *****************
  3863 ;; Defined at:
  3864 ;;		line 89 in file "mcc_generated_files/tmr4.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		None
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    3
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_TMR4_Initialize
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           
  3893                           ;psect for function _TMR4_StartTimer
  3894  056A                     _TMR4_StartTimer:	
  3895                           
  3896                           ;tmr4.c: 92: T4CONbits.TMR4ON = 1;
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _TMR4_StartTimer: []
  3900  056A  0028               	movlb	8	; select bank8
  3901  056B  1517               	bsf	23,2	;volatile
  3902  056C  0008               	return
  3903  056D                     __end_of_TMR4_StartTimer:	
  3904                           
  3905                           	psect	text11
  3906  054F                     __ptext11:	
  3907 ;; *************** function _TMR4_SetInterruptHandler *****************
  3908 ;; Defined at:
  3909 ;;		line 134 in file "mcc_generated_files/tmr4.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  3912 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    3
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_TMR4_Initialize
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _TMR4_SetInterruptHandler
  3940  054F                     _TMR4_SetInterruptHandler:	
  3941                           
  3942                           ;tmr4.c: 135: TMR4_InterruptHandler = InterruptHandler;
  3943                           
  3944                           ;incstack = 0
  3945                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  3946  054F  0020               	movlb	0	; select bank0
  3947  0550  0821               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  3948  0551  00EA               	movwf	_TMR4_InterruptHandler+1
  3949  0552  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  3950  0553  00E9               	movwf	_TMR4_InterruptHandler
  3951  0554  0008               	return
  3952  0555                     __end_of_TMR4_SetInterruptHandler:	
  3953                           
  3954                           	psect	text12
  3955  04D0                     __ptext12:	
  3956 ;; *************** function _TMR2_Initialize *****************
  3957 ;; Defined at:
  3958 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    4
  3979 ;; This function calls:
  3980 ;;		_TMR2_SetInterruptHandler
  3981 ;;		_TMR2_StartTimer
  3982 ;; This function is called by:
  3983 ;;		_SYSTEM_Initialize
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _TMR2_Initialize
  3989  04D0                     _TMR2_Initialize:	
  3990                           
  3991                           ;tmr2.c: 68: T2CON = 0x03;
  3992                           
  3993                           ;incstack = 0
  3994                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3995  04D0  3003               	movlw	3
  3996  04D1  0020               	movlb	0	; select bank0
  3997  04D2  009C               	movwf	28	;volatile
  3998                           
  3999                           ;tmr2.c: 71: PR2 = 0x1E;
  4000  04D3  301E               	movlw	30
  4001  04D4  009B               	movwf	27	;volatile
  4002                           
  4003                           ;tmr2.c: 74: TMR2 = 0x00;
  4004  04D5  019A               	clrf	26	;volatile
  4005                           
  4006                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  4007  04D6  1091               	bcf	17,1	;volatile
  4008                           
  4009                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
  4010  04D7  0021               	movlb	1	; select bank1
  4011  04D8  1491               	bsf	17,1	;volatile
  4012                           
  4013                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  4014  04D9  3071               	movlw	low _TMR2_DefaultInterruptHandler
  4015  04DA  0020               	movlb	0	; select bank0
  4016  04DB  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  4017  04DC  3005               	movlw	high _TMR2_DefaultInterruptHandler
  4018  04DD  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  4019  04DE  3185  2555  3184   	fcall	_TMR2_SetInterruptHandler
  4020                           
  4021                           ;tmr2.c: 86: TMR2_StartTimer();
  4022  04E1  3185  256D         	fcall	_TMR2_StartTimer
  4023  04E3  0008               	return
  4024  04E4                     __end_of_TMR2_Initialize:	
  4025                           
  4026                           	psect	text13
  4027  056D                     __ptext13:	
  4028 ;; *************** function _TMR2_StartTimer *****************
  4029 ;; Defined at:
  4030 ;;		line 89 in file "mcc_generated_files/tmr2.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		None
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    3
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_TMR2_Initialize
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function _TMR2_StartTimer
  4060  056D                     _TMR2_StartTimer:	
  4061                           
  4062                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _TMR2_StartTimer: []
  4066  056D  0020               	movlb	0	; select bank0
  4067  056E  151C               	bsf	28,2	;volatile
  4068  056F  0008               	return
  4069  0570                     __end_of_TMR2_StartTimer:	
  4070                           
  4071                           	psect	text14
  4072  0555                     __ptext14:	
  4073 ;; *************** function _TMR2_SetInterruptHandler *****************
  4074 ;; Defined at:
  4075 ;;		line 134 in file "mcc_generated_files/tmr2.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  4078 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;Total ram usage:        2 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    3
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_TMR2_Initialize
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           
  4105                           ;psect for function _TMR2_SetInterruptHandler
  4106  0555                     _TMR2_SetInterruptHandler:	
  4107                           
  4108                           ;tmr2.c: 135: TMR2_InterruptHandler = InterruptHandler;
  4109                           
  4110                           ;incstack = 0
  4111                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  4112  0555  0020               	movlb	0	; select bank0
  4113  0556  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  4114  0557  00EC               	movwf	_TMR2_InterruptHandler+1
  4115  0558  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  4116  0559  00EB               	movwf	_TMR2_InterruptHandler
  4117  055A  0008               	return
  4118  055B                     __end_of_TMR2_SetInterruptHandler:	
  4119                           
  4120                           	psect	text15
  4121  04BB                     __ptext15:	
  4122 ;; *************** function _TMR0_Initialize *****************
  4123 ;; Defined at:
  4124 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0, pclath, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;Total ram usage:        1 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    4
  4145 ;; This function calls:
  4146 ;;		_TMR0_SetInterruptHandler
  4147 ;; This function is called by:
  4148 ;;		_SYSTEM_Initialize
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _TMR0_Initialize
  4154  04BB                     _TMR0_Initialize:	
  4155                           
  4156                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD3 & 0x3F;
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4160  04BB  0021               	movlb	1	; select bank1
  4161  04BC  0815               	movf	21,w	;volatile
  4162  04BD  39C0               	andlw	192
  4163  04BE  3813               	iorlw	19
  4164  04BF  0095               	movwf	21	;volatile
  4165                           
  4166                           ;tmr0.c: 71: TMR0 = 0x83;
  4167  04C0  3083               	movlw	131
  4168  04C1  0020               	movlb	0	; select bank0
  4169  04C2  0095               	movwf	21	;volatile
  4170                           
  4171                           ;tmr0.c: 74: timer0ReloadVal= 131;
  4172  04C3  3083               	movlw	131
  4173  04C4  00A2               	movwf	??_TMR0_Initialize
  4174  04C5  0822               	movf	??_TMR0_Initialize,w
  4175  04C6  00EF               	movwf	_timer0ReloadVal	;volatile
  4176                           
  4177                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  4178  04C7  110B               	bcf	11,2	;volatile
  4179                           
  4180                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  4181  04C8  168B               	bsf	11,5	;volatile
  4182                           
  4183                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4184  04C9  3072               	movlw	low _TMR0_DefaultInterruptHandler
  4185  04CA  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4186  04CB  3005               	movlw	high _TMR0_DefaultInterruptHandler
  4187  04CC  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4188  04CD  3185  255B         	fcall	_TMR0_SetInterruptHandler
  4189  04CF  0008               	return
  4190  04D0                     __end_of_TMR0_Initialize:	
  4191                           
  4192                           	psect	text16
  4193  055B                     __ptext16:	
  4194 ;; *************** function _TMR0_SetInterruptHandler *****************
  4195 ;; Defined at:
  4196 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  4199 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4215 ;;Total ram usage:        2 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    3
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_TMR0_Initialize
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           
  4226                           ;psect for function _TMR0_SetInterruptHandler
  4227  055B                     _TMR0_SetInterruptHandler:	
  4228                           
  4229                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  4230                           
  4231                           ;incstack = 0
  4232                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4233  055B  0020               	movlb	0	; select bank0
  4234  055C  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4235  055D  00EE               	movwf	_TMR0_InterruptHandler+1
  4236  055E  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4237  055F  00ED               	movwf	_TMR0_InterruptHandler
  4238  0560  0008               	return
  4239  0561                     __end_of_TMR0_SetInterruptHandler:	
  4240                           
  4241                           	psect	text17
  4242  053C                     __ptext17:	
  4243 ;; *************** function _SPI2_Initialize *****************
  4244 ;; Defined at:
  4245 ;;		line 63 in file "mcc_generated_files/spi2.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    3
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_SYSTEM_Initialize
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function _SPI2_Initialize
  4275  053C                     _SPI2_Initialize:	
  4276                           
  4277                           ;spi2.c: 68: SSP2STAT = 0x00;
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
  4281  053C  0024               	movlb	4	; select bank4
  4282  053D  019C               	clrf	28	;volatile
  4283                           
  4284                           ;spi2.c: 71: SSP2CON1 = 0x21;
  4285  053E  3021               	movlw	33
  4286  053F  009D               	movwf	29	;volatile
  4287                           
  4288                           ;spi2.c: 74: SSP2ADD = 0x05;
  4289  0540  3005               	movlw	5
  4290  0541  009A               	movwf	26	;volatile
  4291  0542  0008               	return
  4292  0543                     __end_of_SPI2_Initialize:	
  4293                           
  4294                           	psect	text18
  4295  0406                     __ptext18:	
  4296 ;; *************** function _PIN_MANAGER_Initialize *****************
  4297 ;; Defined at:
  4298 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;Total ram usage:        0 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    3
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_SYSTEM_Initialize
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           
  4327                           ;psect for function _PIN_MANAGER_Initialize
  4328  0406                     _PIN_MANAGER_Initialize:	
  4329                           
  4330                           ;pin_manager.c: 56: LATA = 0x00;
  4331                           
  4332                           ;incstack = 0
  4333                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4334  0406  0022               	movlb	2	; select bank2
  4335  0407  018C               	clrf	12	;volatile
  4336                           
  4337                           ;pin_manager.c: 57: LATB = 0x00;
  4338  0408  018D               	clrf	13	;volatile
  4339                           
  4340                           ;pin_manager.c: 58: LATC = 0x00;
  4341  0409  018E               	clrf	14	;volatile
  4342                           
  4343                           ;pin_manager.c: 63: TRISA = 0x3F;
  4344  040A  303F               	movlw	63
  4345  040B  0021               	movlb	1	; select bank1
  4346  040C  008C               	movwf	12	;volatile
  4347                           
  4348                           ;pin_manager.c: 64: TRISB = 0x70;
  4349  040D  3070               	movlw	112
  4350  040E  008D               	movwf	13	;volatile
  4351                           
  4352                           ;pin_manager.c: 65: TRISC = 0xF8;
  4353  040F  30F8               	movlw	248
  4354  0410  008E               	movwf	14	;volatile
  4355                           
  4356                           ;pin_manager.c: 70: ANSELC = 0x01;
  4357  0411  3001               	movlw	1
  4358  0412  0023               	movlb	3	; select bank3
  4359  0413  008E               	movwf	14	;volatile
  4360                           
  4361                           ;pin_manager.c: 71: ANSELB = 0x00;
  4362  0414  018D               	clrf	13	;volatile
  4363                           
  4364                           ;pin_manager.c: 72: ANSELA = 0x17;
  4365  0415  3017               	movlw	23
  4366  0416  008C               	movwf	12	;volatile
  4367                           
  4368                           ;pin_manager.c: 77: WPUB = 0xF0;
  4369  0417  30F0               	movlw	240
  4370  0418  0024               	movlb	4	; select bank4
  4371  0419  008D               	movwf	13	;volatile
  4372                           
  4373                           ;pin_manager.c: 78: WPUA = 0x3F;
  4374  041A  303F               	movlw	63
  4375  041B  008C               	movwf	12	;volatile
  4376                           
  4377                           ;pin_manager.c: 79: WPUC = 0xFF;
  4378  041C  30FF               	movlw	255
  4379  041D  008E               	movwf	14	;volatile
  4380                           
  4381                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  4382  041E  0021               	movlb	1	; select bank1
  4383  041F  1395               	bcf	21,7	;volatile
  4384                           
  4385                           ;pin_manager.c: 86: APFCON1 = 0x00;
  4386  0420  0022               	movlb	2	; select bank2
  4387  0421  019E               	clrf	30	;volatile
  4388                           
  4389                           ;pin_manager.c: 87: APFCON0 = 0x84;
  4390  0422  3084               	movlw	132
  4391  0423  009D               	movwf	29	;volatile
  4392  0424  0008               	return
  4393  0425                     __end_of_PIN_MANAGER_Initialize:	
  4394                           
  4395                           	psect	text19
  4396  0561                     __ptext19:	
  4397 ;; *************** function _OSCILLATOR_Initialize *****************
  4398 ;; Defined at:
  4399 ;;		line 83 in file "mcc_generated_files/mcc.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    3
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_SYSTEM_Initialize
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _OSCILLATOR_Initialize
  4429  0561                     _OSCILLATOR_Initialize:	
  4430                           
  4431                           ;mcc.c: 86: OSCCON = 0x70;
  4432                           
  4433                           ;incstack = 0
  4434                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4435  0561  3070               	movlw	112
  4436  0562  0021               	movlb	1	; select bank1
  4437  0563  0099               	movwf	25	;volatile
  4438                           
  4439                           ;mcc.c: 88: OSCTUNE = 0x00;
  4440  0564  0198               	clrf	24	;volatile
  4441  0565  0008               	return
  4442  0566                     __end_of_OSCILLATOR_Initialize:	
  4443                           
  4444                           	psect	text20
  4445  045C                     __ptext20:	
  4446 ;; *************** function _I2C1_Initialize *****************
  4447 ;; Defined at:
  4448 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;Total ram usage:        1 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    3
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_SYSTEM_Initialize
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _I2C1_Initialize
  4478  045C                     _I2C1_Initialize:	
  4479                           
  4480                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  4484  045C  3066               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  4485  045D  0020               	movlb	0	; select bank0
  4486  045E  00A0               	movwf	??_I2C1_Initialize
  4487  045F  0820               	movf	??_I2C1_Initialize,w
  4488  0460  00D2               	movwf	low ((_i2c1_object| 0+1))
  4489                           
  4490                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  4491  0461  3066               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  4492  0462  00A0               	movwf	??_I2C1_Initialize
  4493  0463  0820               	movf	??_I2C1_Initialize,w
  4494  0464  00D1               	movwf	_i2c1_object
  4495                           
  4496                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  4497  0465  14D3               	bsf	_i2c1_object+2,1
  4498                           
  4499                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  4500  0466  1053               	bcf	_i2c1_object+2,0
  4501                           
  4502                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  4503  0467  01D5               	clrf	_i2c1_object+4
  4504                           
  4505                           ;i2c1.c: 208: SSP1STAT = 0x80;
  4506  0468  3080               	movlw	128
  4507  0469  0024               	movlb	4	; select bank4
  4508  046A  0094               	movwf	20	;volatile
  4509                           
  4510                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  4511  046B  3028               	movlw	40
  4512  046C  0095               	movwf	21	;volatile
  4513                           
  4514                           ;i2c1.c: 212: SSP1CON3 = 0x08;
  4515  046D  3008               	movlw	8
  4516  046E  0097               	movwf	23	;volatile
  4517                           
  4518                           ;i2c1.c: 214: SSP1ADD = 0x13;
  4519  046F  3013               	movlw	19
  4520  0470  0092               	movwf	18	;volatile
  4521                           
  4522                           ;i2c1.c: 218: PIR1bits.SSP1IF = 0;
  4523  0471  0020               	movlb	0	; select bank0
  4524  0472  1191               	bcf	17,3	;volatile
  4525                           
  4526                           ;i2c1.c: 220: PIE1bits.SSP1IE = 1;
  4527  0473  0021               	movlb	1	; select bank1
  4528  0474  1591               	bsf	17,3	;volatile
  4529  0475  0008               	return
  4530  0476                     __end_of_I2C1_Initialize:	
  4531                           
  4532                           	psect	text21
  4533  0503                     __ptext21:	
  4534 ;; *************** function _EPWM2_Initialize *****************
  4535 ;; Defined at:
  4536 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      void 
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;Total ram usage:        0 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    3
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_SYSTEM_Initialize
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           
  4565                           ;psect for function _EPWM2_Initialize
  4566  0503                     _EPWM2_Initialize:	
  4567                           
  4568                           ;epwm2.c: 68: CCP2CON = 0x0E;
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _EPWM2_Initialize: [wreg+status,2+status,0]
  4572  0503  300E               	movlw	14
  4573  0504  0025               	movlb	5	; select bank5
  4574  0505  009A               	movwf	26	;volatile
  4575                           
  4576                           ;epwm2.c: 71: CCP2AS = 0x00;
  4577  0506  019C               	clrf	28	;volatile
  4578                           
  4579                           ;epwm2.c: 74: PWM2CON = 0x80;
  4580  0507  3080               	movlw	128
  4581  0508  009B               	movwf	27	;volatile
  4582                           
  4583                           ;epwm2.c: 77: PSTR2CON = 0x02;
  4584  0509  3002               	movlw	2
  4585  050A  009D               	movwf	29	;volatile
  4586                           
  4587                           ;epwm2.c: 80: CCPR2L = 0x00;
  4588  050B  0198               	clrf	24	;volatile
  4589                           
  4590                           ;epwm2.c: 83: CCPR2H = 0x00;
  4591  050C  0199               	clrf	25	;volatile
  4592                           
  4593                           ;epwm2.c: 87: CCPTMRSbits.C2TSEL = 0x0;
  4594  050D  30F3               	movlw	-13
  4595  050E  059E               	andwf	30,f	;volatile
  4596  050F  0008               	return
  4597  0510                     __end_of_EPWM2_Initialize:	
  4598                           
  4599                           	psect	text22
  4600  0510                     __ptext22:	
  4601 ;; *************** function _SPI2_Exchange8bit *****************
  4602 ;; Defined at:
  4603 ;;		line 77 in file "mcc_generated_files/spi2.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  data            1    wreg     unsigned char 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  data            1    0[BANK0 ] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      unsigned char 
  4610 ;; Registers used:
  4611 ;;		wreg
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;Total ram usage:        1 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    3
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;;		_SPI2_Exchange8bitBuffer
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function _SPI2_Exchange8bit
  4634  0510                     _SPI2_Exchange8bit:	
  4635                           
  4636                           ;incstack = 0
  4637                           ; Regs used in _SPI2_Exchange8bit: [wreg]
  4638                           ;SPI2_Exchange8bit@data stored from wreg
  4639  0510  0020               	movlb	0	; select bank0
  4640  0511  00A0               	movwf	SPI2_Exchange8bit@data
  4641                           
  4642                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
  4643  0512  0024               	movlb	4	; select bank4
  4644  0513  139D               	bcf	29,7	;volatile
  4645                           
  4646                           ;spi2.c: 82: SSP2BUF = data;
  4647  0514  0020               	movlb	0	; select bank0
  4648  0515  0820               	movf	SPI2_Exchange8bit@data,w
  4649  0516  0024               	movlb	4	; select bank4
  4650  0517  0099               	movwf	25	;volatile
  4651  0518                     l273:	
  4652                           ;spi2.c: 85: {
  4653                           
  4654                           ;spi2.c: 84: while(SSP2STATbits.BF == 0x0)
  4655                           
  4656  0518  1C1C               	btfss	28,0	;volatile
  4657  0519  2D18               	goto	l273
  4658                           
  4659                           ;spi2.c: 86: }
  4660                           ;spi2.c: 88: return (SSP2BUF);
  4661  051A  0819               	movf	25,w	;volatile
  4662  051B  0008               	return
  4663  051C                     __end_of_SPI2_Exchange8bit:	
  4664                           
  4665                           	psect	text23
  4666  03C5                     __ptext23:	
  4667 ;; *************** function _I2C_Write_Byte_Single_Reg *****************
  4668 ;; Defined at:
  4669 ;;		line 10 in file "I2C_UTILS.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  device          1    wreg     unsigned char 
  4672 ;;  info            1   14[BANK0 ] unsigned char 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  device          1   18[BANK0 ] unsigned char 
  4675 ;;  temp            2   19[BANK0 ] unsigned char [2]
  4676 ;;  status          1   21[BANK0 ] enum E2971
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4686 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;Total ram usage:        8 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    5
  4693 ;; This function calls:
  4694 ;;		_I2C1_MasterWrite
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;;		_LCD_Init
  4698 ;;		_LCDwritePCF8574
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function _I2C_Write_Byte_Single_Reg
  4704  03C5                     _I2C_Write_Byte_Single_Reg:	
  4705                           
  4706                           ;incstack = 0
  4707                           ; Regs used in _I2C_Write_Byte_Single_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  4708                           ;I2C_Write_Byte_Single_Reg@device stored from wreg
  4709  03C5  0020               	movlb	0	; select bank0
  4710  03C6  00B2               	movwf	I2C_Write_Byte_Single_Reg@device
  4711                           
  4712                           ;I2C_UTILS.c: 12: char temp[2];
  4713                           ;I2C_UTILS.c: 13: temp[0] = info;
  4714  03C7  082E               	movf	I2C_Write_Byte_Single_Reg@info,w
  4715  03C8  00AF               	movwf	??_I2C_Write_Byte_Single_Reg
  4716  03C9  082F               	movf	??_I2C_Write_Byte_Single_Reg,w
  4717  03CA  00B3               	movwf	I2C_Write_Byte_Single_Reg@temp
  4718                           
  4719                           ;I2C_UTILS.c: 14: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  4720  03CB  3002               	movlw	2
  4721  03CC  00AF               	movwf	??_I2C_Write_Byte_Single_Reg
  4722  03CD  082F               	movf	??_I2C_Write_Byte_Single_Reg,w
  4723  03CE  00B5               	movwf	I2C_Write_Byte_Single_Reg@status
  4724                           
  4725                           ;I2C_UTILS.c: 15: I2C1_MasterWrite( temp,
  4726                           ;I2C_UTILS.c: 16: 1,
  4727                           ;I2C_UTILS.c: 17: device,
  4728                           ;I2C_UTILS.c: 18: &status);
  4729  03CF  01A7               	clrf	I2C1_MasterWrite@length
  4730  03D0  0AA7               	incf	I2C1_MasterWrite@length,f
  4731  03D1  0832               	movf	I2C_Write_Byte_Single_Reg@device,w
  4732  03D2  00AF               	movwf	??_I2C_Write_Byte_Single_Reg
  4733  03D3  01B0               	clrf	??_I2C_Write_Byte_Single_Reg+1
  4734  03D4  082F               	movf	??_I2C_Write_Byte_Single_Reg,w
  4735  03D5  00A8               	movwf	I2C1_MasterWrite@address
  4736  03D6  0830               	movf	??_I2C_Write_Byte_Single_Reg+1,w
  4737  03D7  00A9               	movwf	I2C1_MasterWrite@address+1
  4738  03D8  3035               	movlw	(low (I2C_Write_Byte_Single_Reg@status| 0))& (0+255)
  4739  03D9  00B1               	movwf	??_I2C_Write_Byte_Single_Reg+2
  4740  03DA  0831               	movf	??_I2C_Write_Byte_Single_Reg+2,w
  4741  03DB  00AA               	movwf	I2C1_MasterWrite@pflag
  4742  03DC  3033               	movlw	(low (I2C_Write_Byte_Single_Reg@temp| 0))& (0+255)
  4743  03DD  3183  2354  3183   	fcall	_I2C1_MasterWrite
  4744  03E0                     l2676:	
  4745                           ;I2C_UTILS.c: 21: while(status == I2C1_MESSAGE_PENDING);
  4746                           
  4747  03E0  3002               	movlw	2
  4748  03E1  0020               	movlb	0	; select bank0
  4749  03E2  0635               	xorwf	I2C_Write_Byte_Single_Reg@status,w
  4750  03E3  1D03               	btfss	3,2
  4751  03E4  0008               	return
  4752  03E5  2BE0               	goto	l2676
  4753  03E6                     __end_of_I2C_Write_Byte_Single_Reg:	
  4754                           
  4755                           	psect	text24
  4756  0354                     __ptext24:	
  4757 ;; *************** function _I2C1_MasterWrite *****************
  4758 ;; Defined at:
  4759 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  pdata           1    wreg     PTR unsigned char 
  4762 ;;		 -> I2C_Write_Byte_Single_Reg@temp(2), 
  4763 ;;  length          1    7[BANK0 ] unsigned char 
  4764 ;;  address         2    8[BANK0 ] unsigned int 
  4765 ;;  pflag           1   10[BANK0 ] PTR enum E2966
  4766 ;;		 -> I2C_Write_Byte_Single_Reg@status(1), 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  4769 ;;		 -> I2C_Write_Byte_Single_Reg@temp(2), 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4779 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;Total ram usage:        7 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    4
  4786 ;; This function calls:
  4787 ;;		_I2C1_MasterTRBInsert
  4788 ;;		_I2C1_MasterWriteTRBBuild
  4789 ;; This function is called by:
  4790 ;;		_I2C_Write_Byte_Single_Reg
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function _I2C1_MasterWrite
  4796  0354                     _I2C1_MasterWrite:	
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4800                           ;I2C1_MasterWrite@pdata stored from wreg
  4801  0354  0020               	movlb	0	; select bank0
  4802  0355  00AD               	movwf	I2C1_MasterWrite@pdata
  4803                           
  4804                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  4805                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  4806  0356  1853               	btfsc	_i2c1_object+2,0
  4807  0357  2B75               	goto	l2436
  4808                           
  4809                           ;i2c1.c: 608: {
  4810                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  4811  0358  082D               	movf	I2C1_MasterWrite@pdata,w
  4812  0359  00AB               	movwf	??_I2C1_MasterWrite
  4813  035A  082B               	movf	??_I2C1_MasterWrite,w
  4814  035B  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  4815  035C  0827               	movf	I2C1_MasterWrite@length,w
  4816  035D  00AC               	movwf	??_I2C1_MasterWrite+1
  4817  035E  082C               	movf	??_I2C1_MasterWrite+1,w
  4818  035F  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  4819  0360  0829               	movf	I2C1_MasterWrite@address+1,w
  4820  0361  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  4821  0362  0828               	movf	I2C1_MasterWrite@address,w
  4822  0363  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  4823  0364  3062               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  4824  0365  3183  23E6  3183   	fcall	_I2C1_MasterWriteTRBBuild
  4825                           
  4826                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  4827  0368  3062               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  4828  0369  0020               	movlb	0	; select bank0
  4829  036A  00AB               	movwf	??_I2C1_MasterWrite
  4830  036B  082B               	movf	??_I2C1_MasterWrite,w
  4831  036C  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  4832  036D  082A               	movf	I2C1_MasterWrite@pflag,w
  4833  036E  00AC               	movwf	??_I2C1_MasterWrite+1
  4834  036F  082C               	movf	??_I2C1_MasterWrite+1,w
  4835  0370  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  4836  0371  3001               	movlw	1
  4837  0372  3182  22AD         	fcall	_I2C1_MasterTRBInsert
  4838                           
  4839                           ;i2c1.c: 611: }
  4840  0374  0008               	return
  4841  0375                     l2436:	
  4842                           
  4843                           ;i2c1.c: 612: else
  4844                           ;i2c1.c: 613: {
  4845                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  4846  0375  0020               	movlb	0	; select bank0
  4847  0376  082A               	movf	I2C1_MasterWrite@pflag,w
  4848  0377  0086               	movwf	6
  4849  0378  0187               	clrf	7
  4850  0379  0181               	clrf	1
  4851  037A  0A81               	incf	1,f
  4852  037B  0008               	return
  4853  037C                     __end_of_I2C1_MasterWrite:	
  4854                           
  4855                           	psect	text25
  4856  03E6                     __ptext25:	
  4857 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  4858 ;; Defined at:
  4859 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  ptrb            1    wreg     PTR struct .
  4862 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  4863 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  4864 ;;		 -> I2C_Write_Byte_Single_Reg@temp(2), 
  4865 ;;  length          1    1[BANK0 ] unsigned char 
  4866 ;;  address         2    2[BANK0 ] unsigned int 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  ptrb            1    6[BANK0 ] PTR struct .
  4869 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4879 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;Total ram usage:        7 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    3
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_I2C1_MasterWrite
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _I2C1_MasterWriteTRBBuild
  4895  03E6                     _I2C1_MasterWriteTRBBuild:	
  4896                           
  4897                           ;incstack = 0
  4898                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  4899                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  4900  03E6  0020               	movlb	0	; select bank0
  4901  03E7  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  4902                           
  4903                           ;i2c1.c: 713: ptrb->address = address << 1;
  4904  03E8  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  4905  03E9  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  4906  03EA  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  4907  03EB  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  4908  03EC  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  4909  03ED  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  4910  03EE  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  4911  03EF  0086               	movwf	6
  4912  03F0  0187               	clrf	7
  4913  03F1  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  4914  03F2  3FC0               	movwi [0]fsr1
  4915  03F3  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  4916  03F4  3FC1               	movwi [1]fsr1
  4917                           
  4918                           ;i2c1.c: 714: ptrb->length = length;
  4919  03F5  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  4920  03F6  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  4921  03F7  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  4922  03F8  3E02               	addlw	2
  4923  03F9  0086               	movwf	6
  4924  03FA  0187               	clrf	7
  4925  03FB  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  4926  03FC  0081               	movwf	1
  4927                           
  4928                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  4929  03FD  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  4930  03FE  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  4931  03FF  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  4932  0400  3E03               	addlw	3
  4933  0401  0086               	movwf	6
  4934  0402  0187               	clrf	7
  4935  0403  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  4936  0404  0081               	movwf	1
  4937  0405  0008               	return
  4938  0406                     __end_of_I2C1_MasterWriteTRBBuild:	
  4939                           
  4940                           	psect	text26
  4941  02AD                     __ptext26:	
  4942 ;; *************** function _I2C1_MasterTRBInsert *****************
  4943 ;; Defined at:
  4944 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  count           1    wreg     unsigned char 
  4947 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  4948 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
  4949 ;;  pflag           1    1[BANK0 ] PTR enum E2966
  4950 ;;		 -> I2C_Read_Byte_Single_Reg@status(1), I2C_Write_Byte_Single_Reg@status(1), 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  count           1    3[BANK0 ] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;Total ram usage:        4 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    3
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_I2C1_MasterWrite
  4973 ;;		_I2C1_MasterRead
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function _I2C1_MasterTRBInsert
  4979  02AD                     _I2C1_MasterTRBInsert:	
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  4983                           ;I2C1_MasterTRBInsert@count stored from wreg
  4984  02AD  0020               	movlb	0	; select bank0
  4985  02AE  00A3               	movwf	I2C1_MasterTRBInsert@count
  4986                           
  4987                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  4988  02AF  1853               	btfsc	_i2c1_object+2,0
  4989  02B0  2AE1               	goto	l2250
  4990                           
  4991                           ;i2c1.c: 649: {
  4992                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  4993  02B1  3002               	movlw	2
  4994  02B2  00A2               	movwf	??_I2C1_MasterTRBInsert
  4995  02B3  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  4996  02B4  0086               	movwf	6
  4997  02B5  0187               	clrf	7
  4998  02B6  0822               	movf	??_I2C1_MasterTRBInsert,w
  4999  02B7  0081               	movwf	1
  5000                           
  5001                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  5002  02B8  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  5003  02B9  00A2               	movwf	??_I2C1_MasterTRBInsert
  5004  02BA  0A51               	incf	_i2c1_object,w
  5005  02BB  0086               	movwf	6
  5006  02BC  0187               	clrf	7
  5007  02BD  0822               	movf	??_I2C1_MasterTRBInsert,w
  5008  02BE  0081               	movwf	1
  5009                           
  5010                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  5011  02BF  0823               	movf	I2C1_MasterTRBInsert@count,w
  5012  02C0  00A2               	movwf	??_I2C1_MasterTRBInsert
  5013  02C1  0851               	movf	_i2c1_object,w
  5014  02C2  0086               	movwf	6
  5015  02C3  0187               	clrf	7
  5016  02C4  0822               	movf	??_I2C1_MasterTRBInsert,w
  5017  02C5  0081               	movwf	1
  5018                           
  5019                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  5020  02C6  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  5021  02C7  00A2               	movwf	??_I2C1_MasterTRBInsert
  5022  02C8  0851               	movf	_i2c1_object,w
  5023  02C9  3E02               	addlw	2
  5024  02CA  0086               	movwf	6
  5025  02CB  0187               	clrf	7
  5026  02CC  0822               	movf	??_I2C1_MasterTRBInsert,w
  5027  02CD  0081               	movwf	1
  5028                           
  5029                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  5030  02CE  3003               	movlw	3
  5031  02CF  00A2               	movwf	??_I2C1_MasterTRBInsert
  5032  02D0  0822               	movf	??_I2C1_MasterTRBInsert,w
  5033  02D1  07D1               	addwf	_i2c1_object,f
  5034                           
  5035                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  5036  02D2  0851               	movf	_i2c1_object,w
  5037  02D3  3A69               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  5038  02D4  1D03               	skipz
  5039  02D5  2ADA               	goto	l2246
  5040                           
  5041                           ;i2c1.c: 659: {
  5042                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  5043  02D6  3066               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  5044  02D7  00A2               	movwf	??_I2C1_MasterTRBInsert
  5045  02D8  0822               	movf	??_I2C1_MasterTRBInsert,w
  5046  02D9  00D1               	movwf	_i2c1_object
  5047  02DA                     l2246:	
  5048                           
  5049                           ;i2c1.c: 662: }
  5050                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  5051  02DA  10D3               	bcf	_i2c1_object+2,1
  5052                           
  5053                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  5054  02DB  0852               	movf	low ((_i2c1_object| 0+1)),w
  5055  02DC  0651               	xorwf	_i2c1_object,w
  5056  02DD  1D03               	skipz
  5057  02DE  2AE6               	goto	l2252
  5058                           
  5059                           ;i2c1.c: 670: {
  5060                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  5061  02DF  1453               	bsf	_i2c1_object+2,0
  5062                           
  5063                           ;i2c1.c: 673: }
  5064                           ;i2c1.c: 675: }
  5065  02E0  2AE6               	goto	l2252
  5066  02E1                     l2250:	
  5067                           
  5068                           ;i2c1.c: 676: else
  5069                           ;i2c1.c: 677: {
  5070                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  5071  02E1  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  5072  02E2  0086               	movwf	6
  5073  02E3  0187               	clrf	7
  5074  02E4  0181               	clrf	1
  5075  02E5  0A81               	incf	1,f
  5076  02E6                     l2252:	
  5077                           
  5078                           ;i2c1.c: 679: }
  5079                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  5080  02E6  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  5081  02E7  0086               	movwf	6
  5082  02E8  0187               	clrf	7
  5083  02E9  3002               	movlw	2
  5084  02EA  0601               	xorwf	1,w
  5085  02EB  1D03               	btfss	3,2
  5086  02EC  0008               	return
  5087  02ED                     l2256:	
  5088                           ;i2c1.c: 683: {
  5089                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
  5090                           
  5091  02ED  085D               	movf	_i2c1_state,w
  5092  02EE  1D03               	btfss	3,2
  5093  02EF  2AED               	goto	l2256
  5094                           
  5095                           ;i2c1.c: 685: {
  5096                           ;i2c1.c: 688: PIR1bits.SSP1IF = 1;
  5097  02F0  1591               	bsf	17,3	;volatile
  5098  02F1  0008               	return
  5099  02F2                     __end_of_I2C1_MasterTRBInsert:	
  5100                           
  5101                           	psect	intentry
  5102  0004                     __pintentry:	
  5103 ;; *************** function _INTERRUPT_InterruptManager *****************
  5104 ;; Defined at:
  5105 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;		None
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5123 ;;Total ram usage:        1 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    2
  5126 ;; This function calls:
  5127 ;;		_I2C1_BusCollisionISR
  5128 ;;		_I2C1_ISR
  5129 ;;		_TMR0_ISR
  5130 ;;		_TMR2_ISR
  5131 ;;		_TMR4_ISR
  5132 ;; This function is called by:
  5133 ;;		Interrupt level 1
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137  0004                     _INTERRUPT_InterruptManager:	
  5138                           
  5139                           ;incstack = 0
  5140  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5141                           
  5142                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5143  0005  3180               	pagesel	$
  5144  0006  0020               	movlb	0	; select bank0
  5145  0007  087F               	movf	127,w
  5146  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  5147                           
  5148                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5149  0009  1A8B               	btfsc	11,5	;volatile
  5150  000A  1D0B               	btfss	11,2	;volatile
  5151  000B  2810               	goto	i1l245
  5152                           
  5153                           ;interrupt_manager.c: 55: {
  5154                           ;interrupt_manager.c: 56: TMR0_ISR();
  5155  000C  3184  24F5  3180   	fcall	_TMR0_ISR
  5156                           
  5157                           ;interrupt_manager.c: 57: }
  5158  000F  283E               	goto	i1l255
  5159  0010                     i1l245:	
  5160                           
  5161                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE2bits.BCL1IE == 1 && PIR2bi
      +                          ts.BCL1IF == 1)
  5162  0010  1F0B               	btfss	11,6	;volatile
  5163  0011  281C               	goto	i1l247
  5164  0012  0021               	movlb	1	; select bank1
  5165  0013  1D92               	btfss	18,3	;volatile
  5166  0014  281C               	goto	i1l247
  5167  0015  0020               	movlb	0	; select bank0
  5168  0016  1D92               	btfss	18,3	;volatile
  5169  0017  281C               	goto	i1l247
  5170                           
  5171                           ;interrupt_manager.c: 59: {
  5172                           ;interrupt_manager.c: 60: I2C1_BusCollisionISR();
  5173  0018  3185  2573  3180   	fcall	_I2C1_BusCollisionISR
  5174                           
  5175                           ;interrupt_manager.c: 61: }
  5176  001B  283E               	goto	i1l255
  5177  001C                     i1l247:	
  5178                           
  5179                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.SSP1IE == 1 && PIR1bi
      +                          ts.SSP1IF == 1)
  5180  001C  1F0B               	btfss	11,6	;volatile
  5181  001D  2828               	goto	i1l249
  5182  001E  0021               	movlb	1	; select bank1
  5183  001F  1D91               	btfss	17,3	;volatile
  5184  0020  2828               	goto	i1l249
  5185  0021  0020               	movlb	0	; select bank0
  5186  0022  1D91               	btfss	17,3	;volatile
  5187  0023  2828               	goto	i1l249
  5188                           
  5189                           ;interrupt_manager.c: 63: {
  5190                           ;interrupt_manager.c: 64: I2C1_ISR();
  5191  0024  3180  2063  3180   	fcall	_I2C1_ISR
  5192                           
  5193                           ;interrupt_manager.c: 65: }
  5194  0027  283E               	goto	i1l255
  5195  0028                     i1l249:	
  5196                           
  5197                           ;interrupt_manager.c: 66: else if(INTCONbits.PEIE == 1 && PIE3bits.TMR4IE == 1 && PIR3bi
      +                          ts.TMR4IF == 1)
  5198  0028  1F0B               	btfss	11,6	;volatile
  5199  0029  2834               	goto	i1l251
  5200  002A  0021               	movlb	1	; select bank1
  5201  002B  1C93               	btfss	19,1	;volatile
  5202  002C  2834               	goto	i1l251
  5203  002D  0020               	movlb	0	; select bank0
  5204  002E  1C93               	btfss	19,1	;volatile
  5205  002F  2834               	goto	i1l251
  5206                           
  5207                           ;interrupt_manager.c: 67: {
  5208                           ;interrupt_manager.c: 68: TMR4_ISR();
  5209  0030  3185  251C  3180   	fcall	_TMR4_ISR
  5210                           
  5211                           ;interrupt_manager.c: 69: }
  5212  0033  283E               	goto	i1l255
  5213  0034                     i1l251:	
  5214                           
  5215                           ;interrupt_manager.c: 70: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  5216  0034  1F0B               	btfss	11,6	;volatile
  5217  0035  283E               	goto	i1l255
  5218  0036  0021               	movlb	1	; select bank1
  5219  0037  1C91               	btfss	17,1	;volatile
  5220  0038  283E               	goto	i1l255
  5221  0039  0020               	movlb	0	; select bank0
  5222  003A  1C91               	btfss	17,1	;volatile
  5223  003B  283E               	goto	i1l255
  5224                           
  5225                           ;interrupt_manager.c: 71: {
  5226                           ;interrupt_manager.c: 72: TMR2_ISR();
  5227  003C  3185  2528         	fcall	_TMR2_ISR
  5228  003E                     i1l255:	
  5229                           ;interrupt_manager.c: 74: else
  5230                           ;interrupt_manager.c: 75: {
  5231                           
  5232                           ;interrupt_manager.c: 73: }
  5233                           
  5234  003E  087D               	movf	??_INTERRUPT_InterruptManager,w
  5235  003F  0020               	movlb	0	; select bank0
  5236  0040  00FF               	movwf	127
  5237  0041  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5238  0042  0009               	retfie
  5239  0043                     __end_of_INTERRUPT_InterruptManager:	
  5240                           
  5241                           	psect	text28
  5242  051C                     __ptext28:	
  5243 ;; *************** function _TMR4_ISR *****************
  5244 ;; Defined at:
  5245 ;;		line 121 in file "mcc_generated_files/tmr4.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, pclath, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    1
  5266 ;; This function calls:
  5267 ;;		Absolute function
  5268 ;;		_TMR4_DefaultInterruptHandler
  5269 ;; This function is called by:
  5270 ;;		_INTERRUPT_InterruptManager
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function _TMR4_ISR
  5276  051C                     _TMR4_ISR:	
  5277                           
  5278                           ;tmr4.c: 125: PIR3bits.TMR4IF = 0;
  5279                           
  5280                           ;incstack = 0
  5281                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
  5282  051C  0020               	movlb	0	; select bank0
  5283  051D  1093               	bcf	19,1	;volatile
  5284                           
  5285                           ;tmr4.c: 127: if(TMR4_InterruptHandler)
  5286  051E  0869               	movf	_TMR4_InterruptHandler,w
  5287  051F  046A               	iorwf	_TMR4_InterruptHandler+1,w
  5288  0520  1903               	btfsc	3,2
  5289  0521  0008               	return
  5290                           
  5291                           ;tmr4.c: 128: {
  5292                           ;tmr4.c: 129: TMR4_InterruptHandler();
  5293  0522  086A               	movf	_TMR4_InterruptHandler+1,w
  5294  0523  008A               	movwf	10
  5295  0524  0869               	movf	_TMR4_InterruptHandler,w
  5296  0525  000A               	callw
  5297  0526  3185               	pagesel	$
  5298  0527  0008               	return
  5299  0528                     __end_of_TMR4_ISR:	
  5300                           
  5301                           	psect	text29
  5302  0570                     __ptext29:	
  5303 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  5304 ;; Defined at:
  5305 ;;		line 138 in file "mcc_generated_files/tmr4.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		None
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;Total ram usage:        0 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_TMR4_Initialize
  5329 ;;		_TMR4_ISR
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           
  5334                           ;psect for function _TMR4_DefaultInterruptHandler
  5335  0570                     _TMR4_DefaultInterruptHandler:	
  5336                           
  5337                           ;incstack = 0
  5338                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  5339  0570  0008               	return
  5340  0571                     __end_of_TMR4_DefaultInterruptHandler:	
  5341                           
  5342                           	psect	text30
  5343  0528                     __ptext30:	
  5344 ;; *************** function _TMR2_ISR *****************
  5345 ;; Defined at:
  5346 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    1
  5367 ;; This function calls:
  5368 ;;		Absolute function
  5369 ;;		_TMR2_DefaultInterruptHandler
  5370 ;; This function is called by:
  5371 ;;		_INTERRUPT_InterruptManager
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function _TMR2_ISR
  5377  0528                     _TMR2_ISR:	
  5378                           
  5379                           ;tmr2.c: 125: PIR1bits.TMR2IF = 0;
  5380                           
  5381                           ;incstack = 0
  5382                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  5383  0528  0020               	movlb	0	; select bank0
  5384  0529  1091               	bcf	17,1	;volatile
  5385                           
  5386                           ;tmr2.c: 127: if(TMR2_InterruptHandler)
  5387  052A  086B               	movf	_TMR2_InterruptHandler,w
  5388  052B  046C               	iorwf	_TMR2_InterruptHandler+1,w
  5389  052C  1903               	btfsc	3,2
  5390  052D  0008               	return
  5391                           
  5392                           ;tmr2.c: 128: {
  5393                           ;tmr2.c: 129: TMR2_InterruptHandler();
  5394  052E  086C               	movf	_TMR2_InterruptHandler+1,w
  5395  052F  008A               	movwf	10
  5396  0530  086B               	movf	_TMR2_InterruptHandler,w
  5397  0531  000A               	callw
  5398  0532  3185               	pagesel	$
  5399  0533  0008               	return
  5400  0534                     __end_of_TMR2_ISR:	
  5401                           
  5402                           	psect	text31
  5403  0571                     __ptext31:	
  5404 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5405 ;; Defined at:
  5406 ;;		line 138 in file "mcc_generated_files/tmr2.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		None
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_TMR2_Initialize
  5430 ;;		_TMR2_ISR
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           
  5435                           ;psect for function _TMR2_DefaultInterruptHandler
  5436  0571                     _TMR2_DefaultInterruptHandler:	
  5437                           
  5438                           ;incstack = 0
  5439                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5440  0571  0008               	return
  5441  0572                     __end_of_TMR2_DefaultInterruptHandler:	
  5442                           
  5443                           	psect	text32
  5444  04F5                     __ptext32:	
  5445 ;; *************** function _TMR0_ISR *****************
  5446 ;; Defined at:
  5447 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0, pclath, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;Total ram usage:        0 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    1
  5468 ;; This function calls:
  5469 ;;		Absolute function
  5470 ;;		_TMR0_DefaultInterruptHandler
  5471 ;; This function is called by:
  5472 ;;		_INTERRUPT_InterruptManager
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function _TMR0_ISR
  5478  04F5                     _TMR0_ISR:	
  5479                           
  5480                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  5481                           
  5482                           ;incstack = 0
  5483                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5484  04F5  110B               	bcf	11,2	;volatile
  5485                           
  5486                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  5487  04F6  0020               	movlb	0	; select bank0
  5488  04F7  086F               	movf	_timer0ReloadVal,w	;volatile
  5489  04F8  0095               	movwf	21	;volatile
  5490                           
  5491                           ;tmr0.c: 116: if(TMR0_InterruptHandler)
  5492  04F9  086D               	movf	_TMR0_InterruptHandler,w
  5493  04FA  046E               	iorwf	_TMR0_InterruptHandler+1,w
  5494  04FB  1903               	btfsc	3,2
  5495  04FC  0008               	return
  5496                           
  5497                           ;tmr0.c: 117: {
  5498                           ;tmr0.c: 118: TMR0_InterruptHandler();
  5499  04FD  086E               	movf	_TMR0_InterruptHandler+1,w
  5500  04FE  008A               	movwf	10
  5501  04FF  086D               	movf	_TMR0_InterruptHandler,w
  5502  0500  000A               	callw
  5503  0501  3184               	pagesel	$
  5504  0502  0008               	return
  5505  0503                     __end_of_TMR0_ISR:	
  5506                           
  5507                           	psect	text33
  5508  0572                     __ptext33:	
  5509 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5510 ;; Defined at:
  5511 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		None
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_TMR0_Initialize
  5535 ;;		_TMR0_ISR
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _TMR0_DefaultInterruptHandler
  5541  0572                     _TMR0_DefaultInterruptHandler:	
  5542                           
  5543                           ;incstack = 0
  5544                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5545  0572  0008               	return
  5546  0573                     __end_of_TMR0_DefaultInterruptHandler:	
  5547                           
  5548                           	psect	text34
  5549  0063                     __ptext34:	
  5550 ;; *************** function _I2C1_ISR *****************
  5551 ;; Defined at:
  5552 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;Total ram usage:        4 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    1
  5573 ;; This function calls:
  5574 ;;		_I2C1_FunctionComplete
  5575 ;;		_I2C1_Stop
  5576 ;; This function is called by:
  5577 ;;		_INTERRUPT_InterruptManager
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _I2C1_ISR
  5583  0063                     _I2C1_ISR:	
  5584                           
  5585                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  5586                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  5587                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  5588                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  5589                           ;i2c1.c: 241: PIR1bits.SSP1IF = 0;
  5590                           
  5591                           ;incstack = 0
  5592                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5593  0063  0020               	movlb	0	; select bank0
  5594  0064  1191               	bcf	17,3	;volatile
  5595                           
  5596                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  5597  0065  0024               	movlb	4	; select bank4
  5598  0066  1F95               	btfss	21,7	;volatile
  5599  0067  2997               	goto	i1l2608
  5600                           
  5601                           ;i2c1.c: 246: {
  5602                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  5603  0068  1395               	bcf	21,7	;volatile
  5604                           
  5605                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  5606  0069  0020               	movlb	0	; select bank0
  5607  006A  01DD               	clrf	_i2c1_state
  5608                           
  5609                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  5610  006B  0873               	movf	_p_i2c1_current,w
  5611  006C  3E02               	addlw	2
  5612  006D  0086               	movwf	6
  5613  006E  0187               	clrf	7
  5614  006F  0801               	movf	1,w
  5615  0070  0086               	movwf	6
  5616  0071  0187               	clrf	7
  5617  0072  0181               	clrf	1
  5618  0073  0A81               	incf	1,f
  5619                           
  5620                           ;i2c1.c: 253: p_i2c1_current = (0);
  5621  0074  01F3               	clrf	_p_i2c1_current
  5622                           
  5623                           ;i2c1.c: 255: return;
  5624  0075  0008               	return
  5625  0076                     i1l129:	
  5626                           ;i2c1.c: 260: {
  5627                           ;i2c1.c: 261: case S_MASTER_IDLE:
  5628                           
  5629                           ;i2c1.c: 256: }
  5630                           ;i2c1.c: 259: switch(i2c1_state)
  5631                           
  5632                           
  5633                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  5634  0076  18D3               	btfsc	_i2c1_object+2,1
  5635  0077  0008               	return
  5636                           
  5637                           ;i2c1.c: 264: {
  5638                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  5639  0078  0852               	movf	low ((_i2c1_object| 0+1)),w
  5640  0079  00F9               	movwf	??_I2C1_ISR
  5641  007A  0879               	movf	??_I2C1_ISR,w
  5642  007B  00F3               	movwf	_p_i2c1_current
  5643                           
  5644                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  5645  007C  0852               	movf	low ((_i2c1_object| 0+1)),w
  5646  007D  0086               	movwf	6
  5647  007E  0187               	clrf	7
  5648  007F  0801               	movf	1,w
  5649  0080  00F9               	movwf	??_I2C1_ISR
  5650  0081  0879               	movf	??_I2C1_ISR,w
  5651  0082  00DC               	movwf	_i2c1_trb_count
  5652                           
  5653                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  5654  0083  0852               	movf	low ((_i2c1_object| 0+1)),w
  5655  0084  0086               	movwf	6
  5656  0085  0187               	clrf	7
  5657  0086  3F41               	moviw [1]fsr1
  5658  0087  00F4               	movwf	_p_i2c1_trb_current
  5659                           
  5660                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  5661  0088  3003               	movlw	3
  5662  0089  00F9               	movwf	??_I2C1_ISR
  5663  008A  0879               	movf	??_I2C1_ISR,w
  5664  008B  07D2               	addwf	low ((_i2c1_object| 0+1)),f
  5665                           
  5666                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  5667  008C  0852               	movf	low ((_i2c1_object| 0+1)),w
  5668  008D  3A69               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  5669  008E  1D03               	skipz
  5670  008F  2894               	goto	i1l2496
  5671                           
  5672                           ;i2c1.c: 274: {
  5673                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  5674  0090  3066               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  5675  0091  00F9               	movwf	??_I2C1_ISR
  5676  0092  0879               	movf	??_I2C1_ISR,w
  5677  0093  00D2               	movwf	low ((_i2c1_object| 0+1))
  5678  0094                     i1l2496:	
  5679                           
  5680                           ;i2c1.c: 277: }
  5681                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  5682  0094  1053               	bcf	_i2c1_object+2,0
  5683                           
  5684                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  5685  0095  0852               	movf	low ((_i2c1_object| 0+1)),w
  5686  0096  0651               	xorwf	_i2c1_object,w
  5687  0097  1903               	btfsc	3,2
  5688                           
  5689                           ;i2c1.c: 285: {
  5690                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  5691  0098  14D3               	bsf	_i2c1_object+2,1
  5692                           
  5693                           ;i2c1.c: 288: }
  5694                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  5695  0099  0024               	movlb	4	; select bank4
  5696  009A  1416               	bsf	22,0	;volatile
  5697                           
  5698                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  5699  009B  3002               	movlw	2
  5700  009C  00F9               	movwf	??_I2C1_ISR
  5701  009D  0879               	movf	??_I2C1_ISR,w
  5702  009E  0020               	movlb	0	; select bank0
  5703  009F  00DD               	movwf	_i2c1_state
  5704                           
  5705                           ;i2c1.c: 295: }
  5706                           ;i2c1.c: 297: break;
  5707  00A0  0008               	return
  5708  00A1                     i1l134:	
  5709                           ;i2c1.c: 299: case S_MASTER_RESTART:
  5710                           
  5711                           
  5712                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  5713  00A1  0024               	movlb	4	; select bank4
  5714  00A2  1496               	bsf	22,1	;volatile
  5715                           
  5716                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  5717  00A3  3002               	movlw	2
  5718  00A4  00F9               	movwf	??_I2C1_ISR
  5719  00A5  0879               	movf	??_I2C1_ISR,w
  5720  00A6  0020               	movlb	0	; select bank0
  5721  00A7  00DD               	movwf	_i2c1_state
  5722                           
  5723                           ;i2c1.c: 309: break;
  5724  00A8  0008               	return
  5725  00A9                     i1l135:	
  5726                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  5727                           
  5728                           
  5729                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  5730  00A9  0024               	movlb	4	; select bank4
  5731  00AA  1F16               	btfss	22,6	;volatile
  5732  00AB  28B5               	goto	i1l2508
  5733                           
  5734                           ;i2c1.c: 314: {
  5735                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  5736  00AC  3001               	movlw	1
  5737  00AD  00F9               	movwf	??_I2C1_ISR
  5738  00AE  0879               	movf	??_I2C1_ISR,w
  5739  00AF  0020               	movlb	0	; select bank0
  5740  00B0  07D5               	addwf	_i2c1_object+4,f
  5741                           
  5742                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5743  00B1  3004               	movlw	4
  5744  00B2  3184  248E         	fcall	_I2C1_Stop
  5745                           
  5746                           ;i2c1.c: 317: }
  5747  00B4  0008               	return
  5748  00B5                     i1l2508:	
  5749                           
  5750                           ;i2c1.c: 318: else
  5751                           ;i2c1.c: 319: {
  5752                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  5753  00B5  0876               	movf	I2C1_ISR@i2c_address+1,w
  5754  00B6  00FA               	movwf	??_I2C1_ISR+1
  5755  00B7  0875               	movf	I2C1_ISR@i2c_address,w
  5756  00B8  00F9               	movwf	??_I2C1_ISR
  5757  00B9  36FA               	lsrf	??_I2C1_ISR+1,f
  5758  00BA  0CF9               	rrf	??_I2C1_ISR,f
  5759  00BB  0879               	movf	??_I2C1_ISR,w
  5760  00BC  0024               	movlb	4	; select bank4
  5761  00BD  0091               	movwf	17	;volatile
  5762                           
  5763                           ;i2c1.c: 324: if(i2c_address & 0x01)
  5764  00BE  1C75               	btfss	I2C1_ISR@i2c_address,0
  5765  00BF  28C6               	goto	i1l2514
  5766                           
  5767                           ;i2c1.c: 325: {
  5768                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  5769  00C0  300B               	movlw	11
  5770  00C1  00F9               	movwf	??_I2C1_ISR
  5771  00C2  0879               	movf	??_I2C1_ISR,w
  5772  00C3  0020               	movlb	0	; select bank0
  5773  00C4  00DD               	movwf	_i2c1_state
  5774                           
  5775                           ;i2c1.c: 329: }
  5776  00C5  0008               	return
  5777  00C6                     i1l2514:	
  5778                           
  5779                           ;i2c1.c: 330: else
  5780                           ;i2c1.c: 331: {
  5781                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  5782  00C6  3003               	movlw	3
  5783  00C7  00F9               	movwf	??_I2C1_ISR
  5784  00C8  0879               	movf	??_I2C1_ISR,w
  5785  00C9  0020               	movlb	0	; select bank0
  5786  00CA  00DD               	movwf	_i2c1_state
  5787                           
  5788                           ;i2c1.c: 334: }
  5789                           ;i2c1.c: 335: }
  5790                           ;i2c1.c: 337: break;
  5791  00CB  0008               	return
  5792  00CC                     i1l140:	
  5793                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
  5794                           
  5795                           
  5796                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  5797  00CC  0024               	movlb	4	; select bank4
  5798  00CD  1F16               	btfss	22,6	;volatile
  5799  00CE  28D8               	goto	i1l141
  5800                           
  5801                           ;i2c1.c: 342: {
  5802                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  5803  00CF  3001               	movlw	1
  5804  00D0  00F9               	movwf	??_I2C1_ISR
  5805  00D1  0879               	movf	??_I2C1_ISR,w
  5806  00D2  0020               	movlb	0	; select bank0
  5807  00D3  07D5               	addwf	_i2c1_object+4,f
  5808                           
  5809                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  5810  00D4  3004               	movlw	4
  5811  00D5  3184  248E         	fcall	_I2C1_Stop
  5812                           
  5813                           ;i2c1.c: 345: }
  5814  00D7  0008               	return
  5815  00D8                     i1l141:	
  5816                           
  5817                           ;i2c1.c: 346: else
  5818                           ;i2c1.c: 347: {
  5819                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  5820  00D8  1496               	bsf	22,1	;volatile
  5821                           
  5822                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  5823  00D9  0876               	movf	I2C1_ISR@i2c_address+1,w
  5824  00DA  00FA               	movwf	??_I2C1_ISR+1
  5825  00DB  0875               	movf	I2C1_ISR@i2c_address,w
  5826  00DC  00F9               	movwf	??_I2C1_ISR
  5827  00DD  087A               	movf	??_I2C1_ISR+1,w
  5828  00DE  00F9               	movwf	??_I2C1_ISR
  5829  00DF  01FA               	clrf	??_I2C1_ISR+1
  5830  00E0  3006               	movlw	6
  5831  00E1  0579               	andwf	??_I2C1_ISR,w
  5832  00E2  00FB               	movwf	??_I2C1_ISR+2
  5833  00E3  3000               	movlw	0
  5834  00E4  057A               	andwf	??_I2C1_ISR+1,w
  5835  00E5  00FC               	movwf	??_I2C1_ISR+3
  5836  00E6  30F0               	movlw	240
  5837  00E7  047B               	iorwf	??_I2C1_ISR+2,w
  5838  00E8  00F5               	movwf	I2C1_ISR@i2c_address
  5839  00E9  3000               	movlw	0
  5840  00EA  047C               	iorwf	??_I2C1_ISR+3,w
  5841  00EB  00F6               	movwf	I2C1_ISR@i2c_address+1
  5842                           
  5843                           ;i2c1.c: 357: i2c_address |= 0x0001;
  5844  00EC  1475               	bsf	I2C1_ISR@i2c_address,0
  5845                           
  5846                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  5847  00ED  0020               	movlb	0	; select bank0
  5848  00EE  01D9               	clrf	I2C1_ISR@i2c_10bit_address_restart
  5849  00EF  0AD9               	incf	I2C1_ISR@i2c_10bit_address_restart,f
  5850                           
  5851                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  5852  00F0  3002               	movlw	2
  5853  00F1  00F9               	movwf	??_I2C1_ISR
  5854  00F2  0879               	movf	??_I2C1_ISR,w
  5855  00F3  00DD               	movwf	_i2c1_state
  5856                           
  5857                           ;i2c1.c: 364: }
  5858                           ;i2c1.c: 366: break;
  5859  00F4  0008               	return
  5860  00F5                     i1l2528:	
  5861                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
  5862                           
  5863                           
  5864                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  5865  00F5  0359               	decf	I2C1_ISR@i2c_10bit_address_restart,w
  5866  00F6  1903               	btfsc	3,2
  5867  00F7  2909               	goto	i1l2548
  5868                           
  5869                           ;i2c1.c: 382: {
  5870                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  5871  00F8  0874               	movf	_p_i2c1_trb_current,w
  5872  00F9  0086               	movwf	6
  5873  00FA  0187               	clrf	7
  5874  00FB  3F40               	moviw [0]fsr1
  5875  00FC  00F5               	movwf	I2C1_ISR@i2c_address
  5876  00FD  3F41               	moviw [1]fsr1
  5877  00FE  00F6               	movwf	I2C1_ISR@i2c_address+1
  5878                           
  5879                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  5880  00FF  0874               	movf	_p_i2c1_trb_current,w
  5881  0100  0086               	movwf	6
  5882  0101  0187               	clrf	7
  5883  0102  3F43               	moviw [3]fsr1
  5884  0103  00DB               	movwf	I2C1_ISR@pi2c_buf_ptr
  5885                           
  5886                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  5887  0104  0874               	movf	_p_i2c1_trb_current,w
  5888  0105  0086               	movwf	6
  5889  0106  0187               	clrf	7
  5890  0107  3F42               	moviw [2]fsr1
  5891  0108  00DA               	movwf	I2C1_ISR@i2c_bytes_left
  5892  0109                     i1l2548:	
  5893                           ;i2c1.c: 407: }
  5894                           ;i2c1.c: 408: }
  5895                           
  5896                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
  5897                           
  5898                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
  5899                           
  5900                           ;i2c1.c: 400: else
  5901                           ;i2c1.c: 401: {
  5902                           ;i2c1.c: 403: SSP1BUF = i2c_address;
  5903                           
  5904                           ;i2c1.c: 399: }
  5905                           
  5906                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  5907                           
  5908                           ;i2c1.c: 393: {
  5909                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  5910                           
  5911                           ;i2c1.c: 391: {
  5912                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
  5913                           
  5914                           ;i2c1.c: 387: }
  5915                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
  5916                           
  5917                           
  5918                           ;i2c1.c: 409: else
  5919                           ;i2c1.c: 410: {
  5920                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  5921  0109  0875               	movf	I2C1_ISR@i2c_address,w
  5922  010A  0024               	movlb	4	; select bank4
  5923  010B  0091               	movwf	17	;volatile
  5924                           
  5925                           ;i2c1.c: 413: if(i2c_address & 0x01)
  5926  010C  1C75               	btfss	I2C1_ISR@i2c_address,0
  5927  010D  2914               	goto	i1l2554
  5928                           
  5929                           ;i2c1.c: 414: {
  5930                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  5931  010E  3005               	movlw	5
  5932  010F  00F9               	movwf	??_I2C1_ISR
  5933  0110  0879               	movf	??_I2C1_ISR,w
  5934  0111  0020               	movlb	0	; select bank0
  5935  0112  00DD               	movwf	_i2c1_state
  5936                           
  5937                           ;i2c1.c: 417: }
  5938  0113  0008               	return
  5939  0114                     i1l2554:	
  5940                           
  5941                           ;i2c1.c: 418: else
  5942                           ;i2c1.c: 419: {
  5943                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  5944  0114  3003               	movlw	3
  5945  0115  00F9               	movwf	??_I2C1_ISR
  5946  0116  0879               	movf	??_I2C1_ISR,w
  5947  0117  0020               	movlb	0	; select bank0
  5948  0118  00DD               	movwf	_i2c1_state
  5949                           
  5950                           ;i2c1.c: 422: }
  5951                           ;i2c1.c: 423: }
  5952                           ;i2c1.c: 424: break;
  5953  0119  0008               	return
  5954  011A                     i1l151:	
  5955                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
  5956                           
  5957                           
  5958                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  5959  011A  0024               	movlb	4	; select bank4
  5960  011B  1F16               	btfss	22,6	;volatile
  5961  011C  2928               	goto	i1l2562
  5962                           
  5963                           ;i2c1.c: 430: {
  5964                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  5965  011D  3001               	movlw	1
  5966  011E  00F9               	movwf	??_I2C1_ISR
  5967  011F  0879               	movf	??_I2C1_ISR,w
  5968  0120  0020               	movlb	0	; select bank0
  5969  0121  07D5               	addwf	_i2c1_object+4,f
  5970                           
  5971                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  5972  0122  0024               	movlb	4	; select bank4
  5973  0123  1316               	bcf	22,6	;volatile
  5974                           
  5975                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  5976  0124  3005               	movlw	5
  5977  0125  3184  248E         	fcall	_I2C1_Stop
  5978                           
  5979                           ;i2c1.c: 440: }
  5980  0127  0008               	return
  5981  0128                     i1l2562:	
  5982                           
  5983                           ;i2c1.c: 441: else
  5984                           ;i2c1.c: 442: {
  5985                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  5986  0128  3001               	movlw	1
  5987  0129  0020               	movlb	0	; select bank0
  5988  012A  02DA               	subwf	I2C1_ISR@i2c_bytes_left,f
  5989  012B  0A5A               	incf	I2C1_ISR@i2c_bytes_left,w
  5990  012C  1D03               	btfss	3,2
  5991  012D  2942               	goto	i1l2570
  5992                           
  5993                           ;i2c1.c: 445: {
  5994                           ;i2c1.c: 449: p_i2c1_trb_current++;
  5995  012E  3004               	movlw	4
  5996  012F  00F9               	movwf	??_I2C1_ISR
  5997  0130  0879               	movf	??_I2C1_ISR,w
  5998  0131  07F4               	addwf	_p_i2c1_trb_current,f
  5999                           
  6000                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  6001  0132  3001               	movlw	1
  6002  0133  02DC               	subwf	_i2c1_trb_count,f
  6003  0134  1D03               	btfss	3,2
  6004  0135  293A               	goto	i1l155
  6005                           
  6006                           ;i2c1.c: 453: {
  6007                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  6008  0136  3000               	movlw	0
  6009  0137  3184  248E         	fcall	_I2C1_Stop
  6010                           
  6011                           ;i2c1.c: 455: }
  6012  0139  0008               	return
  6013  013A                     i1l155:	
  6014                           
  6015                           ;i2c1.c: 456: else
  6016                           ;i2c1.c: 457: {
  6017                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  6018  013A  0024               	movlb	4	; select bank4
  6019  013B  1496               	bsf	22,1	;volatile
  6020                           
  6021                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  6022  013C  3002               	movlw	2
  6023  013D  00F9               	movwf	??_I2C1_ISR
  6024  013E  0879               	movf	??_I2C1_ISR,w
  6025  013F  0020               	movlb	0	; select bank0
  6026  0140  00DD               	movwf	_i2c1_state
  6027                           
  6028                           ;i2c1.c: 469: }
  6029                           ;i2c1.c: 470: }
  6030  0141  0008               	return
  6031  0142                     i1l2570:	
  6032                           
  6033                           ;i2c1.c: 471: else
  6034                           ;i2c1.c: 472: {
  6035                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  6036  0142  085B               	movf	I2C1_ISR@pi2c_buf_ptr,w
  6037  0143  0086               	movwf	6
  6038  0144  0187               	clrf	7
  6039  0145  0801               	movf	1,w
  6040  0146  0024               	movlb	4	; select bank4
  6041  0147  0091               	movwf	17	;volatile
  6042  0148  3001               	movlw	1
  6043  0149  00F9               	movwf	??_I2C1_ISR
  6044  014A  0879               	movf	??_I2C1_ISR,w
  6045  014B  0020               	movlb	0	; select bank0
  6046  014C  07DB               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  6047                           
  6048                           ;i2c1.c: 475: }
  6049                           ;i2c1.c: 476: }
  6050                           ;i2c1.c: 477: break;
  6051  014D  0008               	return
  6052  014E                     i1l158:	
  6053                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
  6054                           
  6055                           
  6056                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  6057  014E  0024               	movlb	4	; select bank4
  6058  014F  1F16               	btfss	22,6	;volatile
  6059  0150  295C               	goto	i1l159
  6060                           
  6061                           ;i2c1.c: 483: {
  6062                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  6063  0151  3001               	movlw	1
  6064  0152  00F9               	movwf	??_I2C1_ISR
  6065  0153  0879               	movf	??_I2C1_ISR,w
  6066  0154  0020               	movlb	0	; select bank0
  6067  0155  07D5               	addwf	_i2c1_object+4,f
  6068                           
  6069                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  6070  0156  3004               	movlw	4
  6071  0157  3184  248E         	fcall	_I2C1_Stop
  6072                           
  6073                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  6074  0159  0024               	movlb	4	; select bank4
  6075  015A  1316               	bcf	22,6	;volatile
  6076                           
  6077                           ;i2c1.c: 493: }
  6078  015B  0008               	return
  6079  015C                     i1l159:	
  6080                           
  6081                           ;i2c1.c: 494: else
  6082                           ;i2c1.c: 495: {
  6083                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  6084  015C  1596               	bsf	22,3	;volatile
  6085                           
  6086                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  6087  015D  3008               	movlw	8
  6088  015E  00F9               	movwf	??_I2C1_ISR
  6089  015F  0879               	movf	??_I2C1_ISR,w
  6090  0160  0020               	movlb	0	; select bank0
  6091  0161  00DD               	movwf	_i2c1_state
  6092                           
  6093                           ;i2c1.c: 498: }
  6094                           ;i2c1.c: 499: break;
  6095  0162  0008               	return
  6096  0163                     i1l2582:	
  6097                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
  6098                           
  6099                           
  6100                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  6101  0163  3008               	movlw	8
  6102  0164  00F9               	movwf	??_I2C1_ISR
  6103  0165  0879               	movf	??_I2C1_ISR,w
  6104  0166  00DD               	movwf	_i2c1_state
  6105                           
  6106                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  6107  0167  0024               	movlb	4	; select bank4
  6108  0168  1596               	bsf	22,3	;volatile
  6109                           
  6110                           ;i2c1.c: 511: break;
  6111  0169  0008               	return
  6112  016A                     i1l2586:	
  6113                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
  6114                           
  6115                           
  6116                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  6117  016A  0024               	movlb	4	; select bank4
  6118  016B  0811               	movf	17,w	;volatile
  6119  016C  00F9               	movwf	??_I2C1_ISR
  6120  016D  0020               	movlb	0	; select bank0
  6121  016E  085B               	movf	I2C1_ISR@pi2c_buf_ptr,w
  6122  016F  0086               	movwf	6
  6123  0170  0187               	clrf	7
  6124  0171  0879               	movf	??_I2C1_ISR,w
  6125  0172  0081               	movwf	1
  6126  0173  3001               	movlw	1
  6127  0174  00F9               	movwf	??_I2C1_ISR
  6128  0175  0879               	movf	??_I2C1_ISR,w
  6129  0176  07DB               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  6130                           
  6131                           ;i2c1.c: 519: if(--i2c_bytes_left)
  6132  0177  3001               	movlw	1
  6133  0178  02DA               	subwf	I2C1_ISR@i2c_bytes_left,f
  6134  0179  1903               	btfsc	3,2
  6135  017A  2983               	goto	i1l163
  6136                           
  6137                           ;i2c1.c: 520: {
  6138                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  6139  017B  0024               	movlb	4	; select bank4
  6140  017C  1296               	bcf	22,5	;volatile
  6141                           
  6142                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  6143  017D  3006               	movlw	6
  6144  017E  00F9               	movwf	??_I2C1_ISR
  6145  017F  0879               	movf	??_I2C1_ISR,w
  6146  0180  0020               	movlb	0	; select bank0
  6147  0181  00DD               	movwf	_i2c1_state
  6148                           
  6149                           ;i2c1.c: 530: }
  6150  0182  2987               	goto	i1l2598
  6151  0183                     i1l163:	
  6152                           
  6153                           ;i2c1.c: 531: else
  6154                           ;i2c1.c: 532: {
  6155                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  6156  0183  0024               	movlb	4	; select bank4
  6157  0184  1696               	bsf	22,5	;volatile
  6158                           
  6159                           ;i2c1.c: 538: I2C1_FunctionComplete();
  6160  0185  3184  24E4         	fcall	_I2C1_FunctionComplete
  6161  0187                     i1l2598:	
  6162                           
  6163                           ;i2c1.c: 539: }
  6164                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  6165  0187  0024               	movlb	4	; select bank4
  6166  0188  1616               	bsf	22,4	;volatile
  6167                           
  6168                           ;i2c1.c: 543: break;
  6169  0189  0008               	return
  6170  018A                     i1l2600:	
  6171                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
  6172                           
  6173                           
  6174                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  6175                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  6176  018A  3000               	movlw	0
  6177  018B  3184  248E         	fcall	_I2C1_Stop
  6178                           
  6179                           ;i2c1.c: 550: break;
  6180  018D  0008               	return
  6181  018E                     i1l2602:	
  6182                           ;i2c1.c: 552: default:
  6183                           
  6184                           
  6185                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  6186  018E  3001               	movlw	1
  6187  018F  00F9               	movwf	??_I2C1_ISR
  6188  0190  0879               	movf	??_I2C1_ISR,w
  6189  0191  0020               	movlb	0	; select bank0
  6190  0192  07D5               	addwf	_i2c1_object+4,f
  6191                           
  6192                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  6193  0193  3006               	movlw	6
  6194  0194  3184  248E         	fcall	_I2C1_Stop
  6195                           
  6196                           ;i2c1.c: 560: }
  6197                           
  6198                           ;i2c1.c: 558: break;
  6199  0196  0008               	return
  6200  0197                     i1l2608:	
  6201  0197  0020               	movlb	0	; select bank0
  6202  0198  085D               	movf	_i2c1_state,w
  6203                           
  6204                           ; Switch size 1, requested type "space"
  6205                           ; Number of cases is 11, Range of values is 0 to 11
  6206                           ; switch strategies available:
  6207                           ; Name         Instructions Cycles
  6208                           ; direct_byte           30     6 (fixed)
  6209                           ; simple_byte           34    18 (average)
  6210                           ; jumptable            260     6 (fixed)
  6211                           ;	Chosen strategy is direct_byte
  6212  0199  0084               	movwf	4
  6213  019A  300C               	movlw	12
  6214  019B  0204               	subwf	4,w
  6215  019C  1803               	skipnc
  6216  019D  298E               	goto	i1l2602
  6217  019E  3184               	movlp	high i1S3274
  6218  019F  3504               	lslf	4,w
  6219  01A0  3E76               	addlw	low i1S3274
  6220  01A1  0082               	movwf	2
  6221  01A2  0008               	return
  6222  01A3                     __end_of_I2C1_ISR:	
  6223                           
  6224                           	psect	swtext1
  6225  0476                     __pswtext1:	
  6226  0476                     i1S3274:	
  6227  0476  3180  2876         	ljmp	i1l129
  6228  0478  3180  28A1         	ljmp	i1l134
  6229  047A  3180  28F5         	ljmp	i1l2528
  6230  047C  3181  291A         	ljmp	i1l151
  6231  047E  3181  298A         	ljmp	i1l2600
  6232  0480  3181  294E         	ljmp	i1l158
  6233  0482  3181  2963         	ljmp	i1l2582
  6234  0484  3181  298A         	ljmp	i1l2600
  6235  0486  3181  296A         	ljmp	i1l2586
  6236  0488  3181  298E         	ljmp	i1l2602
  6237  048A  3180  28A9         	ljmp	i1l135
  6238  048C  3180  28CC         	ljmp	i1l140
  6239                           
  6240                           	psect	text35
  6241  048E                     __ptext35:	
  6242 ;; *************** function _I2C1_Stop *****************
  6243 ;; Defined at:
  6244 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  completion_c    1    wreg     enum E2966
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  completion_c    1    1[COMMON] enum E2966
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;Total ram usage:        2 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_I2C1_ISR
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           
  6272                           ;psect for function _I2C1_Stop
  6273  048E                     _I2C1_Stop:	
  6274                           
  6275                           ;incstack = 0
  6276                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  6277                           ;I2C1_Stop@completion_code stored from wreg
  6278  048E  00F8               	movwf	I2C1_Stop@completion_code
  6279                           
  6280                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  6281  048F  0024               	movlb	4	; select bank4
  6282  0490  1516               	bsf	22,2	;volatile
  6283                           
  6284                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  6285  0491  0873               	movf	_p_i2c1_current,w
  6286  0492  3E02               	addlw	2
  6287  0493  0086               	movwf	6
  6288  0494  0187               	clrf	7
  6289  0495  0801               	movf	1,w
  6290  0496  1903               	btfsc	3,2
  6291  0497  2CA3               	goto	i1l2426
  6292                           
  6293                           ;i2c1.c: 588: {
  6294                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  6295  0498  0878               	movf	I2C1_Stop@completion_code,w
  6296  0499  00F7               	movwf	??_I2C1_Stop
  6297  049A  0873               	movf	_p_i2c1_current,w
  6298  049B  3E02               	addlw	2
  6299  049C  0086               	movwf	6
  6300  049D  0187               	clrf	7
  6301  049E  0801               	movf	1,w
  6302  049F  0086               	movwf	6
  6303  04A0  0187               	clrf	7
  6304  04A1  0877               	movf	??_I2C1_Stop,w
  6305  04A2  0081               	movwf	1
  6306  04A3                     i1l2426:	
  6307                           
  6308                           ;i2c1.c: 591: }
  6309                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  6310  04A3  0020               	movlb	0	; select bank0
  6311  04A4  01DD               	clrf	_i2c1_state
  6312  04A5  0008               	return
  6313  04A6                     __end_of_I2C1_Stop:	
  6314                           
  6315                           	psect	text36
  6316  04E4                     __ptext36:	
  6317 ;; *************** function _I2C1_FunctionComplete *****************
  6318 ;; Defined at:
  6319 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;Total ram usage:        1 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_I2C1_ISR
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           
  6347                           ;psect for function _I2C1_FunctionComplete
  6348  04E4                     _I2C1_FunctionComplete:	
  6349                           
  6350                           ;i2c1.c: 567: p_i2c1_trb_current++;
  6351                           
  6352                           ;incstack = 0
  6353                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
  6354  04E4  3004               	movlw	4
  6355  04E5  00F7               	movwf	??_I2C1_FunctionComplete
  6356  04E6  0877               	movf	??_I2C1_FunctionComplete,w
  6357  04E7  07F4               	addwf	_p_i2c1_trb_current,f
  6358                           
  6359                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  6360  04E8  3001               	movlw	1
  6361  04E9  0020               	movlb	0	; select bank0
  6362  04EA  02DC               	subwf	_i2c1_trb_count,f
  6363  04EB  1D03               	btfss	3,2
  6364  04EC  2CF2               	goto	i1l170
  6365                           
  6366                           ;i2c1.c: 571: {
  6367                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  6368  04ED  3004               	movlw	4
  6369  04EE  00F7               	movwf	??_I2C1_FunctionComplete
  6370  04EF  0877               	movf	??_I2C1_FunctionComplete,w
  6371  04F0  00DD               	movwf	_i2c1_state
  6372                           
  6373                           ;i2c1.c: 573: }
  6374  04F1  0008               	return
  6375  04F2                     i1l170:	
  6376                           
  6377                           ;i2c1.c: 574: else
  6378                           ;i2c1.c: 575: {
  6379                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  6380  04F2  01DD               	clrf	_i2c1_state
  6381  04F3  0ADD               	incf	_i2c1_state,f
  6382  04F4  0008               	return
  6383  04F5                     __end_of_I2C1_FunctionComplete:	
  6384                           
  6385                           	psect	text37
  6386  0573                     __ptext37:	
  6387 ;; *************** function _I2C1_BusCollisionISR *****************
  6388 ;; Defined at:
  6389 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_INTERRUPT_InterruptManager
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           
  6417                           ;psect for function _I2C1_BusCollisionISR
  6418  0573                     _I2C1_BusCollisionISR:	
  6419                           
  6420                           ;incstack = 0
  6421                           ; Regs used in _I2C1_BusCollisionISR: []
  6422  0573  0008               	return
  6423  0574                     __end_of_I2C1_BusCollisionISR:	
  6424  007E                     btemp	set	126	;btemp
  6425  007E                     int$flags	set	126
  6426  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         31
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     49      80
    BANK1            80      0       8
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E2966 size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK0[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> main@txt(BANK0[20]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 20
		 -> main@txt(BANK0[20]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> main@txt(BANK0[20]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 20
		 -> main@txt(BANK0[20]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> main@txt(BANK0[20]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 20
		 -> main@txt(BANK0[20]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 20
		 -> main@txt(BANK0[20]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK0[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E2966 size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK0[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK0[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E2966 size(1) Largest target is 1
		 -> I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), 

    F3078.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E2966 size(1) Largest target is 1
		 -> I2C_Write_Byte_Single_Reg@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    F3073.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK0[4]), I2C1_MasterWrite@trBlock(BANK0[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E2966 size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK0[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    S115$pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    S127$pTrFlag	PTR enum E2966 size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    p_i2c1_current.pTrFlag	PTR enum E2966 size(1) Largest target is 2
		 -> I2C_Read_Byte_Single_Reg@b(COMMON[1]), I2C_Read_Byte_Single_Reg@status(COMMON[1]), I2C_Write_Byte_Single_Reg@status(BANK0[1]), I2C_Write_Byte_Single_Reg@temp(BANK0[2]), 

    S127$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK0[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK0[4]), I2C1_MasterWrite@trBlock(BANK0[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S138$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S138$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _I2C_Write_Byte_Single_Reg->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    4044
                                             24 BANK0     25    25      0
          _I2C_Write_Byte_Single_Reg
                  _SPI2_Exchange8bit
                  _SYSTEM_Initialize
                             ___wmul
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               8     6      2     120
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1486
                                             17 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1165
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     324
                   _EPWM2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     108
           _TMR4_SetInterruptHandler
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     108
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     108
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Byte_Single_Reg                            8     7      1    1463
                                             14 BANK0      8     7      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     3      4    1074
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             7     3      4     354
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 4     2      2     388
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Write_Byte_Single_Reg
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SPI2_Exchange8bit
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
       _TMR4_StartTimer
     _WDT_Initialize
   ___wmul
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
   _TMR4_ISR
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       8       7       10.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      66      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      66      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 01 23:51:24 2017

        __end_of_TMR2_SetInterruptHandler 055B                                         pc 0002  
                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 0022  
                         _timer0ReloadVal 006F                                       l273 0518  
                                     l800 042E                                       _PR2 001B  
                                     _PR4 0416                              __CFG_CPD$OFF 0000  
                         _TMR2_Initialize 04D0                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                __end_of_EPWM2_Initialize 0510                              __CFG_LVP$OFF 0000  
                        __end_of_I2C1_ISR 01A3                                      l1067 0297  
                                    l2302 032E                                      l2304 033A  
                                    l2312 034F                                      l2250 02E1  
                                    l2252 02E6                                      l2308 0346  
                                    l2246 02DA                                      l2256 02ED  
                                    l2280 0307                                      l3232 01DA  
                                    l3216 01AA                                      l2290 0322  
                                    l2442 0251                                      l2436 0375  
                                    l2452 026F                                      l3236 01F8  
                                    l2286 0319                                      l2278 02FB  
                                    l3246 0206                                      l3168 0428  
                                    l3248 0222                                      l2658 03B9  
                                    l2666 0382                                      l2676 03E0  
                                    l2668 038D                                      u1015 02FE  
                                    u1105 0340                                      u1035 0308  
                                    u1115 0347                                      u1045 0312  
                                    u1055 031A                                      u1085 0331  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u1835 042F  
                                    u1845 0434                                      u1925 01BB  
                                    u1955 0214                                      u1967 0230  
                                    u1977 0243                                      _TMR0 0015  
                                    _TMR2 001A                                      _TMR4 0415  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 01A3  
                                    _itoa 03A1                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                    ??_I2C1_MasterTRBInsert 0022  
                                    btemp 007E                                      _utoa 024B  
                           __CFG_BOREN$ON 0000                                      start 0043  
           I2C_Write_Byte_Single_Reg@info 002E                             __CFG_MCLRE$ON 0000  
           I2C_Write_Byte_Single_Reg@temp 0033                ??_TMR4_SetInterruptHandler 0022  
          I2C1_MasterWriteTRBBuild@length 0021                   __end_of_TMR0_Initialize 04D0  
                              _i2c1_state 005D            ??_TMR0_DefaultInterruptHandler 0077  
          __size_of_OSCILLATOR_Initialize 0005                 I2C1_MasterTRBInsert@count 0023  
           __end_of_OSCILLATOR_Initialize 0566                 I2C1_MasterTRBInsert@pflag 0021  
                                   ?_main 0077                                     ?_itoa 0031  
                       __end_of_I2C1_Stop 04A6                             __CFG_WDTE$OFF 0000  
                                   ?_utoa 0028                                     _T2CON 001C  
                                   _T4CON 0417                           __end_of___lwdiv 0327  
                                   i1l140 00CC                                     i1l141 00D8  
                                   i1l134 00A1                                     i1l151 011A  
                                   i1l135 00A9                                     i1l129 0076  
                                   i1l170 04F2                                     i1l163 0183  
                                   i1l155 013A                                     i1l251 0034  
                                   i1l245 0010                                     i1l158 014E  
                                   i1l159 015C                                     i1l247 001C  
                                   i1l255 003E                                     i1l249 0028  
                         __end_of___lwmod 0354                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
       __size_of_TMR0_SetInterruptHandler 0006              __end_of_I2C1_BusCollisionISR 0574  
                         _TMR4_Initialize 04A6                 ?_TMR0_SetInterruptHandler 0020  
                       ??_I2C1_Initialize 0020                          __end_of_TMR0_ISR 0503  
                        __end_of_TMR2_ISR 0534                          __end_of_TMR4_ISR 0528  
                          _WDT_Initialize 0566                                     pclath 000A  
                                   utoa@c 002F                                     utoa@v 002D  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 056D           I2C1_MasterWriteTRBBuild@address 0022  
                         __initialization 0045                     I2C1_MasterWrite@pdata 002D  
                   I2C1_MasterWrite@pflag 002A                         _SPI2_Exchange8bit 0510  
                            __end_of_main 024B                              __end_of_itoa 03C5  
                            __end_of_utoa 02AD                        ?_SPI2_Exchange8bit 0077  
                 __end_of_TMR2_Initialize 04E4               ?_INTERRUPT_InterruptManager 0077  
                             _i2c1_object 0051                  _TMR2_SetInterruptHandler 0555  
                                  ??_main 0038                                    ??_itoa 0035  
                                  ??_utoa 002C                            __CFG_PLLEN$OFF 0000  
                __size_of_SPI2_Initialize 0007                       ??_SPI2_Exchange8bit 0020  
                  __end_of_WDT_Initialize 056A                                    _CCP2AS 029C  
                                  i1S3274 0476                                    _EEADRH 0192  
                                  _EEADRL 0191                                    _CCPR2H 0299  
                                  _EEDATH 0194                                    _CCPR2L 0298  
                                  _EEDATL 0193                                    _EECON2 0196  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    i1l2600 018A  
                                  i1l2426 04A3                                    i1l2602 018E  
                                  i1l2514 00C6                                    i1l2508 00B5  
                                  i1l2528 00F5                                    i1l2608 0197  
                                  i1l2570 0142                                    i1l2562 0128  
                                  i1l2554 0114                                    i1l2548 0109  
                                  i1l2582 0163                                    i1l2496 0094  
                                  i1l2586 016A                                    i1l2598 0187  
                                  _OSCCON 0099                                    _WDTCON 0097  
                         _TMR4_StartTimer 056A                         ?_I2C1_MasterWrite 0027  
                          __CFG_PWRTE$OFF 0000                 __end_of_SPI2_Exchange8bit 051C  
                      ??_I2C1_MasterWrite 002B                            _p_i2c1_current 0073  
                                  ___wmul 0425                            __CFG_STVREN$ON 0000  
                               ??___lwdiv 0024                                 ??___lwmod 0024  
              ??_I2C1_MasterWriteTRBBuild 0024                          ?_TMR0_Initialize 0077  
                 __end_of_TMR4_Initialize 04BB                                 ?_I2C1_ISR 0077  
                                  _strlen 037C      __end_of_TMR4_DefaultInterruptHandler 0571  
   __size_of_TMR4_DefaultInterruptHandler 0001              _TMR4_DefaultInterruptHandler 0570  
                                  itoa@cp 0036                           ?_WDT_Initialize 0077  
                 __end_of_TMR2_StartTimer 0570  TMR4_SetInterruptHandler@InterruptHandler 0020  
TMR2_SetInterruptHandler@InterruptHandler 0020  TMR0_SetInterruptHandler@InterruptHandler 0020  
           I2C1_MasterWriteTRBBuild@pdata 0020                         _SYSTEM_Initialize 0441  
                 __end_of__initialization 005F                        ?_SYSTEM_Initialize 0077  
                          _i2c1_trb_count 005C                     _I2C1_FunctionComplete 04E4  
                    _I2C1_BusCollisionISR 0573                            __pcstackCOMMON 0077  
                  I2C1_MasterWrite@length 0027                              __pidataBANK1 0534  
                     ??_SYSTEM_Initialize 0023                                 ?_TMR0_ISR 0077  
                               ?_TMR2_ISR 0077                                 ?_TMR4_ISR 0077  
                            __functionset 0058                                ??_I2C1_ISR 0079  
                        ?_TMR2_Initialize 0077                            _OPTION_REGbits 0095  
           ?_TMR4_DefaultInterruptHandler 0077                         ?_EPWM2_Initialize 0077  
                 __end_of_TMR4_StartTimer 056D                 __end_of_SYSTEM_Initialize 045C  
                      ??_EPWM2_Initialize 0020                         ??_SPI2_Initialize 0020  
                              __pbssBANK0 0051                     _TMR4_InterruptHandler 0069  
              __size_of_SPI2_Exchange8bit 000C                     ?_I2C1_BusCollisionISR 0077  
                              __pmaintext 01A3          __end_of_TMR0_SetInterruptHandler 0561  
                                 ?___wmul 0020                                ??_TMR0_ISR 0077  
                              ??_TMR2_ISR 0077                                ??_TMR4_ISR 0077  
                              __pintentry 0004                           _I2C1_Initialize 045C  
                                 _CCP2CON 029A                          ?_TMR4_Initialize 0077  
                                 _APFCON0 011D                                   _APFCON1 011E  
                                 ?_strlen 0020                                 _I2C1_Stop 048E  
                                 _OSCTUNE 0098                                   _PWM2CON 029B  
                                 _SSP1ADD 0212                                   _SSP2ADD 021A  
                                 _SSP1BUF 0211                                   _SSP2BUF 0219  
                        ?_TMR2_StartTimer 0077             I2C1_MasterTRBInsert@ptrb_list 0020  
                  ?_I2C1_FunctionComplete 0077             __size_of_I2C1_MasterTRBInsert 0045  
              ??_TMR2_SetInterruptHandler 0022                        _p_i2c1_trb_current 0074  
                         __size_of___wmul 001C                                   ___lwdiv 02F2  
                                 ___lwmod 0327                                   __ptext1 037C  
                                 __ptext2 03A1                                   __ptext3 024B  
                                 __ptext4 0327                                   __ptext5 02F2  
                                 __ptext6 0425                                   __ptext7 0441  
                                 __ptext8 0566                                   __ptext9 04A6  
                         __size_of_strlen 0025                     _OSCILLATOR_Initialize 0561  
                               _T2CONbits 001C                                 _T4CONbits 0417  
                ??_PIN_MANAGER_Initialize 0020         __size_of_TMR4_SetInterruptHandler 0006  
               ?_TMR4_SetInterruptHandler 0020                                ?_I2C1_Stop 0077  
                         __displaycontrol 0070                __size_of_SYSTEM_Initialize 001B  
                                 main@idx 004E                      I2C1_ISR@pi2c_buf_ptr 005B  
                                 clrloop0 054A                          ?_TMR4_StartTimer 0077  
                                 main@txt 003A                      end_of_initialization 005F  
          ??_TMR4_DefaultInterruptHandler 0077                                   itoa@buf 0037  
                                 init_ram 0543                                   itoa@val 0031  
                                 initloop 0544                    ??_I2C1_BusCollisionISR 0077  
                 __end_of_I2C1_Initialize 0476                                   utoa@buf 0030  
                                 utoa@val 0028                                   strlen@s 0026  
                        ??_WDT_Initialize 0020                  _TMR0_SetInterruptHandler 055B  
               __size_of_I2C1_MasterWrite 0028                         __size_of_I2C1_ISR 0140  
                        __CFG_FOSC$INTOSC 0000        __size_of_I2C_Write_Byte_Single_Reg 0021  
              ?_I2C_Write_Byte_Single_Reg 002E         I2C1_ISR@i2c_10bit_address_restart 0059  
                   SPI2_Exchange8bit@data 0020                             __entrymodeset 0072  
                 I2C1_MasterWrite@address 0028      __end_of_TMR2_DefaultInterruptHandler 0572  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 0571  
                          __end_of___wmul 0441                   I2C1_MasterWrite@trBlock 0062  
                       __size_of_TMR0_ISR 000E                  I2C1_Stop@completion_code 0078  
                       __size_of_TMR2_ISR 000C                         __size_of_TMR4_ISR 000C  
                  ?_OSCILLATOR_Initialize 0077                           _SPI2_Initialize 053C  
                          __end_of_strlen 03A1                       start_initialization 0045  
                             ??_I2C1_Stop 0077                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 001F         __size_of_I2C1_MasterWriteTRBBuild 0020  
       __end_of_I2C_Write_Byte_Single_Reg 03E6                 ?_I2C1_MasterWriteTRBBuild 0020  
                        ?_I2C1_Initialize 0077                 __size_of_EPWM2_Initialize 000D  
                                ??___wmul 0024                               _CCPTMRSbits 029E  
                             __pdataBANK1 00A0             ?_TMR2_DefaultInterruptHandler 0077  
                                ??_strlen 0022              I2C1_MasterWriteTRBBuild@ptrb 0026  
                             __pbssCOMMON 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                  __size_of_TMR2_Initialize 0014  
                           _i2c1_tr_queue 0066                   ??_I2C1_FunctionComplete 0077  
                   _TMR0_InterruptHandler 006D                                 __pnvBANK0 0069  
                        ___lwdiv@dividend 0022                    _PIN_MANAGER_Initialize 0406  
                 __end_of_SPI2_Initialize 0543          __end_of_TMR4_SetInterruptHandler 0555  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
                               __numlines 0057                                  _I2C1_ISR 0063  
            ??_INTERRUPT_InterruptManager 007D                                 __pswtext1 0476  
                        _I2C1_MasterWrite 0354              __end_of_I2C1_MasterTRBInsert 02F2  
                __size_of_TMR4_Initialize 0015                          ___lwdiv@quotient 0025  
                  I2C1_MasterRead@trBlock 005E                         ??_TMR0_Initialize 0022  
                          ___wmul@product 0024                                  _LATCbits 010E  
                               clear_ram0 0549                                  _PIE1bits 0091  
                                _PIE2bits 0092                                  _PIE3bits 0093  
                __size_of_TMR2_StartTimer 0003       __size_of_INTERRUPT_InterruptManager 003F  
              ??_TMR0_SetInterruptHandler 0022                                  _PIR1bits 0011  
                                _PIR2bits 0012                                  _PIR3bits 0013  
                                _SSP1CON1 0215                                  _SSP1CON3 0217  
                                _SSP2CON1 021D                                  _TMR0_ISR 04F5  
                                _TMR2_ISR 0528                                  _TMR4_ISR 051C  
                                _PSTR2CON 029D                                  _SSP1STAT 0214  
                                _SSP2STAT 021C                         ___wmul@multiplier 0020  
                               main@nTemp 004F            ??_TMR2_DefaultInterruptHandler 0077  
       __size_of_TMR2_SetInterruptHandler 0006                 ?_TMR2_SetInterruptHandler 0020  
             ??_I2C_Write_Byte_Single_Reg 002F                         ??_TMR2_Initialize 0022  
                              _EECON1bits 0195                  __size_of_TMR4_StartTimer 0003  
                        _EPWM2_Initialize 0503             __size_of_I2C1_BusCollisionISR 0001  
                  I2C1_ISR@i2c_bytes_left 005A                          ?_SPI2_Initialize 0077  
                 ??_OSCILLATOR_Initialize 0020                          __size_of___lwdiv 0035  
                        __size_of___lwmod 002D          __end_of_I2C1_MasterWriteTRBBuild 0406  
                _TMR4_SetInterruptHandler 054F                           ___lwdiv@divisor 0020  
                     I2C1_ISR@i2c_address 0075                           ___lwdiv@counter 0027  
                                __ptext10 056A                                  __ptext11 054F  
                                __ptext20 045C                                  __ptext12 04D0  
                                __ptext21 0503                                  __ptext13 056D  
                                __ptext30 0528                                  __ptext22 0510  
                                __ptext14 0555                                  __ptext31 0571  
                                __ptext23 03C5                                  __ptext15 04BB  
                                __ptext32 04F5                                  __ptext24 0354  
                                __ptext16 055B                                  __ptext33 0572  
                                __ptext25 03E6                                  __ptext17 053C  
                                __ptext34 0063                                  __ptext26 02AD  
                                __ptext18 0406                                  __ptext35 048E  
                                __ptext19 0561                                  __ptext36 04E4  
                                __ptext28 051C                                  __ptext37 0573  
                                __ptext29 0570                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                              _SSP2CON1bits 021D  
         I2C_Write_Byte_Single_Reg@device 0032                         ??_TMR4_Initialize 0022  
                           __size_of_main 00A8                             __size_of_itoa 0024  
                           __size_of_utoa 0062      __end_of_TMR0_DefaultInterruptHandler 0573  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0572  
         I2C_Write_Byte_Single_Reg@status 0035                      _I2C1_MasterTRBInsert 02AD  
               _I2C_Write_Byte_Single_Reg 03C5                                  int$flags 007E  
                        __displayfunction 0071                         ??_TMR2_StartTimer 0020  
      __end_of_INTERRUPT_InterruptManager 0043                _INTERRUPT_InterruptManager 0004  
                            _SSP2STATbits 021C                         LCDsetCursor@F3232 00A0  
                              _INTCONbits 000B                                  itoa@base 0033  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                        ___lwmod@dividend 0022                   ?_PIN_MANAGER_Initialize 0077  
                __end_of_I2C1_MasterWrite 037C                         __CFG_CLKOUTEN$OFF 0000  
          __size_of_I2C1_FunctionComplete 0011             __end_of_I2C1_FunctionComplete 04F5  
                   ?_I2C1_MasterTRBInsert 0020             ?_TMR0_DefaultInterruptHandler 0077  
                       ??_TMR4_StartTimer 0020                  __size_of_I2C1_Initialize 001A  
                                utoa@base 002A                                _OPTION_REG 0095  
                         ___lwmod@divisor 0020                           _TMR0_Initialize 04BB  
                                strlen@cp 0027                           ___lwmod@counter 0025  
                _I2C1_MasterWriteTRBBuild 03E6            __end_of_PIN_MANAGER_Initialize 0425  
                      __size_of_I2C1_Stop 0018                     _TMR2_InterruptHandler 006B  
                           __backlightval 0056  
